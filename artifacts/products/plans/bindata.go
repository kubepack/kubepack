// Package plans Code generated by go-bindata. (@generated) DO NOT EDIT.
// sources:
// appscode-plans/appscode-community.json
// bytebuilders-plans/bytebuilders-community.json
// guard-plans/guard-community.json
// kubeci-plans/kubeci-community.json
// kubed-plans/kubed-community.json
// kubedb-plans/kubedb-community.json
// kubedb-plans/kubedb-enterprise.json
// kubeform-plans/kubeform-community.json
// kubeform-plans/kubeform-enterprise.json
// kubeshield-plans/kubeshield-community.json
// kubevault-plans/kubevault-community.json
// kubevault-plans/kubevault-enterprise.json
// pharmer-plans/pharmer-community.json
// searchlight-plans/searchlight-community.json
// service-broker-plans/servicebroker-community.json
// stash-cli-plans/stash-kubectl-plugin-community.json
// stash-elasticsearch-plans/elasticsearch-community.json
// stash-mongodb-plans/mongodb-community.json
// stash-mysql-plans/mysql-community.json
// stash-percona-xtradb-plans/percona-xtradb-community.json
// stash-plans/stash-community.json
// stash-plans/stash-enterprise.json
// stash-postgres-plans/postgresql-community.json
// swift-plans/swift-community.json
// voyager-plans/voyager-community.json
// voyager-plans/voyager-enterprise.json
package plans

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// ModTime return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appscodePlansAppscodeCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4b\x03\x31\x10\x85\xef\xfb\x2b\x86\x9c\xb5\x15\x44\x90\xbd\x69\x0b\xa2\xd0\x52\xd0\x43\x6f\x32\x4d\x06\x36\x36\xc9\x84\x64\x52\x28\xb2\xff\x5d\xb2\xdb\xdd\x82\x87\x1e\x13\xbe\xf9\xde\xe3\xfd\x36\x00\xca\x93\xa0\x41\x41\xd5\x42\x7d\x03\xa8\x80\x9e\x54\x0b\x0a\x63\xcc\x9a\x0d\xdd\x6b\xf6\xbe\x04\x2b\x67\x75\x37\x12\x3a\x11\x8a\xe5\xf0\x65\x3d\x65\x41\x1f\x55\x0b\xa1\x38\xd7\x00\xf4\x15\x51\x39\x92\xbe\x0a\xad\xa9\xba\xe8\x30\x7c\xbf\x05\xfd\xf8\xb9\xfd\x79\x7d\xda\xec\x9f\xf7\xb3\x6f\x4a\x7c\x89\x31\xaf\xd8\x10\xac\xfe\x27\xc6\xc4\xa6\x68\x79\x5f\x0f\xa6\xc4\x66\x30\xf1\x07\xbb\xf5\xce\x6e\x77\x9b\x99\xeb\x30\x8f\x2a\x2d\xf6\x44\xd3\xf7\xa1\x04\xe3\x68\x6e\x04\xa0\x4a\x72\x15\xeb\x44\x62\x6e\x97\xcb\x11\xc8\x8b\x63\x39\x50\x44\x7d\x5c\x68\xf6\x97\xe3\xdb\x8b\x0c\x48\x7f\x89\x41\xcf\x25\x88\x6a\xe1\x61\x1a\xaa\xa4\x44\x41\x9f\xeb\x71\xc9\x66\xaa\x63\x83\x50\x3a\xe1\xd0\xc0\x73\x90\x4e\x5d\x97\x13\x94\x92\x6b\xd3\xbe\xe9\xff\x02\x00\x00\xff\xff\x1d\x8e\xd1\x18\xa1\x01\x00\x00")

func appscodePlansAppscodeCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_appscodePlansAppscodeCommunityJson,
		"appscode-plans/appscode-community.json",
	)
}

func appscodePlansAppscodeCommunityJson() (*asset, error) {
	bytes, err := appscodePlansAppscodeCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "appscode-plans/appscode-community.json", size: 417, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bytebuildersPlansBytebuildersCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x43\xce\xda\x56\xbc\xed\xcd\x56\x5a\xc5\x8b\x50\xf5\xe0\x45\x66\x93\xd1\x86\xe6\x1f\xc9\x4c\x61\x95\xfd\xee\x92\xed\x6e\x0b\x5e\x3c\x26\xfc\xe6\xf7\x1e\xef\x67\x06\xa0\x3c\x31\x1a\x64\x54\x0d\xd4\x37\x80\x0a\xe8\x49\x35\xa0\xda\x8e\xa9\x15\xeb\x0c\xe5\x72\xad\xa3\xf7\x12\x2c\x77\xea\xea\x44\xe9\x4c\xc8\x36\x86\x17\xeb\xa9\x30\xfa\xa4\x1a\x08\xe2\xdc\x0c\xa0\xaf\x88\x2a\x89\xf4\x45\x6a\x4d\x55\x26\x87\xe1\x63\x1b\xf4\xed\xeb\xf7\xda\xf2\xc3\xd7\xfb\x66\x37\xf9\xa6\xd4\x55\xc7\xb4\x1a\x53\x61\xfd\x37\x35\xe5\x68\x44\xf3\xe3\xfd\x60\xcb\xd1\x0c\xb6\xe5\xf3\xee\xf3\xed\x66\xf3\xb4\x5d\x9d\xb9\x3d\x96\x41\x77\xa7\xd9\x1e\x69\xfa\x6e\x25\x18\x47\xe7\x56\x00\x4a\xb2\xab\xd8\x9e\x39\x95\x66\xb1\x38\x01\x65\x7e\x90\x96\x12\xea\xc3\x5c\x47\x3f\x1e\xff\xbf\xcc\x80\xf5\x63\x14\xfa\x28\x81\x55\x03\xcb\x69\x30\xc9\x99\x82\xee\xaa\x40\x8a\x99\x2a\xd9\xc0\x94\x8f\x38\xb4\xf0\x31\xf0\x5e\x5d\x16\x64\x64\x29\xb5\x6d\x3f\xeb\x7f\x03\x00\x00\xff\xff\x7a\xc3\x19\xd6\xad\x01\x00\x00")

func bytebuildersPlansBytebuildersCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_bytebuildersPlansBytebuildersCommunityJson,
		"bytebuilders-plans/bytebuilders-community.json",
	)
}

func bytebuildersPlansBytebuildersCommunityJson() (*asset, error) {
	bytes, err := bytebuildersPlansBytebuildersCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bytebuilders-plans/bytebuilders-community.json", size: 429, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _guardPlansGuardCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4b\x33\x31\x10\x86\xef\xfb\x2b\x86\x9c\xbf\xaf\x2d\x08\x1e\xf6\x56\x15\x8a\x47\x45\x44\xbd\xc8\x6c\x32\xb8\xa1\x9b\x49\x48\x66\x16\x16\xd9\xff\x2e\xd9\x76\x5b\xf0\xe0\x31\x99\x77\x9e\x67\x78\xbf\x1b\x00\x13\x48\xd0\xa1\xa0\x69\xa1\xbe\x01\x0c\x63\x20\xd3\x82\xf9\x52\xcc\xee\xbf\x8d\x21\x28\x7b\x99\xcc\xbf\xd3\xd8\x66\x42\xf1\x91\x5f\x7c\xa0\x22\x18\x92\x69\x81\x75\x18\x1a\x80\xb9\x46\x4c\x49\x64\xaf\x34\xef\x2a\x2b\x0d\xc8\x9f\x07\xb6\x37\xaf\xb7\xe4\xdf\xdc\xd3\x28\x77\x2b\x6f\xd5\x1d\xaa\x0e\xee\x7f\xeb\x52\x8e\x4e\xad\x3c\x3e\x2c\x98\x1c\xdd\x82\xd9\x4d\xcf\xa1\xdf\x97\xee\xe3\xfd\x92\xeb\xb1\x2c\x9c\xbd\x15\x3f\xd2\xfa\xdd\x29\xbb\x81\x2e\xe7\x00\x18\xcd\x43\x8d\xf5\x22\xa9\xb4\xdb\xed\x29\x50\x36\x47\xed\x28\xa1\x3d\x6e\x6c\x0c\xe7\xe5\x3f\xba\x58\xe6\xf3\xd9\x81\x21\x2a\x8b\x69\x61\xb7\x56\xa4\x39\x13\xdb\xa9\x6e\x6a\x71\xeb\x2d\x9e\x85\xf2\x88\x8b\x3e\x44\x96\xde\x5c\x3b\x13\x14\x2d\xf5\xcc\xb9\x99\x7f\x02\x00\x00\xff\xff\x8e\xe3\xcd\x82\x98\x01\x00\x00")

func guardPlansGuardCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_guardPlansGuardCommunityJson,
		"guard-plans/guard-community.json",
	)
}

func guardPlansGuardCommunityJson() (*asset, error) {
	bytes, err := guardPlansGuardCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "guard-plans/guard-community.json", size: 408, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeciPlansKubeciCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4b\x33\x31\x10\x86\xef\xfb\x2b\x86\x9c\xbf\xaf\x55\xd4\xcb\xde\xa4\xa2\x16\x2f\x22\xea\x55\x66\x93\xc1\x8d\xdd\x4c\x42\x32\x53\x58\x64\xff\xbb\x64\xdb\x6d\xc1\x83\xc7\x24\xcf\x3c\xef\xe4\xfd\x6e\x00\x4c\x20\x41\x87\x82\xa6\x85\x7a\x06\x30\x8c\x81\x4c\x0b\x66\xa7\x1d\x59\xff\xdf\xc6\x10\x94\xbd\x8c\xe6\xdf\xe1\xdd\x66\x42\xf1\x91\x5f\x7d\xa0\x22\x18\x92\x69\x81\x75\x18\x1a\x80\xa9\x22\xa6\x24\xb2\x67\x9d\x77\x55\x96\x06\xe4\x8f\x07\xb6\x57\x37\x6f\x7d\x97\x2f\x5f\xdc\x7d\x59\x7c\x4b\xde\x93\x76\xb4\xd9\xc2\xe6\x77\x5e\xca\xd1\xa9\x95\xed\xdd\xec\xc9\xd1\xcd\x9e\x77\xff\x38\x3e\x7f\x7d\x5e\x13\x9e\xb8\x1e\xcb\x2c\xba\xb5\xe2\xf7\xb4\x5c\x77\xca\x6e\xa0\xd3\x3e\x00\x46\xf3\x50\xb1\x5e\x24\x95\x76\xbd\x3e\x00\x65\x55\xff\x9b\xd0\xee\x56\x36\x86\xe3\xf0\x5f\x6d\xcc\xc0\x74\x0c\xc1\x10\x95\xc5\xb4\x70\xb1\x94\xa4\x39\x13\xdb\xb1\x8e\x6a\x71\xcb\x32\x9e\x85\xf2\x1e\xe7\xfc\x10\x59\x7a\x73\x6e\x4d\x50\xb4\xd4\x3d\xa7\x66\xfa\x09\x00\x00\xff\xff\xe7\x4b\x0e\x1d\x9b\x01\x00\x00")

func kubeciPlansKubeciCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeciPlansKubeciCommunityJson,
		"kubeci-plans/kubeci-community.json",
	)
}

func kubeciPlansKubeciCommunityJson() (*asset, error) {
	bytes, err := kubeciPlansKubeciCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeci-plans/kubeci-community.json", size: 411, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedPlansKubedCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfb\x29\x86\x39\x6b\x2b\xa8\x28\x7b\x13\xff\x2c\x22\xf4\xe4\x45\x2f\x32\x4d\x02\x1b\xba\x99\xc4\x64\x66\xa1\xc8\x7e\x77\xc9\xb6\xdb\x82\x07\x8f\xc9\xbc\xf9\xbd\x37\xef\xa7\x01\xc0\xe0\x84\x2c\x09\x61\x0b\xf5\x0d\x80\x4c\xc1\x61\x0b\xb8\xd3\xad\xb3\x97\x26\x86\xa0\xec\x65\x8f\x17\x87\xb1\xc9\x8e\xc4\x47\x7e\xf7\xc1\x15\xa1\x90\xb0\x05\xd6\x61\x68\x00\xa6\x2a\xc1\x92\x9c\x39\xd3\xbc\xad\xac\x34\x10\x7f\x75\x6c\xae\xef\x36\x89\x6f\xc6\xee\x25\x6d\x16\xde\x62\xf7\x56\xed\xe0\xf1\xaf\x5d\xca\xd1\xaa\x91\xd7\xa7\x19\x93\xa3\x9d\x31\xdd\xf7\x3d\xdf\xda\xe7\x4f\xfd\x38\xe9\x7a\x2a\x33\xe7\xc1\x88\x1f\xdd\xf2\xbd\x55\xb6\x83\x3b\xc5\x01\x40\xcd\x43\x95\xf5\x22\xa9\xb4\xeb\xf5\x41\x50\x56\xf5\xda\x44\x66\xb7\x32\x31\x1c\x97\xff\xe9\x62\x9e\x4f\x47\x0f\x0a\x51\x59\xb0\x85\xab\xa5\x22\xcd\xd9\xb1\xd9\xd7\x4d\x2d\x76\xc9\xe2\x59\x5c\x1e\x69\xb6\x0f\x91\xa5\xc7\x73\x67\x42\xa2\xa5\xc6\x9c\x9a\xe9\x37\x00\x00\xff\xff\xa5\x8a\x10\x30\x98\x01\x00\x00")

func kubedPlansKubedCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubedPlansKubedCommunityJson,
		"kubed-plans/kubed-community.json",
	)
}

func kubedPlansKubedCommunityJson() (*asset, error) {
	bytes, err := kubedPlansKubedCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubed-plans/kubed-community.json", size: 408, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbPlansKubedbCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x91\x41\x6b\x23\x31\x0c\x85\xef\xf9\x15\xc2\xe7\xdd\x64\x21\x2c\x4b\xe6\xb6\x6d\x48\x49\x0b\x85\x96\x1e\x7a\x2b\xb2\xad\x12\x13\x5b\x76\x6d\x79\x20\x94\xf9\xef\xc5\x93\x4c\x52\x4a\xe9\xd1\xd6\xa7\xf7\x9e\xa4\xf7\x19\x80\x0a\x24\x68\x51\x50\x75\xd0\xde\x00\x8a\x31\x90\xea\x40\xed\xab\x26\xab\x7f\x9b\x18\x42\x65\x27\x07\xf5\xeb\x58\x37\x99\x50\x5c\xe4\x27\x17\xa8\x08\x86\xa4\x3a\xe0\xea\xfd\x0c\x60\x68\x88\x2a\x89\xcc\x45\xce\xd9\x26\x96\x3c\xf2\xcb\x0d\x9b\xe5\x5b\xaf\x37\x7f\xf3\xf6\xe1\xdf\xf3\xa4\x37\xf9\xdd\x55\x4d\xeb\x2b\xb8\xfe\xea\x67\x5d\x49\x1e\x0f\xf7\x9f\x30\xab\xbf\xc1\xa8\x98\xec\x52\x4b\xd6\xb0\x4d\x26\x82\x98\x88\xa1\xc4\x9a\x0d\x01\x59\xd7\x6a\xf0\x1a\x33\x08\x15\x01\x64\x0b\x96\x7a\xf2\x31\x05\x62\x99\x74\x52\x8e\xb6\x1a\xd9\xae\xc7\xd8\x39\xda\x31\xf6\x52\xdf\xee\x71\xe5\x1e\xfd\xea\xcc\xed\xb0\x8c\x81\xfe\x1b\x71\x3d\x4d\xdf\xba\xb2\xf5\x74\x1e\x1f\x40\xd5\xec\x1b\xb6\x13\x49\xa5\x5b\x2c\x8e\x40\x99\xb7\xf5\x26\x34\xfb\xb9\x89\xe1\xd4\xfc\xd3\xf2\x47\x60\x38\x99\x60\x88\x95\x45\x75\xf0\x67\xba\x49\xcd\x99\xd8\x1c\x5a\x6b\x2d\x76\x0a\xe3\x58\x28\xf7\x38\xfa\x87\xc8\xb2\x53\x97\x23\x09\x4a\x2d\x2d\xe7\x30\x1b\x3e\x02\x00\x00\xff\xff\x1a\xa9\x32\x8c\x0a\x02\x00\x00")

func kubedbPlansKubedbCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubedbPlansKubedbCommunityJson,
		"kubedb-plans/kubedb-community.json",
	)
}

func kubedbPlansKubedbCommunityJson() (*asset, error) {
	bytes, err := kubedbPlansKubedbCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb-plans/kubedb-community.json", size: 522, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubedbPlansKubedbEnterpriseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\x4d\x6f\xd4\x30\x10\x86\xef\xfb\x2b\x46\x3e\x16\xd8\x2e\x5d\xa8\x48\x6e\xa0\x85\x15\xe5\xab\x42\x70\xe0\x54\x4d\xec\x61\x63\xad\xbf\xb0\xc7\x2d\x11\xca\x7f\x47\xce\x6e\xb2\x45\x20\x4e\xcd\x2d\x96\x1e\x3f\xf3\x7a\x62\xcf\xaf\x05\x80\xb0\xc4\xa8\x90\x51\xd4\x50\xd6\x00\xc2\xa1\x25\x51\x83\xd8\xe7\x86\x54\xf3\x84\x1c\x53\x0c\x51\x27\x12\x8f\x0f\x80\x8c\x84\xac\xbd\xfb\xa2\x2d\x25\x46\x1b\x44\x0d\x2e\x1b\xb3\x00\xe8\x0b\x22\x52\x20\x79\xf2\x69\x55\x6c\xc1\xa0\xbb\xd9\xba\xbb\xed\x9b\xf7\x5f\x3f\x7d\xf8\x66\xec\xf7\xab\xd1\x37\x16\x7c\x97\x1b\xda\xbc\x82\xd7\x7f\x15\x54\x3a\x05\x83\xdd\xc7\x7b\x9c\x6a\xfe\xc5\x51\x92\x51\x87\x92\xad\x70\xd7\xd1\xab\x2c\xcb\x0a\x22\xa1\xea\x60\x83\x8c\x0d\x26\x4a\x70\xa7\xb9\x85\x0d\x76\x70\x01\x3e\x50\x1c\x8e\x03\x98\xd9\xdb\xe1\x73\x14\x86\x83\xe1\xed\x66\x38\x41\xf4\xea\x66\xeb\xe4\x7a\xdd\x5c\xed\xb1\xd2\x9f\x4d\x35\x71\x2d\xa6\x21\xda\x4b\xc9\xfa\x76\xca\xd3\x64\xa7\x0c\x4d\x9d\x00\x10\x39\x9a\x82\xb5\xcc\x21\xd5\xe7\xe7\x07\x20\x2d\x4b\xab\x03\xca\xfd\x52\x7a\x7b\xdc\xfc\xdf\x1f\x31\x10\xfd\x14\x52\x4b\xed\x76\xd7\xc8\x4c\xd1\xdd\xaf\x46\x06\x13\x6b\x99\x08\xa3\x6c\x8f\x65\x54\x33\x14\x39\x51\x85\xfb\x19\x22\xa5\x74\x6c\xdb\xea\x4c\x86\x0c\x8f\x60\xb5\x5c\xad\x2e\x5f\x3c\xab\xd6\x4f\x9f\xaf\x2e\xcf\x2c\x59\x1f\x3b\x71\xdc\xd4\x4f\x21\x2d\x46\x8d\xaa\x99\x49\xee\xdd\xce\xcf\x26\xef\xd2\x0f\x33\x8f\x3a\xf8\xc4\xbb\x48\x69\xa6\x9e\x47\x52\x7a\x2e\xb7\x25\x2b\x51\xb6\xa4\x1e\x54\xff\xc7\x85\x45\xeb\xb3\x63\x51\xc3\x45\x55\x8d\x23\x25\xc7\x48\x4e\x76\x45\x98\x93\x1a\x1f\x90\x2e\x57\xfe\x16\x87\x37\x63\xbd\xe3\x56\x9c\x66\x0c\x23\xe7\x54\x82\xf5\x8b\xfe\x77\x00\x00\x00\xff\xff\xdc\xf4\xf4\xad\xca\x04\x00\x00")

func kubedbPlansKubedbEnterpriseJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubedbPlansKubedbEnterpriseJson,
		"kubedb-plans/kubedb-enterprise.json",
	)
}

func kubedbPlansKubedbEnterpriseJson() (*asset, error) {
	bytes, err := kubedbPlansKubedbEnterpriseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubedb-plans/kubedb-enterprise.json", size: 1226, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeformPlansKubeformCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\x61\xd6\xef\x25\x0d\xd9\x79\x57\x5a\x28\xa6\x14\x4a\x09\x64\x59\x26\x92\x8a\x85\xad\x91\x90\x46\x09\xa6\xf8\xdf\x8b\x1c\x2b\x81\x2e\xba\xb4\x39\x73\xee\xd5\xfd\x6e\x00\xd0\x19\x21\x4d\x42\xd8\x42\xf9\x06\x40\x26\x67\xb0\x05\x1c\xf2\xc9\x7c\xf9\xe8\xfe\x2b\xef\x5c\x66\x2b\x13\xfe\xbb\x12\x2a\x1a\x12\xeb\xf9\x60\x9d\x49\x42\x2e\x60\x0b\x9c\xc7\xb1\x01\x98\x0b\x82\x29\x18\x75\x17\x5a\x5d\x74\x61\x24\xfe\x7c\x61\xb5\x3f\x76\xdd\xa1\x9b\x68\x6f\x2f\xd5\x57\x13\x5f\xd7\x44\x78\xfa\x9d\x18\xa2\xd7\x59\x49\xf7\xbc\x98\xa2\xd7\x8b\xe9\x63\x27\x74\x79\x3f\xee\xde\x86\x1b\xd7\x53\x5a\x54\x8f\x4a\xec\xd9\xd4\xdf\xa7\xcc\x7a\x34\xb7\x46\x00\x98\xe3\x58\xb0\x5e\x24\xa4\x76\xbb\xbd\x02\x69\x53\xde\x1c\x48\x0d\x1b\xe5\xdd\x7a\xfc\xf7\x22\x0b\x32\xaf\x31\xe4\x7c\x66\xc1\x16\x1e\xea\x50\x39\x46\xc3\x6a\x2a\xc7\x39\xe9\x5a\xc7\xb2\x98\x78\xa6\xa5\x81\xf3\x2c\x3d\xde\x97\x13\x92\x9c\x4a\xd3\xb9\x99\x7f\x02\x00\x00\xff\xff\xcf\x15\xe7\x66\xa1\x01\x00\x00")

func kubeformPlansKubeformCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeformPlansKubeformCommunityJson,
		"kubeform-plans/kubeform-community.json",
	)
}

func kubeformPlansKubeformCommunityJson() (*asset, error) {
	bytes, err := kubeformPlansKubeformCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeform-plans/kubeform-community.json", size: 417, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeformPlansKubeformEnterpriseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x3f\x4b\x04\x31\x10\xc5\xfb\xfd\x14\xc3\xd4\x7a\xe7\x61\x97\x4e\x50\x44\x44\x11\x11\x2c\x65\x2e\x19\xd9\xb0\xf9\x47\x32\x39\x39\x64\xbf\xbb\x64\x6f\x6f\x2d\xb6\xd0\x72\xe0\xf7\x5e\x7e\x79\xdf\x1d\x00\x7a\x16\x32\x24\x84\x0a\xda\x0d\x80\x81\x3c\xa3\x02\x1c\xea\x9e\x3f\x63\xf6\x97\x1c\x84\x73\xca\xb6\x30\x5e\x9c\x10\x9d\x99\xc4\xc6\xf0\x66\x3d\x17\x21\x9f\x50\x41\xa8\xce\x75\x00\x63\x43\xb0\x24\xd6\xeb\xc6\xc7\xb9\x11\xee\x56\x8d\xc6\x96\xe4\xe8\xf8\xfc\x0f\x34\xe5\x68\xaa\x96\x87\xdb\xc6\xb5\xe3\xe3\x3e\xe8\xeb\xd7\x9d\xd0\xd7\xcb\xfb\xee\x69\x58\xb8\x9e\xca\xd4\x75\xa3\xc5\x1e\x96\xf8\xbe\x06\xe3\x78\x91\x03\xc0\x9a\x5d\xc3\x7a\x91\x54\xd4\x76\x7b\x02\xca\xa6\xfd\x3f\x91\x1e\x36\x3a\xfa\x39\xfc\xc7\x3a\x13\x33\xce\xef\x90\x8f\x35\x08\x2a\xb8\x3a\x8f\x56\x73\xe6\xa0\x8f\x2d\x5d\x8b\x39\xfb\xd8\x96\x3f\xd0\xa4\xe0\x63\x90\x1e\x7f\x57\x14\x92\x5a\x9a\xea\xd8\x8d\x3f\x01\x00\x00\xff\xff\x86\x0e\xb2\x5a\xae\x01\x00\x00")

func kubeformPlansKubeformEnterpriseJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeformPlansKubeformEnterpriseJson,
		"kubeform-plans/kubeform-enterprise.json",
	)
}

func kubeformPlansKubeformEnterpriseJson() (*asset, error) {
	bytes, err := kubeformPlansKubeformEnterpriseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeform-plans/kubeform-enterprise.json", size: 430, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeshieldPlansKubeshieldCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x41\x4b\x03\x31\x10\x85\xef\xfb\x2b\x86\x9c\xb5\x15\x3d\xb9\x37\x51\xa8\x52\xea\xa5\x45\xd0\x8b\xcc\x26\x43\x37\x34\x99\x84\x64\x52\x28\xb2\xff\x5d\xb2\xed\x6e\xc1\x8b\xc7\x5d\xbe\xf9\xde\xcb\xfb\x69\x00\x94\x27\x41\x83\x82\xaa\x85\xfa\x0d\xa0\x18\x3d\xa9\x16\xd4\xa1\x74\x94\x7b\x4b\xce\xdc\xea\xe0\x7d\x61\x2b\x27\x75\x73\x66\x74\x22\x14\x1b\x78\x67\x3d\x65\x41\x1f\x55\x0b\x5c\x9c\x6b\x00\x86\x8a\xa8\x1c\x49\x5f\x95\xd6\x54\x61\x74\xc8\xdf\x2b\xd6\x0f\x5d\xbf\xdb\x3c\xbe\xef\xf7\xaf\xab\xc9\x37\x65\xae\xe7\x4c\x78\xfe\x9b\x19\x53\x30\x45\xcb\xdb\xcb\xe8\x4a\xc1\x8c\xae\xcd\x76\x2b\xeb\x8f\x4f\xf7\x75\x3f\x73\x3d\xe6\x51\xf6\xa4\xc5\x1e\x69\xfa\xdd\x15\x36\x8e\xe6\x4e\x00\xaa\x24\x57\xb1\x5e\x24\xe6\x76\xb9\x3c\x03\x79\x51\xdf\x1d\x51\x1f\x16\x3a\xf8\xcb\xf1\x7f\xab\x8c\xd0\x70\x09\x42\x1f\x0a\x8b\x6a\xe1\x6e\x1a\xab\xa4\x44\xac\x4f\xf5\xbc\x64\x33\x15\xb2\x2c\x94\x8e\x38\x76\xf0\x81\xa5\x57\xd7\xf5\x04\xa5\xe4\xda\x75\x68\x86\xdf\x00\x00\x00\xff\xff\xf6\xac\x3a\x71\xa7\x01\x00\x00")

func kubeshieldPlansKubeshieldCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubeshieldPlansKubeshieldCommunityJson,
		"kubeshield-plans/kubeshield-community.json",
	)
}

func kubeshieldPlansKubeshieldCommunityJson() (*asset, error) {
	bytes, err := kubeshieldPlansKubeshieldCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubeshield-plans/kubeshield-community.json", size: 423, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubevaultPlansKubevaultCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xc1\x6a\xeb\x30\x10\x45\xf7\xf9\x8a\x41\xeb\xf7\x92\x42\xe9\xc6\xbb\x90\x42\x29\x25\x2e\x81\xd2\x45\x37\x65\x2c\xa9\x58\x44\x1a\x09\x69\xc6\xe0\x16\xff\x7b\x91\x13\x27\xd0\x4d\x96\x12\x67\xee\xb9\xdc\x9f\x15\x80\x0a\x96\xd1\x20\xa3\x6a\xa0\xbe\x01\x14\x61\xb0\xaa\x01\x75\x94\xce\x0e\x28\x9e\xff\xeb\x18\x82\x90\xe3\x51\xfd\x3b\x21\x3a\x5b\x64\x17\xe9\xcd\x05\x5b\x18\x43\x52\x0d\x90\x78\xbf\x02\x98\x2a\xa2\x4a\xb2\xfa\x9a\xe8\x4c\xcd\x4b\x1e\xe9\xf3\x89\xf4\xfd\x77\xab\xf7\xaf\x0f\x1f\x69\xdf\x2d\x79\x8b\xf2\x45\x3a\xfb\x5e\x95\xb0\xfb\xab\x34\xae\x24\x8f\x63\x7b\x9b\x4c\x39\x1a\xd1\xfc\xfc\x38\x4b\x73\x34\xb3\xf4\xf0\xd5\x86\x1d\xef\x0f\x5b\xbc\x70\x3d\x96\x39\x6b\xab\xd9\x0d\x76\xf9\xee\x84\x8c\xb7\x97\xf2\x00\x4a\xb2\xaf\x58\xcf\x9c\x4a\xb3\xd9\x9c\x80\xb2\xae\xfb\x24\xd4\xc7\xb5\x8e\xe1\x7c\x7c\x63\xbd\x99\x99\xce\x1e\x0c\x51\x88\x55\x03\x77\xcb\xa8\x92\xb3\x25\x3d\xd6\x6b\x29\x66\xe9\xe3\x88\x6d\x1e\x70\xae\x10\x22\x71\xaf\xae\x2b\x33\xb2\x94\x5a\x75\x5a\x4d\xbf\x01\x00\x00\xff\xff\x32\xeb\xb0\x73\xce\x01\x00\x00")

func kubevaultPlansKubevaultCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubevaultPlansKubevaultCommunityJson,
		"kubevault-plans/kubevault-community.json",
	)
}

func kubevaultPlansKubevaultCommunityJson() (*asset, error) {
	bytes, err := kubevaultPlansKubevaultCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubevault-plans/kubevault-community.json", size: 462, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubevaultPlansKubevaultEnterpriseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x4b\xc3\x40\x10\x85\xef\xfd\x15\xc3\x9c\xb5\x15\xbc\xe5\x56\x54\x44\xc4\x42\x41\xbc\xca\x64\x33\x92\xa5\xbb\x9b\x65\x77\x26\x50\x24\xff\x5d\x26\x6d\xe3\xa1\x07\x3d\x0e\x7c\xef\xcd\xe3\xfb\x5e\x01\x60\x64\xa1\x8e\x84\xb0\x01\xbb\x01\x30\x51\x64\x6c\x00\x0f\xda\xf2\x48\x1a\xe4\x96\x93\x70\xc9\xc5\x57\xc6\x9b\x13\xe3\x0a\x93\xf8\x21\xbd\xfb\xc8\x55\x28\x66\x6c\x20\x69\x08\x2b\x80\xc9\x10\xac\x99\xdd\x75\xe5\xab\xb6\xfc\x61\x95\xf0\x74\x55\xd9\xf9\x9a\x03\x1d\x77\xff\x40\x73\x19\x3a\x75\xf2\xf2\x68\xa0\x1d\x9f\xcf\xc9\xdd\xef\xbf\x76\xf1\x41\xde\xf6\x5b\x5a\xb8\x9e\xea\x5c\xb6\x75\xe2\xc7\x25\xde\x6a\xea\x02\x2f\xeb\x00\x50\x4b\x30\xac\x17\xc9\xb5\xd9\x6c\x4e\x40\x5d\x9b\x81\x4c\xee\xb0\x76\x43\x3c\x87\xff\xf2\x33\x43\xd3\xf9\x11\xc5\x41\x93\x60\x03\x77\x17\x6d\x5a\x0a\x27\x77\xb4\xb8\xd6\xee\x32\xc8\x5b\x7e\xa4\x79\x43\x1c\x92\xf4\xf8\xeb\x51\x48\xb4\xda\xd6\x69\x35\xfd\x04\x00\x00\xff\xff\x11\x6b\xeb\x9d\xb1\x01\x00\x00")

func kubevaultPlansKubevaultEnterpriseJsonBytes() ([]byte, error) {
	return bindataRead(
		_kubevaultPlansKubevaultEnterpriseJson,
		"kubevault-plans/kubevault-enterprise.json",
	)
}

func kubevaultPlansKubevaultEnterpriseJson() (*asset, error) {
	bytes, err := kubevaultPlansKubevaultEnterpriseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubevault-plans/kubevault-enterprise.json", size: 433, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pharmerPlansPharmerCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x3f\x6b\xc3\x30\x10\xc5\xf7\x7c\x8a\xe3\xe6\x36\x09\x74\xf3\x56\xda\xf4\xdf\xd2\xb4\x24\x4b\x97\x72\x91\x0e\x2c\x62\x9d\x84\x74\x32\x84\xe2\xef\x5e\x2c\xc7\x09\x74\xe8\x28\xf1\xbb\xdf\x7b\xbc\x9f\x05\x00\x7a\x56\xb2\xa4\x84\x0d\x8c\x6f\x00\x14\xf2\x8c\x0d\x60\x6c\x29\x79\x4e\xb7\x26\x78\x5f\xc4\xe9\x09\x6f\x26\xc0\x24\x26\x75\x41\x76\xce\x73\x56\xf2\x11\x1b\x90\xd2\x75\x0b\x80\x61\x44\x30\x47\x36\x57\x9f\xb3\xd5\xd6\x91\x7c\x3f\x8b\xb9\xdb\x6e\xbe\xfa\xfd\xd3\xdb\x7e\x73\x9c\x7d\x73\xe0\x76\x0a\x84\x87\xbf\x81\x31\x05\x5b\x8c\xbe\x3e\x56\x51\x0a\xb6\x8a\x5a\xdd\xa5\x17\xfe\xf8\x5c\xbf\x5f\xb8\x96\x72\x35\xdd\x1b\x75\x3d\xcf\xdf\x87\x22\xb6\xe3\x4b\x21\x00\x2c\xa9\x1b\xb1\x56\x35\xe6\x66\xb5\x9a\x80\xbc\x3c\x96\x03\x47\x32\xc7\xa5\x09\xfe\x7c\xfc\xef\x1e\x95\x18\xce\x29\xe4\x43\x11\xc5\x06\xd6\xf3\x4c\x25\x25\x16\x73\x1a\x6f\x4b\xb6\x73\x1b\x27\xca\xa9\xa7\x5a\xc0\x07\xd1\x16\xaf\xbb\x29\x69\xc9\x63\xd1\x61\x31\xfc\x06\x00\x00\xff\xff\xf8\xa0\x7e\x05\x9e\x01\x00\x00")

func pharmerPlansPharmerCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_pharmerPlansPharmerCommunityJson,
		"pharmer-plans/pharmer-community.json",
	)
}

func pharmerPlansPharmerCommunityJson() (*asset, error) {
	bytes, err := pharmerPlansPharmerCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pharmer-plans/pharmer-community.json", size: 414, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _searchlightPlansSearchlightCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4f\x4b\x33\x31\x10\xc6\xef\xfb\x29\x86\x9c\xdf\xb7\x15\xf4\x50\xf6\x26\x2a\xc5\x52\x8b\xe0\x9f\xab\x4c\x93\xe0\x86\x26\x93\x98\xcc\x2c\x14\xd9\xef\x2e\xd9\x76\xbb\xe0\xc5\x63\xc2\x6f\x7e\xcf\xc3\xf3\xdd\x00\xa8\x60\x19\x0d\x32\xaa\x16\xea\x1b\x40\x11\x06\xab\x5a\x50\xc5\x62\xd6\x9d\x77\x9f\x1d\xff\xd7\x31\x04\x21\xc7\x47\xf5\xef\x04\xe9\x6c\x91\x5d\xa4\x57\x17\x6c\x61\x0c\x49\xb5\x40\xe2\x7d\x03\x30\x54\x44\x95\x64\xf5\xec\x74\xa6\x1a\x93\x47\xfa\x58\x93\xbe\xde\xca\x6e\xb7\x7e\x5e\xf9\xa7\xf7\xc9\x37\x85\xbe\xcc\xa1\x70\xf7\x3b\x34\xe5\x68\x44\xf3\xe3\xfd\x28\xcb\xd1\x8c\xb2\xfe\x61\xb3\xdd\x7c\xad\xd2\xdb\xcd\x85\xeb\xb0\x8c\xb6\x5b\xcd\xae\xb7\xd3\xf7\x5e\xc8\x78\x7b\x29\x05\xa0\x24\xfb\x8a\x75\xcc\xa9\xb4\xcb\xe5\x09\x28\x8b\x83\xec\x6d\x42\x7d\x58\xe8\x18\xce\xc7\x7f\xee\x32\x52\xc3\x39\x09\x43\x14\x62\xd5\xc2\xd5\x34\x97\xe4\x6c\x49\x1f\xeb\xbd\x14\x33\x35\x72\xc4\x36\xf7\x38\x96\x08\x91\xb8\x53\xf3\x7e\x8c\x2c\xa5\x96\x1d\x9a\xe1\x27\x00\x00\xff\xff\xc9\x13\x6b\xe8\xaa\x01\x00\x00")

func searchlightPlansSearchlightCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_searchlightPlansSearchlightCommunityJson,
		"searchlight-plans/searchlight-community.json",
	)
}

func searchlightPlansSearchlightCommunityJson() (*asset, error) {
	bytes, err := searchlightPlansSearchlightCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "searchlight-plans/searchlight-community.json", size: 426, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _serviceBrokerPlansServicebrokerCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4d\x4b\x03\x31\x10\x86\xef\xfd\x15\x43\xce\xf6\x03\xf4\xb4\xb7\x5a\xc1\x0f\x90\x22\x7a\x50\x2f\x32\x4d\x46\x37\x74\x33\x09\xc9\x64\xa1\xc8\xfe\x77\x49\xb6\xdb\x82\x3d\x26\x3c\xf3\xbc\x2f\xef\xef\x0c\x40\x39\x12\x34\x28\xa8\x1a\x28\x6f\x00\xc5\xe8\x48\x35\xa0\x12\xc5\xde\x6a\xda\x45\xbf\xa7\x38\xd7\xde\xb9\xcc\x56\x0e\xea\x6a\xc4\x74\x24\x14\xeb\xf9\xcd\x3a\x4a\x82\x2e\xa8\x06\x38\x77\xdd\x0c\x60\x28\x88\x4a\x81\xf4\xd9\x6a\x4d\x71\x86\x0e\xf9\xeb\x9e\xf5\xf5\xb6\xdd\xd8\xe7\x17\x5a\x6f\x3f\x26\xdf\x14\xfb\x3a\xc6\xde\xd6\x58\xd8\xfc\x8f\x0d\xd1\x9b\xac\xe5\xf1\xae\xea\xa2\x37\x55\xf7\xb4\xba\x31\x3f\xef\xfd\xe7\xc3\xf7\x89\x6b\x31\x55\xdf\x5a\x8b\xed\x69\xfa\xde\x65\x36\x1d\x9d\x6a\x01\xa8\x1c\xbb\x82\xb5\x22\x21\x35\xcb\xe5\x08\xa4\xc5\x3e\xef\x28\xa0\xde\x2f\xb4\x77\xc7\xe3\xcb\x6d\xe6\x17\xe3\x54\x70\x38\x86\xa1\xf3\x99\x45\x35\xb0\x9a\x36\xcb\x31\x12\xeb\x43\x51\xe4\x64\xa6\x52\x96\x85\x62\x8f\xb5\x87\xf3\x2c\xad\x3a\x8f\x28\x28\x39\x95\xbe\xc3\x6c\xf8\x0b\x00\x00\xff\xff\x00\xd5\x14\xd0\xb1\x01\x00\x00")

func serviceBrokerPlansServicebrokerCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_serviceBrokerPlansServicebrokerCommunityJson,
		"service-broker-plans/servicebroker-community.json",
	)
}

func serviceBrokerPlansServicebrokerCommunityJson() (*asset, error) {
	bytes, err := serviceBrokerPlansServicebrokerCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "service-broker-plans/servicebroker-community.json", size: 433, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashCliPlansStashKubectlPluginCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x5d\x4b\x33\x31\x10\x85\xef\xfb\x2b\x86\x5c\xbf\xfd\x80\x17\x11\xf6\x4e\xb4\x14\x41\xb0\xa0\x5e\xcb\x74\x76\x74\x43\x93\x49\x48\x26\xc5\x2a\xfb\xdf\x25\xdb\xdd\x56\xf4\x32\xe1\xcc\xf3\x1c\xce\xd7\x0c\xc0\x78\x56\x6c\x51\xd1\x34\x50\xdf\x00\x46\xd0\xb3\x69\xc0\x64\xc5\xdc\xcd\xf7\x65\xc7\xa4\x6e\x1e\x5d\x79\xb7\x32\xa7\xe0\x7d\x11\xab\x47\xf3\xef\x94\xa6\xc4\xa8\x36\xc8\xb3\xf5\x9c\x15\x7d\x34\x0d\x48\x71\x6e\x06\xd0\xd7\x88\xc9\x91\xe9\x02\xb7\x6d\x45\x47\x87\xf2\xba\x11\xfa\x6f\xd7\xab\x97\x4f\xe6\x15\xc5\x89\x37\xd9\x9f\xaa\x1d\x46\x3b\x6c\x07\x3b\xdc\xfe\xb6\xc7\x14\xda\x42\x7a\x7f\x37\x50\x53\x68\x07\xea\xc7\xe6\xfa\x71\xfb\x76\xf5\x10\xd7\xe7\x5c\x87\x79\xc0\xde\x90\xda\x03\x4f\xdf\xbb\x22\xad\xe3\x73\x3b\x00\x53\x92\xab\xb1\x4e\x35\xe6\x66\xb9\x3c\x05\xf2\xa2\xf6\x88\x48\xfb\x05\x05\x3f\x1e\xff\x59\x8a\x9c\xfd\x31\xcf\x90\xe9\x47\x0f\xfa\x50\x44\x4d\x03\xab\x69\xb5\x92\x12\x0b\x1d\xeb\x75\xc9\xed\xd4\xc7\x8a\x72\x3a\xe0\x50\xc1\x07\xd1\xce\x5c\x66\x54\xd4\x92\x6b\xd5\x7e\xd6\x7f\x07\x00\x00\xff\xff\x47\x70\x97\xac\xba\x01\x00\x00")

func stashCliPlansStashKubectlPluginCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashCliPlansStashKubectlPluginCommunityJson,
		"stash-cli-plans/stash-kubectl-plugin-community.json",
	)
}

func stashCliPlansStashKubectlPluginCommunityJson() (*asset, error) {
	bytes, err := stashCliPlansStashKubectlPluginCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-cli-plans/stash-kubectl-plugin-community.json", size: 442, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashElasticsearchPlansElasticsearchCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xbd\x6a\x2b\x31\x10\x85\x7b\x3f\xc5\xa0\xfa\xfa\x67\xb9\xa9\xb6\x0b\x71\x30\x4e\x1a\x17\x81\x90\x34\x61\x2c\x4d\x58\x61\x69\x24\xa4\xd1\x06\x13\xf6\xdd\x83\xd6\x5e\xdb\x04\x52\x4a\x7c\xf3\x9d\xc3\xf9\x9e\x01\x28\x4f\x82\x06\x05\x55\x0b\xf5\x0d\xa0\x18\x3d\xa9\x16\x14\x39\xcc\x62\x75\x26\x4c\xba\x9b\xeb\xe0\x7d\x61\x2b\x47\xf5\xef\x84\xe9\x44\x28\x36\xf0\x8b\xf5\x94\x05\x7d\x54\x2d\x70\x71\x6e\x06\x30\x54\x44\xe5\x48\xfa\x6a\xb5\xa6\x3a\xa3\x43\xfe\xd8\xb0\xfe\xff\xf9\xbe\xe2\xaf\x6d\xbf\x7e\x6b\x26\xdf\x14\xfb\x78\x1b\x0b\x0f\xbf\x63\x63\x0a\xa6\x68\xd9\xae\x47\x5d\x0a\x66\xd4\xbd\x6e\x9a\x74\xd7\xec\x76\xcf\x4f\x17\xae\xc3\x3c\xfa\xee\xb5\xd8\x9e\xa6\xef\x7d\x61\xe3\xe8\x52\x0b\x40\x95\xe4\x2a\xd6\x89\xc4\xdc\x2e\x97\x27\x20\x2f\x0e\x65\x4f\x11\xf5\x61\xa1\x83\x3f\x1f\xdf\x94\xcc\x82\xb9\x9b\xff\xb5\xd0\x48\x0f\xe7\x44\xf4\xa1\xb0\xa8\x16\x56\xd3\x70\x25\x25\x62\x7d\xac\x9e\x92\xcd\xd4\xcc\xb2\x50\xea\x71\x2c\xe3\x03\x4b\xa7\xae\x4b\x0a\x4a\xc9\xb5\xf4\x30\x1b\x7e\x02\x00\x00\xff\xff\xd5\x90\x26\x8a\xb6\x01\x00\x00")

func stashElasticsearchPlansElasticsearchCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashElasticsearchPlansElasticsearchCommunityJson,
		"stash-elasticsearch-plans/elasticsearch-community.json",
	)
}

func stashElasticsearchPlansElasticsearchCommunityJson() (*asset, error) {
	bytes, err := stashElasticsearchPlansElasticsearchCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-elasticsearch-plans/elasticsearch-community.json", size: 438, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashMongodbPlansMongodbCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x43\xce\xf6\x8f\xe8\x69\x6f\xd5\x52\x11\xf1\xa6\x15\xbc\xc8\x34\x09\x6e\x6c\x32\x09\xc9\x4c\x61\x91\xfd\xee\x92\xed\x6e\x2b\x7a\x4c\xf8\xcd\xef\x3d\xde\xf7\x0c\x40\x05\xcb\x68\x90\x51\x35\x50\xdf\x00\x8a\x30\x58\xd5\x80\x0a\x91\x3e\xa3\xd9\xcf\x75\x0c\x41\xc8\x71\xa7\xae\x4e\x80\xce\x16\xd9\x45\x7a\x71\xc1\x16\xc6\x90\x54\x03\x24\xde\xcf\x00\xfa\x8a\xa8\x92\xac\xbe\xf8\x9c\xa9\xb6\xe4\x91\x3e\x1e\x48\xdf\xbc\xee\xbe\xec\xf6\xfd\x49\xba\xdd\xe4\x9b\x02\x9f\x6b\xe0\xe6\x0e\xee\xff\x06\xa6\x1c\x8d\x68\x7e\xdc\x0c\xa2\x1c\xcd\x20\xda\xde\xbe\xe9\xc3\xb5\x5f\x99\xf5\x99\x6b\xb1\x0c\xa6\xb5\x66\x77\xb4\xd3\xf7\x5e\xc8\x78\x7b\x2e\x04\xa0\x24\xfb\x8a\xb5\xcc\xa9\x34\xcb\xe5\x09\x28\x8b\x83\xec\x6d\x42\x7d\x58\xe8\x18\xc6\xe3\x5f\xf5\x0a\x63\x69\xe7\xff\x57\x19\xb8\x7e\xcc\xc2\x10\x85\x58\x35\xb0\x9a\xc6\x92\x9c\x2d\xe9\xae\x1a\xa4\x98\xa9\x93\x23\xb6\xf9\x88\x7e\x1c\x9a\x5b\x75\x59\x8f\x91\xa5\xd4\xba\xfd\xac\xff\x09\x00\x00\xff\xff\x8a\xa3\xd1\x01\xa4\x01\x00\x00")

func stashMongodbPlansMongodbCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashMongodbPlansMongodbCommunityJson,
		"stash-mongodb-plans/mongodb-community.json",
	)
}

func stashMongodbPlansMongodbCommunityJson() (*asset, error) {
	bytes, err := stashMongodbPlansMongodbCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-mongodb-plans/mongodb-community.json", size: 420, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashMysqlPlansMysqlCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x41\x4b\x03\x31\x10\x85\xef\xfd\x15\x43\xce\xb6\x15\x14\x94\xbd\x15\x05\x29\x54\x54\x2c\x78\x94\x69\x12\xdc\xd0\x64\x92\x26\x33\xa5\x8b\xec\x7f\x97\x6c\xbb\xad\xf4\xb8\x9b\x37\xdf\xfb\x78\xbf\x13\x00\x15\x2c\xa3\x41\x46\xd5\x40\xfd\x06\x50\x84\xc1\xaa\x06\x54\xe8\xca\xce\x4f\x75\x0c\x41\xc8\x71\xa7\x6e\x8e\xcf\x3a\x5b\x64\x17\x69\xed\x82\x2d\x8c\x21\xa9\x06\x48\xbc\x9f\x00\xf4\x35\xa2\x4a\xb2\xfa\x42\x73\xa6\xb2\x92\x47\xfa\x7e\x21\x7d\xb7\x3b\x2c\xd2\x72\xb5\xbe\x7f\xff\x19\x79\x63\xdd\x6b\xf7\xf9\xb1\x82\xa7\xeb\xba\x94\xa3\x11\xcd\xcb\xe7\x01\x93\xa3\x19\x30\xf2\x66\xd2\xe2\xeb\x61\x7f\x78\x3c\xe7\x5a\x2c\x03\x67\xa1\xd9\xed\xed\xf8\x7b\x23\x64\xbc\x3d\xeb\x00\x28\xc9\xbe\xc6\x5a\xe6\x54\x9a\xf9\xfc\x18\x28\xb3\xad\x6c\x6c\x42\xbd\x9d\xe9\x18\x4e\xc7\xff\xe4\x0a\x63\x69\xa7\xd7\x8b\x0c\xa9\xfe\xd4\x84\x21\x0a\xb1\x6a\xe0\x76\x1c\x4a\x72\xb6\xa4\xbb\x7a\x2f\xc5\x8c\x46\x8e\xd8\xe6\x3d\x0e\x12\x21\x12\xb7\xea\xb2\x1c\x23\x4b\xa9\xb2\xfd\xa4\xff\x0b\x00\x00\xff\xff\x36\x76\x5f\x06\x9e\x01\x00\x00")

func stashMysqlPlansMysqlCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashMysqlPlansMysqlCommunityJson,
		"stash-mysql-plans/mysql-community.json",
	)
}

func stashMysqlPlansMysqlCommunityJson() (*asset, error) {
	bytes, err := stashMysqlPlansMysqlCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-mysql-plans/mysql-community.json", size: 414, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPerconaXtradbPlansPerconaXtradbCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\x4f\x4b\x33\x31\x10\xc6\xef\xfd\x14\x43\xce\x6f\xff\xbc\x8a\x08\x7b\xb3\x16\x5a\xf5\x52\xd1\x83\x37\x99\x4d\x06\x36\x74\x33\x09\xc9\xa4\xba\xc8\x7e\x77\xd9\x6c\xb7\x15\xc1\x63\xc2\x6f\x7e\xcf\xc3\xf3\x35\x03\x50\x8e\x04\x0d\x0a\xaa\x0a\x86\x37\x80\x62\x74\xa4\x2a\x50\x81\xa2\xf6\x8c\xf3\x4f\x89\x68\xea\xb9\xf6\xce\x65\xb6\xd2\xa9\x7f\x23\xa7\x23\xa1\x58\xcf\xaf\xd6\x51\x12\x74\x41\x55\xc0\xb9\x6d\x67\x00\xfd\x80\xa8\x14\x48\x5f\xb4\xd6\x14\x69\x8b\xfc\xbe\x65\x7d\x7d\x75\x8b\x37\x71\xdb\xd1\xea\x79\xf2\x4d\xb9\xfb\x31\x17\xde\x24\xe2\x66\x0d\xf7\xbf\x73\x43\xf4\x26\x6b\x79\xd8\x14\x5f\xf4\xa6\xf8\x1e\xff\x7f\xbc\x3c\xad\x77\x7a\xb7\x3f\x73\x0d\xa6\x22\xbc\xd3\x62\x8f\x34\x7d\xd7\x99\x4d\x4b\xe7\x5e\x00\x2a\xc7\x76\xc0\x1a\x91\x90\xaa\xe5\x72\x04\xd2\xe2\x90\x6b\x0a\xa8\x0f\x0b\xed\xdd\xe9\xf8\x47\xcb\x24\x98\x9a\xf9\x9f\x1b\x15\xbc\x3f\x45\xa2\xf3\x99\x45\x55\xb0\x9a\xa6\xcb\x31\x12\xeb\x6e\x10\xe5\x64\xa6\x6a\x96\x85\xe2\x11\x4b\x1b\xe7\x59\x1a\x75\xd9\x52\x50\x72\x1a\x5a\xf7\xb3\xfe\x3b\x00\x00\xff\xff\x22\x51\x44\xd8\xb9\x01\x00\x00")

func stashPerconaXtradbPlansPerconaXtradbCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPerconaXtradbPlansPerconaXtradbCommunityJson,
		"stash-percona-xtradb-plans/percona-xtradb-community.json",
	)
}

func stashPerconaXtradbPlansPerconaXtradbCommunityJson() (*asset, error) {
	bytes, err := stashPerconaXtradbPlansPerconaXtradbCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-percona-xtradb-plans/percona-xtradb-community.json", size: 441, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPlansStashCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\x33\x31\x10\xc6\xef\xfd\x14\x43\xce\xef\xdb\x0a\x7a\xda\x5b\xa9\x20\x1e\xfc\x87\x8a\xd8\x8b\x4c\x93\x40\x42\x93\x49\xc8\x4c\x5a\x17\xd9\xef\x2e\xd9\x76\x5b\xf0\xd0\x63\x32\xbf\x79\x7e\xc3\xf3\x33\x03\x50\xd1\x0a\x1a\x14\x54\x1d\xb4\x37\x80\x22\x8c\x56\x75\xa0\x58\x90\xdd\x7f\x9d\x62\xac\xe4\xa5\x57\xff\x0e\x63\x5d\x2c\x8a\x4f\xf4\xe6\xa3\x65\xc1\x98\x55\x07\x54\x43\x98\x01\x0c\x0d\x51\x9c\xad\x3e\xa7\x79\xd3\xb2\x72\x40\xfa\xba\x23\x7d\xed\x9e\xd7\xdf\x4b\xb7\xe7\xa7\xcf\x29\x6f\xd2\xbd\x36\x1d\xac\xfe\xea\x8c\xe7\x1c\xb0\x7f\xbc\x4c\xe5\x92\x4c\xd5\x72\x7f\x3b\xca\x4a\x32\xa3\x6c\x7f\xf3\xb2\x7e\x0f\xab\x87\x8f\x7c\xe2\x1c\xf2\x98\xb3\xd4\xe2\x77\x76\xfa\xde\x54\x32\xc1\x9e\x8e\x06\x50\xb5\x84\x86\x39\x91\xcc\xdd\x62\x71\x00\x78\xbe\xad\x1b\x9b\x51\x6f\xe7\x3a\xc5\xe3\xf2\x85\xc6\xc6\xf9\x70\x74\x60\x4c\x95\x44\x75\x70\x35\x15\x59\x4b\xb1\xa4\xfb\xb6\x59\xd9\x4c\xb7\x78\x12\x5b\x76\x38\xea\x63\x22\x71\xea\xdc\xac\xa0\x54\x6e\x67\x0e\xb3\xe1\x37\x00\x00\xff\xff\x4d\xc1\x63\xdd\xbe\x01\x00\x00")

func stashPlansStashCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPlansStashCommunityJson,
		"stash-plans/stash-community.json",
	)
}

func stashPlansStashCommunityJson() (*asset, error) {
	bytes, err := stashPlansStashCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-plans/stash-community.json", size: 446, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPlansStashEnterpriseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x4f\x4b\x3b\x31\x10\x40\xef\xfd\x14\x43\xce\xbf\x5f\x2b\xe8\x69\x6f\xf5\x0f\x22\xa2\x20\x55\x04\x2f\x32\xcd\x8e\x6c\x68\x92\x1d\x32\x33\x95\x22\xfb\xdd\x25\x5b\x6d\x2b\x14\x3d\x26\x79\xbc\xbc\x64\x3e\x26\x00\x00\x2e\x91\x62\x8b\x8a\xae\x81\xed\x0e\x80\xcb\x98\xc8\x35\xe0\x44\x51\xba\xff\x94\x95\x0a\x97\x20\xe4\xfe\x7d\x13\xbe\x10\x6a\xe8\xf3\x63\x48\x24\x8a\x89\x5d\x03\xd9\x62\x1c\xcf\x87\x2d\xe6\x84\xc9\x1f\xd3\x2e\xaa\x16\xae\x8e\x68\xdb\x20\x1c\x71\x73\xff\x37\x48\xe2\x4b\xe0\x9a\x50\xc1\x73\xf4\x2b\x63\xd8\xf4\x56\xe0\xd6\x96\x54\x32\x29\x09\x2c\x14\x95\xde\x2c\xc2\x9c\x39\x06\x3f\x16\xcb\x5e\xc2\xa5\x6f\xcd\xeb\xcd\x65\x55\xd4\xc5\xeb\x75\xf6\xa7\xef\x67\x0f\x2f\x4f\xf1\xe2\xee\x99\x0f\xc8\x0e\x65\x2c\x9a\x7b\x0d\xeb\x83\x8e\xa5\xe5\x36\xd2\xc1\x23\x01\x9c\x95\x58\xd1\x4e\x95\xa5\x99\xcd\xb6\x88\x4c\x57\xb6\x24\x46\xbf\x9a\xfa\x3e\xed\x04\xbf\x7d\xf6\x17\x32\xec\x2e\xc3\xd4\x5b\x56\xd7\xc0\xc9\x7e\x0e\x56\x0a\x65\xbf\xa9\x02\x93\x76\x1f\x16\xaa\x67\x8d\x63\x49\xea\xb3\x76\xee\xe7\x68\x14\xd5\xa4\x76\x0f\x13\x80\xe1\x33\x00\x00\xff\xff\x0b\x6d\xff\x0b\x0c\x02\x00\x00")

func stashPlansStashEnterpriseJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPlansStashEnterpriseJson,
		"stash-plans/stash-enterprise.json",
	)
}

func stashPlansStashEnterpriseJson() (*asset, error) {
	bytes, err := stashPlansStashEnterpriseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-plans/stash-enterprise.json", size: 524, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _stashPostgresPlansPostgresqlCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x51\x4b\xc3\x30\x14\x85\xdf\xfb\x2b\x2e\x79\x76\x9b\x20\x28\xf6\x4d\x1c\xca\x40\x71\xc3\xbd\xcb\x5d\x12\x6c\x6c\x72\x13\x93\x9b\x49\x91\xfe\x77\x69\xba\x76\xc3\xc7\x84\x2f\xdf\x39\x39\xbf\x15\x80\x70\x9a\x51\x21\xa3\xa8\x61\x38\x03\x08\x42\xa7\x45\x0d\x22\xf8\xc4\x9f\x51\xa7\x6f\xbb\x90\xde\xb9\x4c\x86\x3b\x71\x35\x32\x32\x6a\x64\xe3\x69\x6f\x9c\x4e\x8c\x2e\x88\x1a\x28\x5b\x5b\x01\xf4\x03\x22\x52\xd0\xf2\xac\x34\xaa\x08\x2d\xd2\xc7\x33\xc9\x9b\xd7\xbb\xfb\xb7\xfd\x6d\x4b\x6b\x35\xf9\xa6\xcc\xed\x98\xf9\xbe\x7b\x81\xc7\xff\x99\x21\x7a\x95\x25\x6f\xd6\xc5\x15\xbd\x2a\xae\xee\x6b\xb3\xc5\x9f\xec\x77\x4f\x33\xd7\x60\x2a\xb2\x07\xc9\xe6\xa8\xa7\xeb\x43\x26\x65\xf5\xdc\x09\x40\xe4\x68\x07\xac\x61\x0e\xa9\x5e\xad\x46\x20\x2d\xdb\x7c\xd0\x01\x65\xbb\x94\xde\x9d\x1e\x5f\x34\x4c\x8c\xa9\x59\x4c\xdb\x5c\x2c\x53\xc0\xfe\x14\x86\xce\x67\x62\x51\xc3\xf5\x34\x58\x8e\x51\x93\xec\x06\x45\x4e\xf3\xbf\x0d\xb1\x8e\x47\x2c\x3d\x9c\x27\x6e\xc4\x79\x41\x46\xce\x69\xe8\xdb\x57\xfd\x5f\x00\x00\x00\xff\xff\xf1\x6f\x7a\xee\xab\x01\x00\x00")

func stashPostgresPlansPostgresqlCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_stashPostgresPlansPostgresqlCommunityJson,
		"stash-postgres-plans/postgresql-community.json",
	)
}

func stashPostgresPlansPostgresqlCommunityJson() (*asset, error) {
	bytes, err := stashPostgresPlansPostgresqlCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "stash-postgres-plans/postgresql-community.json", size: 427, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _swiftPlansSwiftCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x4b\x33\x31\x10\x86\xef\xfd\x15\x43\xce\xdf\xd7\x0a\xbd\xed\xad\xa8\x88\x1e\x44\xdd\x42\x8f\x32\x4d\x46\x36\x74\x33\x09\xc9\x4c\x75\x91\xfd\xef\x92\x6d\xb7\x05\x0f\x1e\x93\x79\xe7\x79\x86\xf7\x7b\x01\x60\x02\x09\x3a\x14\x34\x0d\xd4\x37\x80\x61\x0c\x64\x1a\x30\xe5\xd3\x7f\xc8\x7f\x1b\x43\x50\xf6\x32\x98\x7f\xa7\xb1\xcd\x84\xe2\x23\x6f\x7d\xa0\x22\x18\x92\x69\x80\xb5\xef\x17\x00\x63\x8d\x98\x92\xc8\x5e\x69\xde\x55\x56\xea\x91\xdf\x1f\xd8\xae\x87\xd7\x56\xb7\x03\x7d\xbd\x3d\xcf\xbc\x59\xd7\x56\x1d\xdc\xfe\xd6\xa5\x1c\x9d\x5a\x79\xbc\x9b\x30\x39\xba\x09\xb3\x7b\x6a\x37\x9d\xdc\xbf\xac\x77\x97\x5c\x87\x65\xe2\x6c\xac\xf8\x23\xcd\xdf\x7b\x65\xd7\xd3\xe5\x1c\x00\xa3\xb9\xaf\xb1\x4e\x24\x95\x66\xb5\x3a\x05\xca\xf2\xa0\x7b\x4a\x68\x0f\x4b\x1b\xc3\x79\xf9\x8f\x2e\xa6\xf9\x78\x76\x60\x88\xca\x62\x1a\xb8\x99\x2b\xd2\x9c\x89\xed\x50\x37\xb5\xb8\xf9\x16\xcf\x42\xf9\x88\x93\x3e\x44\x96\xce\x5c\x3b\x13\x14\x2d\xf5\xcc\x71\x31\xfe\x04\x00\x00\xff\xff\x4f\x33\xef\x05\x98\x01\x00\x00")

func swiftPlansSwiftCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_swiftPlansSwiftCommunityJson,
		"swift-plans/swift-community.json",
	)
}

func swiftPlansSwiftCommunityJson() (*asset, error) {
	bytes, err := swiftPlansSwiftCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "swift-plans/swift-community.json", size: 408, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _voyagerPlansVoyagerCommunityJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x43\xce\xda\xfa\xa7\xa7\xbd\x49\x85\xd2\x9b\x07\x2b\x78\x92\x69\x32\xd8\xd0\xcd\x24\x26\x33\x8b\x8b\xec\x77\x97\xec\x76\x5b\xf0\xe0\x31\xe1\x37\xbf\xf7\x78\x3f\x0b\x00\x13\x48\xd0\xa1\xa0\x69\xa0\xbe\x01\x0c\x63\x20\xd3\x80\xe9\x62\x8f\x9f\x94\x6f\x6d\x0c\x41\xd9\x4b\x6f\x6e\x26\xc0\x66\x42\xf1\x91\x5f\x7d\xa0\x22\x18\x92\x69\x80\xb5\x6d\x17\x00\x43\x45\x4c\x49\x64\xaf\x3e\xef\xaa\x2d\xb5\xc8\x1f\x5b\xb6\x8f\xd6\x7e\xb9\x77\xdd\xad\x5f\xf6\xb3\x6f\x0e\x7c\x9b\x02\x61\xf3\x37\x30\xe5\xe8\xd4\xca\xee\x79\x14\xe5\xe8\x46\xd1\x7e\x5b\xe4\xfb\x61\x73\xef\xd7\x17\xee\x88\x65\x34\x3d\x59\xf1\x1d\xcd\xdf\x07\x65\xd7\xd2\xa5\x10\x80\xd1\xdc\x56\xec\x28\x92\x4a\xb3\x5a\x4d\x40\x59\x9e\xf4\x40\x09\xed\x69\x69\x63\x38\x1f\xff\xbb\xc7\x48\x0c\xe7\x14\x0c\x51\x59\x4c\x03\x77\xf3\x4c\x9a\x33\xb1\xed\xeb\xad\x16\x37\xb7\xf1\x2c\x94\x3b\x1c\x0b\x84\xc8\x72\x34\xd7\xdd\x04\x45\x4b\x2d\x3a\x2c\x86\xdf\x00\x00\x00\xff\xff\xdf\x15\xf5\x9f\x9e\x01\x00\x00")

func voyagerPlansVoyagerCommunityJsonBytes() ([]byte, error) {
	return bindataRead(
		_voyagerPlansVoyagerCommunityJson,
		"voyager-plans/voyager-community.json",
	)
}

func voyagerPlansVoyagerCommunityJson() (*asset, error) {
	bytes, err := voyagerPlansVoyagerCommunityJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voyager-plans/voyager-community.json", size: 414, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _voyagerPlansVoyagerEnterpriseJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x3d\x4b\xc4\x40\x10\x86\xfb\xfc\x8a\x61\x6a\xbd\xf3\xab\x4a\x27\x2a\x87\x8d\x95\xda\xca\xdc\x66\x30\xcb\xed\x17\x3b\xb3\xc1\x20\xf9\xef\xb2\xc9\x5d\x2c\x0e\xb4\x1c\x78\xde\x77\x1e\xde\xef\x06\x00\x3d\x2b\x75\xa4\x84\x2d\xd4\x1b\x00\x03\x79\xc6\x16\x70\x88\x23\x7d\x72\xbe\xe4\xa0\x9c\x53\xb6\xc2\x78\xb1\x10\x26\x33\xa9\x8d\xe1\xd5\x7a\x16\x25\x9f\xb0\x85\x50\x9c\x6b\x00\xa6\x8a\xa0\x24\x36\xe7\x85\xef\x4b\x21\x3c\x9d\x15\x76\x56\x92\xa3\xf1\xe5\x5f\x30\xe5\xd8\x15\xa3\xcf\x8f\x15\xab\xc7\xc7\x2e\x98\xdb\xb7\x9d\xe8\xd7\xcd\xc3\xb5\xbd\x5b\xb9\x9e\x64\xae\xba\x37\x6a\x87\x35\xbe\x2f\xa1\x73\xbc\x9a\x01\x60\xc9\xae\x62\xbd\x6a\x92\x76\xbb\x5d\x00\xd9\x1c\xca\x9e\x13\x99\xc3\xc6\x44\x7f\x0c\xff\xbd\xcc\x8c\x4c\xc7\x37\xe4\x63\x09\x8a\x2d\x5c\x9d\x06\x2b\x39\x73\x30\x63\x0d\x17\xe9\x4e\x3a\xb6\xe6\x07\x9a\x0d\x7c\x0c\xda\xe3\xef\x82\x4a\x5a\xa4\x9a\x4e\xcd\xf4\x13\x00\x00\xff\xff\xef\x3b\xf0\x50\xa9\x01\x00\x00")

func voyagerPlansVoyagerEnterpriseJsonBytes() ([]byte, error) {
	return bindataRead(
		_voyagerPlansVoyagerEnterpriseJson,
		"voyager-plans/voyager-enterprise.json",
	)
}

func voyagerPlansVoyagerEnterpriseJson() (*asset, error) {
	bytes, err := voyagerPlansVoyagerEnterpriseJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "voyager-plans/voyager-enterprise.json", size: 425, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"appscode-plans/appscode-community.json":                   appscodePlansAppscodeCommunityJson,
	"bytebuilders-plans/bytebuilders-community.json":           bytebuildersPlansBytebuildersCommunityJson,
	"guard-plans/guard-community.json":                         guardPlansGuardCommunityJson,
	"kubeci-plans/kubeci-community.json":                       kubeciPlansKubeciCommunityJson,
	"kubed-plans/kubed-community.json":                         kubedPlansKubedCommunityJson,
	"kubedb-plans/kubedb-community.json":                       kubedbPlansKubedbCommunityJson,
	"kubedb-plans/kubedb-enterprise.json":                      kubedbPlansKubedbEnterpriseJson,
	"kubeform-plans/kubeform-community.json":                   kubeformPlansKubeformCommunityJson,
	"kubeform-plans/kubeform-enterprise.json":                  kubeformPlansKubeformEnterpriseJson,
	"kubeshield-plans/kubeshield-community.json":               kubeshieldPlansKubeshieldCommunityJson,
	"kubevault-plans/kubevault-community.json":                 kubevaultPlansKubevaultCommunityJson,
	"kubevault-plans/kubevault-enterprise.json":                kubevaultPlansKubevaultEnterpriseJson,
	"pharmer-plans/pharmer-community.json":                     pharmerPlansPharmerCommunityJson,
	"searchlight-plans/searchlight-community.json":             searchlightPlansSearchlightCommunityJson,
	"service-broker-plans/servicebroker-community.json":        serviceBrokerPlansServicebrokerCommunityJson,
	"stash-cli-plans/stash-kubectl-plugin-community.json":      stashCliPlansStashKubectlPluginCommunityJson,
	"stash-elasticsearch-plans/elasticsearch-community.json":   stashElasticsearchPlansElasticsearchCommunityJson,
	"stash-mongodb-plans/mongodb-community.json":               stashMongodbPlansMongodbCommunityJson,
	"stash-mysql-plans/mysql-community.json":                   stashMysqlPlansMysqlCommunityJson,
	"stash-percona-xtradb-plans/percona-xtradb-community.json": stashPerconaXtradbPlansPerconaXtradbCommunityJson,
	"stash-plans/stash-community.json":                         stashPlansStashCommunityJson,
	"stash-plans/stash-enterprise.json":                        stashPlansStashEnterpriseJson,
	"stash-postgres-plans/postgresql-community.json":           stashPostgresPlansPostgresqlCommunityJson,
	"swift-plans/swift-community.json":                         swiftPlansSwiftCommunityJson,
	"voyager-plans/voyager-community.json":                     voyagerPlansVoyagerCommunityJson,
	"voyager-plans/voyager-enterprise.json":                    voyagerPlansVoyagerEnterpriseJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"appscode-plans": &bintree{nil, map[string]*bintree{
		"appscode-community.json": &bintree{appscodePlansAppscodeCommunityJson, map[string]*bintree{}},
	}},
	"bytebuilders-plans": &bintree{nil, map[string]*bintree{
		"bytebuilders-community.json": &bintree{bytebuildersPlansBytebuildersCommunityJson, map[string]*bintree{}},
	}},
	"guard-plans": &bintree{nil, map[string]*bintree{
		"guard-community.json": &bintree{guardPlansGuardCommunityJson, map[string]*bintree{}},
	}},
	"kubeci-plans": &bintree{nil, map[string]*bintree{
		"kubeci-community.json": &bintree{kubeciPlansKubeciCommunityJson, map[string]*bintree{}},
	}},
	"kubed-plans": &bintree{nil, map[string]*bintree{
		"kubed-community.json": &bintree{kubedPlansKubedCommunityJson, map[string]*bintree{}},
	}},
	"kubedb-plans": &bintree{nil, map[string]*bintree{
		"kubedb-community.json":  &bintree{kubedbPlansKubedbCommunityJson, map[string]*bintree{}},
		"kubedb-enterprise.json": &bintree{kubedbPlansKubedbEnterpriseJson, map[string]*bintree{}},
	}},
	"kubeform-plans": &bintree{nil, map[string]*bintree{
		"kubeform-community.json":  &bintree{kubeformPlansKubeformCommunityJson, map[string]*bintree{}},
		"kubeform-enterprise.json": &bintree{kubeformPlansKubeformEnterpriseJson, map[string]*bintree{}},
	}},
	"kubeshield-plans": &bintree{nil, map[string]*bintree{
		"kubeshield-community.json": &bintree{kubeshieldPlansKubeshieldCommunityJson, map[string]*bintree{}},
	}},
	"kubevault-plans": &bintree{nil, map[string]*bintree{
		"kubevault-community.json":  &bintree{kubevaultPlansKubevaultCommunityJson, map[string]*bintree{}},
		"kubevault-enterprise.json": &bintree{kubevaultPlansKubevaultEnterpriseJson, map[string]*bintree{}},
	}},
	"pharmer-plans": &bintree{nil, map[string]*bintree{
		"pharmer-community.json": &bintree{pharmerPlansPharmerCommunityJson, map[string]*bintree{}},
	}},
	"searchlight-plans": &bintree{nil, map[string]*bintree{
		"searchlight-community.json": &bintree{searchlightPlansSearchlightCommunityJson, map[string]*bintree{}},
	}},
	"service-broker-plans": &bintree{nil, map[string]*bintree{
		"servicebroker-community.json": &bintree{serviceBrokerPlansServicebrokerCommunityJson, map[string]*bintree{}},
	}},
	"stash-cli-plans": &bintree{nil, map[string]*bintree{
		"stash-kubectl-plugin-community.json": &bintree{stashCliPlansStashKubectlPluginCommunityJson, map[string]*bintree{}},
	}},
	"stash-elasticsearch-plans": &bintree{nil, map[string]*bintree{
		"elasticsearch-community.json": &bintree{stashElasticsearchPlansElasticsearchCommunityJson, map[string]*bintree{}},
	}},
	"stash-mongodb-plans": &bintree{nil, map[string]*bintree{
		"mongodb-community.json": &bintree{stashMongodbPlansMongodbCommunityJson, map[string]*bintree{}},
	}},
	"stash-mysql-plans": &bintree{nil, map[string]*bintree{
		"mysql-community.json": &bintree{stashMysqlPlansMysqlCommunityJson, map[string]*bintree{}},
	}},
	"stash-percona-xtradb-plans": &bintree{nil, map[string]*bintree{
		"percona-xtradb-community.json": &bintree{stashPerconaXtradbPlansPerconaXtradbCommunityJson, map[string]*bintree{}},
	}},
	"stash-plans": &bintree{nil, map[string]*bintree{
		"stash-community.json":  &bintree{stashPlansStashCommunityJson, map[string]*bintree{}},
		"stash-enterprise.json": &bintree{stashPlansStashEnterpriseJson, map[string]*bintree{}},
	}},
	"stash-postgres-plans": &bintree{nil, map[string]*bintree{
		"postgresql-community.json": &bintree{stashPostgresPlansPostgresqlCommunityJson, map[string]*bintree{}},
	}},
	"swift-plans": &bintree{nil, map[string]*bintree{
		"swift-community.json": &bintree{swiftPlansSwiftCommunityJson, map[string]*bintree{}},
	}},
	"voyager-plans": &bintree{nil, map[string]*bintree{
		"voyager-community.json":  &bintree{voyagerPlansVoyagerCommunityJson, map[string]*bintree{}},
		"voyager-enterprise.json": &bintree{voyagerPlansVoyagerEnterpriseJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
