// Copyright 2020 The Kubernetes Authors.
// SPDX-License-Identifier: Apache-2.0

// Code generated for package v1beta1 by go-bindata DO NOT EDIT. (@generated)
// sources:
// app.k8s.io_applications.yaml
package v1beta1

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _appK8sIo_applicationsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x4b\x73\xeb\xb6\x92\xf0\xde\xbf\xa2\xcb\x59\x38\xa9\xd2\xe3\xe6\xe4\xde\xef\x9b\xf1\xce\x63\x27\x19\x4f\xce\xc3\x73\xec\x73\x66\x91\xca\x02\x22\x5b\x12\x22\x12\x60\x00\xd0\xb2\x92\xca\x7f\x9f\xea\x06\x40\x91\x12\x29\xd2\x96\x93\xb9\xb9\x25\x6c\x6c\x91\x40\xa3\xbb\xd1\x4f\x80\x6c\x8a\x42\x7e\x46\x63\xa5\x56\x97\x20\x0a\x89\x4f\x0e\x15\xfd\xb2\x93\xd5\xbf\xd9\x89\xd4\xd3\xc7\xaf\xcf\x56\x52\xa5\x97\x70\x5d\x5a\xa7\xf3\x8f\x68\x75\x69\x12\xbc\xc1\xb9\x54\xd2\x49\xad\xce\x72\x74\x22\x15\x4e\x5c\x9e\x01\x08\xa5\xb4\x13\x74\xd9\xd2\x4f\x20\x98\x63\x51\x14\x46\x3f\x62\x3a\x59\x95\x33\x34\x0a\x1d\x12\xe4\x4b\x58\x3a\x57\xd8\xcb\xe9\x74\x21\xdd\xb2\x9c\x4d\x12\x9d\x4f\xb7\x3d\xc6\x56\x2e\xec\x54\x14\x45\x26\x13\x06\x38\x2d\xca\x2c\x9b\xbe\x61\xa8\x89\x56\xce\xe8\x2c\x43\x33\x5e\xa0\x62\xb8\xb3\x52\x66\x29\x1a\x46\x39\x12\xf4\xf8\xb7\xc9\xdf\x27\x7f\x3b\x03\x48\x0c\x32\x8c\x07\x99\xa3\x75\x22\x2f\x2e\x41\x95\x59\x76\x06\xa0\x44\x8e\x44\x79\x35\x8d\x9d\x88\xa2\x08\xc4\x9f\xd9\x02\x13\xa2\x63\x61\x74\x59\x70\xb7\x78\xc7\x8f\x0c\x44\x26\xc2\xe1\x42\x1b\x19\x7f\x8f\x41\x30\x70\x00\xcf\xba\xab\x2d\x78\xbe\x9a\x49\xeb\x7e\xd8\xbd\xf3\x56\x5a\xc7\x77\x8b\xac\x34\x22\x6b\x22\xc5\x37\xec\x52\x1b\xf7\x7e\x3b\xed\x98\xba\xf8\x3b\x52\x2d\xca\x4c\x98\xc6\xa0\x33\x00\x9b\xe8\x02\x2f\x81\xc7\x14\x22\xc1\xf4\x0c\x20\x70\x87\x61\x8c\x41\xa4\x29\xaf\xa2\xc8\xee\x8c\x54\x0e\xcd\xb5\xce\xca\x5c\x55\x33\xa4\x68\x13\x23\x0b\xc7\xfc\x7c\x58\x22\xb8\x4d\x81\xa0\xe7\xe0\x96\xb8\x33\x19\xb5\x9f\xad\x56\x77\xc2\x2d\x2f\x61\x42\xbc\x9b\xc4\xe1\xda\x4c\x68\x60\xe8\xe5\x99\xfe\xb0\xbd\x40\xf7\x2e\xc1\x3a\x23\xd5\xa2\x6b\xe2\xb8\x86\x90\x0a\x87\xfd\xd3\x05\x32\x1b\x33\x7e\x6e\x5c\x1b\x32\x69\x8d\x42\xd0\xb3\x9f\x31\x71\xa0\xd7\xca\x32\xf5\xb9\x70\xc9\x12\x53\x30\x41\x25\x6c\x07\x52\x22\x4d\x3f\xac\x15\x9a\x8f\x38\x6f\x60\xc3\x17\x1b\xb8\xcc\xb4\xce\x50\xa8\x36\x64\xde\x97\xf9\x0c\x8d\x25\xce\x27\x3a\x2f\xb4\x42\xe5\x2c\x18\x14\xe9\xa6\x65\x5a\x27\x5c\x69\x27\xdb\x8e\x1f\x6b\xfd\xfc\xe4\xf5\x2b\xaf\xc0\xfd\x68\x03\x26\x7b\x9a\xd6\x98\xf5\x6a\xd1\x5c\xf1\x0a\x98\xbf\xfd\xf8\xf5\x0c\x9d\xf8\xda\x8b\x74\xb2\xc4\x5c\x5c\x86\xee\xba\x40\x75\x75\x77\xfb\xf9\x9b\xfb\xc6\x65\x68\x22\x5a\xd3\x26\x90\x7e\x91\x7c\x7f\x98\x6b\xb3\x2b\xb1\x16\xae\xee\x6e\x2b\x38\x85\xd1\x05\x1a\x57\xa9\xb0\x6f\x35\xeb\x58\xbb\xba\x33\xeb\x05\x21\xe6\x7b\x41\x4a\x66\x11\xfd\xd4\x41\x02\x31\x0d\xb4\x78\xad\x91\xb4\x6a\x85\x41\x8b\xca\xd5\x35\x27\x36\x3d\x07\x11\x65\x6d\x02\xf7\x68\x08\x0c\xa9\x7e\x99\xa5\x64\xf7\x1e\xd1\x38\x30\x98\xe8\x85\x92\xbf\x56\xb0\x2d\x38\xcd\x93\x66\xc2\x61\xb0\x23\xdb\xc6\x8a\xad\x44\x06\x8f\x22\x2b\x71\x04\x42\xa5\x90\x8b\x0d\x18\x64\x89\x2e\x55\x0d\x1e\x77\xb1\x13\x78\xa7\x0d\x82\x54\xf3\xa6\x9d\x8e\x5e\x21\xd1\x79\x5e\x2a\xe9\x36\x53\x36\xc5\x72\x56\x3a\x6d\xec\x34\xc5\x47\xcc\xa6\x56\x2e\xc6\xc2\x24\x4b\xe9\x30\x71\xa5\xc1\x29\x39\x01\x46\x5d\x79\x0b\x9b\xa7\x5f\x54\x4a\x73\xd1\xc0\x75\x4f\x14\x7d\x63\x33\x7a\x60\x05\xc8\x98\xd2\x8a\x8b\x30\xd4\x53\xb1\x65\x34\x5d\x22\xee\x7c\xfc\xf6\xfe\xa1\xd2\x57\x5e\x8c\x5d\xee\x7b\x1d\xaf\x06\xda\xed\x12\x10\xc3\xa4\x9a\xa3\xf1\x8b\x38\x37\x3a\x67\x98\xa8\xd2\x42\x4b\xe5\xf8\x47\x92\x49\x54\xbb\xec\xb7\xe5\x2c\x97\xac\xad\xbf\x94\x68\x1d\xad\xd5\x04\xae\xd9\x55\xc2\x0c\xa1\x2c\x48\x0d\xd2\x09\xdc\x2a\xb8\x16\x39\x66\xd7\xc2\xe2\x1f\xbe\x00\xc4\x69\x3b\x26\xc6\x0e\x5b\x82\xba\x97\xdf\xed\xec\xb9\x56\xbb\x11\xfd\x66\xc7\x7a\xd5\xf4\xf4\xbe\xc0\xa4\xa1\x35\x34\x54\xce\xa3\x16\x93\xde\x0a\x55\x1f\x30\x69\x80\x6d\x57\x5b\x6a\x35\xab\xbb\x7b\x6b\x17\x9b\x6d\xcf\x40\x89\x85\x31\xcc\x33\xb1\x20\xa5\x92\x2a\xa5\x99\x11\xe4\x1c\xd6\x08\x0a\x31\x05\xa7\xf7\x20\xf2\x84\x10\xe1\xb0\x3a\xb2\x7f\x20\xc9\x8b\x40\xdf\xc5\x0b\xd2\x42\xaa\x15\xc2\x6c\x03\x25\xb9\x6e\xb8\xc7\x0c\x13\xa7\x4d\x0b\x58\xa7\xe1\x97\x12\xcd\x86\x42\x0a\xb8\x8e\x16\xfd\x7b\x0a\x48\x48\xea\x77\x05\xb8\xcd\x95\xd4\x70\xb4\x16\xf3\x59\xb6\xb9\x5b\x0a\x8b\x7d\x6c\xa9\xf7\xad\x69\x84\x97\xf3\xd2\x18\x54\x0e\x0a\xbe\xb9\x1f\x0e\x5c\xec\xe3\xb5\x9d\x7d\x02\x57\x0a\x30\x2f\xdc\x26\xe8\xa9\xb4\x80\xbf\x94\xf2\x51\x64\x04\xd3\x69\x38\xbf\x2f\x93\x04\x31\xc5\xf4\x7c\xd2\x41\xe0\x9e\x80\x02\xc7\x85\x81\x3f\xcc\x9a\x1e\x02\x5b\x98\xe9\x6d\x08\x85\x67\x44\x93\xbf\x44\x22\x78\xd5\x43\x59\xcd\x25\x7f\x89\x93\xc5\x04\x6e\xb0\xc8\xf4\x26\xa7\x2b\x23\xb8\xd3\xa9\x1d\xb1\x1d\x91\x09\xda\x11\x5c\x7f\xbc\xb1\x5f\x4d\xe0\xd6\x41\x22\x14\x5b\x00\xcb\x91\xd9\x6e\x93\x8a\x0c\xfe\xcf\xa5\x4a\x58\x17\xd6\xd2\x2d\x99\xcf\x0d\x6c\x2a\xd9\x21\xbe\x79\xcc\x0d\xac\x49\xd2\xda\x84\xa9\x39\xda\xd6\x10\xdf\xe7\xb3\x74\x98\xb7\xf0\x70\x87\x8b\x15\xf3\xa2\xe6\x22\xb1\x90\xaf\xb2\x9f\x11\xcc\xc6\x11\xcc\x4a\x07\xa9\x46\x0b\x4a\xef\xda\x47\xdf\xe6\x9a\x6c\xb2\x88\x6e\x73\x02\xf0\x40\x76\x56\x5a\x62\xcf\xbc\xcc\x78\x21\x64\x4a\x26\x6c\xbe\x21\xa5\x49\xb4\x4a\xb0\x70\x16\xd2\xb2\x45\x14\x7c\xcb\xb4\x5e\x95\x05\x58\x27\x16\x68\x99\x83\xba\x74\xb0\x14\x8f\x04\xa0\x10\xc6\x49\x91\x65\x2c\x86\x32\x65\xc1\x6a\x5b\xdd\x6e\x23\xe3\x9b\xcf\x0e\x5a\x6f\x1d\x94\x56\xdf\xf6\x7d\xdb\xe0\xc1\xe4\x50\xa4\xc1\xd6\xe1\x63\x8f\x56\xeb\x1d\x9a\xb2\x4d\x3a\xda\x8d\x79\xfd\xa6\x30\x46\x6c\x76\xee\x6d\x83\xee\x1e\x85\xbb\xa9\x3a\x82\x41\xc6\xce\xb2\x83\x33\xb9\x37\xf6\x1c\x96\x04\x37\x03\x62\x46\x2b\xb5\x67\xc1\x80\xa3\xb2\x0e\x6f\x00\xbd\x8b\x55\xc7\xa7\x95\xe7\xad\x08\x87\x78\x52\xc0\xcc\x48\x9c\xc7\x18\xa3\xd6\x35\x58\xc0\x8e\x55\xec\xf4\x5e\x4d\xde\x76\x2e\xb3\x4c\xaa\x74\xfa\x20\xba\xb7\xd4\x8f\x11\x55\xa0\x0b\x9f\xd5\x55\xc6\x8c\x81\x44\x7f\x7a\x90\x83\xbe\x11\xb0\xc6\xea\x48\x95\x64\x65\x1a\xbd\x34\x47\x50\x23\xb0\xf2\xd7\x18\x4f\xca\xdc\x27\x87\xed\x00\x3b\x8d\xc9\x3e\x15\xb9\x58\x20\x87\x05\x14\xd9\x08\xa9\x76\x84\x24\xc8\x05\x48\xea\xd7\x65\x3a\x7d\x13\xcc\x0a\xa2\xbc\x8b\xca\x3e\xd5\x06\x4e\xae\x7f\x6d\xf1\x95\x1d\xd8\x7f\x19\x19\xff\x15\xa7\x4d\x34\x36\xba\x47\x8f\xb0\x54\x50\xc8\x27\xcc\xda\x0c\xcd\xb6\xb1\x17\x19\xc1\x9b\x7f\x3c\xbd\xf9\xc7\x57\x5d\xc8\xc3\x10\xf3\xc2\x14\x98\x64\x30\x01\x0f\xd5\xea\x7a\x83\xcb\x48\x57\xde\x1f\x53\x62\x2a\x4a\xb7\xc4\xb6\x60\x65\xdb\x48\xc8\x66\x56\x67\xa5\x43\xf8\xf4\xf1\x6d\x4c\x4f\x3c\x38\x12\x42\xb8\x21\x2d\xa7\x5b\x61\x99\x0f\x11\x00\xc1\x77\xf1\xf0\x49\x35\xd4\x82\x30\x18\xa2\xc7\x94\x38\xfb\xf1\xbb\x6b\x78\xf3\xcd\xbf\xff\xff\xa3\x39\xc6\x9d\x5e\xb8\xe6\xb9\x54\xcd\x6d\x12\x4f\xb4\x5f\xd2\x83\x24\x9e\x73\xcf\x69\xa1\x16\xe7\xc7\x2e\xfa\x21\xd7\x00\xec\x04\xac\x49\x0e\x7a\x9d\x0e\x3f\x00\x07\x7d\x01\xb5\x15\x6e\xd6\xda\xb4\x85\x5f\xb0\xcb\xb9\x1f\x42\xd7\x2e\xa3\xb5\xc2\x0d\xf8\x0e\xc2\x5a\x9d\x48\xca\x93\x3a\x90\xae\xa2\xa3\xfa\x96\x8d\x0f\xc6\xde\x6d\xee\xff\xfb\xed\x08\x3e\xde\xfc\xc7\xbb\xfb\x11\x90\x77\x99\x09\x8b\x1d\x1c\x3e\x68\xa8\x7a\x19\x7f\x98\x33\x99\x54\xab\x21\x6c\x79\x4b\xfd\x58\xb6\xb7\xc1\x68\xd5\xe1\x11\xbd\xe8\x53\x52\xaf\xd2\xae\x6c\x84\x5a\x88\x2c\x49\xf7\x6c\x69\xe6\x82\xc2\xab\x6a\xbb\x0f\x52\x9d\x94\x79\xdc\x84\x20\xb6\xd8\xe5\x4c\x0b\x43\xa1\x2a\xba\xe4\x58\x2b\x4e\x24\xf4\x18\xf0\x60\x16\x02\x6a\x9d\xe2\xfe\x12\x3c\x87\x19\xf6\xde\x60\xa0\x85\xae\x9d\x90\x60\x59\xe6\x42\xf1\x36\x9c\x98\x65\xc8\x04\x53\x0a\x83\x4f\x45\x36\xd0\xa4\x15\xa5\x29\xf4\x36\x87\x22\x11\x39\xda\x7a\x95\x26\x1b\x4c\xd0\x27\x93\x11\x50\x99\x70\x20\xcc\x3b\x19\x16\x84\x03\x01\x6b\x9c\x59\xe9\x58\x66\x0c\xda\x96\x04\xe1\x59\x58\x1d\x69\x54\x72\x21\x59\x96\xd0\x0c\x51\xa0\x77\xdb\xde\x5d\xa6\xa5\x06\x10\xf4\xbc\x0b\xe9\xa6\x3d\x99\x78\xfb\x5e\x07\xae\xfc\x6e\x10\x43\x8d\x37\x78\x58\x77\x38\x18\xbc\x6b\xa2\x53\x1c\x79\xdf\x60\x7d\x08\x55\x88\x64\x45\x9e\xa2\x65\xb3\xf2\x58\x75\xbc\x26\x4d\x4c\x1c\x3b\xce\x9e\xb0\x4a\xa5\xf2\x51\xa6\xa5\xc8\x3a\xd7\x5b\x1b\xd0\x66\x21\x94\xfc\xf5\x60\x04\x39\x44\x05\x31\x17\x72\xb8\xac\x7e\x4b\xbd\xe3\xce\x2e\x0f\x7d\x25\xe1\x0c\x1b\xd0\x43\xf1\x78\x2f\x72\x8c\x68\xd4\xed\x32\x01\xf9\xd3\x95\x37\xe1\x9d\xe1\xad\x0a\xcf\xf0\x9f\x4d\x77\x95\x76\x5d\x32\xd0\x64\x2b\xf5\x8b\xe2\x09\x62\xd7\xb8\x5a\x25\x8b\x02\xdd\xd6\xf3\x75\x60\x4b\x51\x3f\xfc\x52\xca\x64\x45\x79\xbf\x71\x95\x3e\x95\x36\x9c\xa0\xec\x6c\x83\x4c\xe0\x5a\xe7\xb9\x56\xef\x84\x59\x75\xc0\xcc\x85\x59\xa5\x7a\xad\xc0\x6e\x94\x13\x4f\xbc\x19\x1c\xdd\x2b\x81\x37\x32\x59\x82\xc3\x27\xb7\xb3\xb9\xff\xa2\x7c\x4f\xaf\x07\x9a\x39\xde\x6e\xec\xb4\x70\x44\xa5\x07\x55\x05\xa2\xca\x3a\x91\x65\xdd\x9c\xdb\x35\x75\xcd\xe1\xf5\xc8\x2a\x1c\x48\xcc\xbc\xcf\x13\x49\x77\x60\x16\xec\x21\x3e\x92\x63\xd4\x73\x10\x50\x64\x42\x51\xc0\xae\x0d\x94\x2a\xfe\x48\xa5\x35\xa5\xf7\xab\x62\x3e\xc7\xc4\x1d\x10\xc7\x93\x6d\xdc\xa7\xe2\x64\x1b\xff\x92\xb6\xb1\x3b\xd1\x6c\x66\xe5\x94\x4e\x06\xae\x76\x9c\xc0\x87\x64\xe7\x7f\xb4\x49\xef\x88\xae\xae\x54\x33\x64\x43\xd7\xc2\x5a\xa1\x52\x23\x3a\xf2\xa0\x1e\xd2\x1f\xdb\x8e\x45\x5b\x51\x8f\x47\xa3\x3b\x56\xea\x31\x5e\xf6\xe7\x2b\xda\x44\x33\xfd\x87\x6c\xa2\x1d\x58\x25\x3e\x62\x3b\xbc\x71\x79\xab\xe6\x7a\x6b\x1a\x76\xdc\xd2\x0a\x37\x23\x7f\x8c\x51\x08\x69\xec\x01\x32\x0e\x92\x30\x6c\xb7\x9d\x30\xb9\x75\x98\xfb\xed\xc8\x83\x98\xf4\xed\xab\xc8\xbc\xd0\xc6\x09\xe5\x5a\x6c\xdd\x52\xaf\x29\x35\x13\x49\x82\xd6\xee\xb9\xcb\x17\x6c\x91\x1f\x32\x21\xad\xe6\x63\x8f\x38\x27\x5d\x16\x43\x63\x69\xa1\x90\x98\x60\x77\xe0\x0e\x75\xa2\xba\x34\x7c\x58\x36\x3f\x04\xeb\x87\x9a\x4a\xfa\x15\xa8\x10\x8d\x2b\xf6\x62\x24\x18\xde\x20\x2c\x3e\xc7\xc3\xb4\xf6\xac\xf4\x38\x0c\xbe\x33\x3a\x1f\x8e\x05\xf5\xae\x8e\x75\x05\x18\x9c\xa3\x41\x95\x20\x49\x55\x8a\x86\x1c\x42\xc5\xab\xce\x25\xe4\x23\x76\xa1\xb4\x5b\xa2\x09\x59\xd3\x31\xfe\x34\xd1\x6a\x2e\x17\xef\x44\xf1\x03\x6e\x5a\x4f\x85\x3b\x08\xf2\x07\x6c\x44\xc6\x0a\x37\x3e\x82\xb9\x8e\xa0\x0e\x39\x8f\x21\x38\xc1\x81\x87\x4c\x7a\xd0\xba\xba\xbb\xad\x8c\x68\x10\xbd\xc0\xe6\xce\x95\x8e\x6d\x90\xaf\xa5\x36\x97\x98\xa5\xfc\x88\xcf\x73\x30\xbb\xb8\x9d\x7b\x54\xf8\x98\x84\xec\x48\xa5\xae\xdb\x67\x5b\x38\x18\x45\xd1\xbd\x79\x1f\x9b\x1f\x84\xca\x49\x83\x61\xec\xc8\xab\x56\x38\x87\xd9\x3e\x1b\xe3\xf3\x86\x5e\x88\xfe\xb4\xef\xbf\xee\x3f\xbc\x9f\x7e\xaf\x3d\x8d\xd1\xd4\x59\x27\x1c\xe6\xa8\xdc\x08\x6c\x99\x2c\x29\x97\x48\xd1\x4a\x83\xe9\x3d\xdd\x99\xe4\x42\xc9\x39\x5a\x37\x09\xb3\xa1\xb1\x3f\xbe\xf9\xa9\x8f\xdf\x00\xdf\x69\x03\xf8\x24\xf2\x22\xa3\x9c\x3f\xc4\xe6\xf1\x59\x93\xa8\x1b\xd2\x7a\x66\x55\xb0\x7b\xc1\xae\xa5\x5b\x72\xaa\x54\xe8\x34\x30\x65\xed\x43\x1e\xb1\x42\x20\x73\x1e\xcc\x51\x26\x57\x78\x09\xe7\xfc\x3c\xda\x16\xf5\xdf\xc8\x2c\xff\x7e\xde\x3b\xcd\x97\xeb\x25\x1a\x84\x73\xea\x7e\xee\x11\xae\x1e\x38\xa2\x6b\x51\xfe\x86\x23\xee\x96\xc2\x81\x33\x72\xb1\x40\x83\xe9\x36\x41\xf8\x8a\x02\x68\x39\x07\xa5\xb7\xc0\x78\x8a\x5e\x88\x24\x0f\xe1\x00\x3a\xdd\x23\xf4\xc7\x37\x3f\x9d\xc3\x97\x5b\x88\xc4\xb7\x7e\x88\x2a\xc5\x27\x78\x53\xed\xf1\x14\x3a\xfd\x6a\xe2\x0f\xa5\x43\x16\x28\x2d\x24\x4b\x6d\x51\x81\x56\xd9\xa6\x7b\x23\x76\xdb\x96\xe2\x11\xc1\xea\x1c\x61\x8d\x59\x36\x8e\x47\x17\x6b\xc1\x86\x25\x8a\x02\x49\xb5\xe0\xe3\xe9\x43\x1e\x2e\xb6\xda\xe3\x62\x0f\x1f\x6e\x3e\x5c\x7a\x6c\x49\x6c\x17\x1c\x75\x29\xed\x60\x2e\x29\xe6\x12\x2a\x6d\x7b\xe8\x69\xbf\x79\x9d\x20\x42\x4b\x2f\xa4\x4e\x43\xb2\x14\xca\x9f\x5f\xd1\x6a\xcd\x4b\x57\x1a\x9c\x5c\xbc\x96\xa5\x59\xe1\xe6\x59\x36\x86\xb2\x53\x32\xc7\x4e\x83\x65\xfb\xfc\x6a\x36\xef\xd0\x79\x7c\x2b\x2a\xfe\xe9\xb3\x5d\x13\xfc\x7f\xf6\xfc\xd6\x11\xa4\xf7\x25\x7a\xfb\xa4\xbf\xaf\x69\xff\x41\xd2\x1b\x8f\x7e\x4f\x53\x9d\xd8\x69\x7c\x7e\x63\xaa\x1f\xd1\x3c\x4a\x5c\x4f\xd7\xda\xac\xa4\x5a\x8c\x49\x3d\xc7\xe1\xa9\xa9\x29\x3f\x67\x3d\xfd\x82\xff\xbc\x2a\xa5\xfc\x44\xf4\xf3\xc9\xe5\x61\x87\x68\xee\x37\x02\xaf\xc3\x13\xc2\xc3\x4e\x5f\x8d\x25\xf1\xb1\xc8\x97\xc4\x22\x17\xf7\xe1\xa9\xbd\x5d\x28\xa4\x9f\xeb\x25\x6f\x8e\x0d\xb1\x3b\x0d\x5f\x98\x8b\xd4\x3b\x4b\xa1\x36\x7f\xb8\x3a\x11\xe3\xf9\x99\xb6\x64\x33\x0e\x6f\x17\x8c\x85\x4a\xe9\x7f\x2b\xad\xa3\xeb\xaf\xc6\xe9\x52\x3e\xd3\xc0\x7c\xba\xbd\xf9\x73\x94\xac\x94\xaf\x66\x4d\x7a\xf7\x45\x80\x5d\xec\xc2\xa0\xb5\xcf\x8f\xc6\xc9\xe9\xdd\xfa\xc1\xa7\x10\xbc\x05\xb3\x53\x08\xbe\xd7\x4e\x21\x78\xb3\x9d\x42\xf0\x53\x08\xde\x64\x8c\xb6\xee\xd9\x31\x78\xb5\x9f\x4b\xa3\x4f\xd1\xf8\x29\x1a\x7f\x29\xa5\xa7\x68\xbc\xd1\x8a\xe7\x7a\xfc\x86\x32\xfe\xe7\xc3\xc3\x1d\x83\x78\x35\x3d\x2c\x8c\x76\x3a\xd1\x07\x8f\xdf\xf6\x70\xba\x0b\x83\xaa\x13\xf8\x10\xef\x9d\x52\x96\x53\xca\xf2\x57\x4d\x59\x2c\x26\x06\xdd\xf1\x47\x08\xf7\x0c\xe7\x94\xbc\xb4\x60\x76\x4a\x5e\xf6\xda\x29\x79\x69\xb6\x53\xf2\x72\x4a\x5e\x1a\xed\x74\x7e\x70\xca\x58\x4e\x19\xcb\xe9\xfc\xe0\x14\x8c\xb7\x70\xf7\x5f\x38\x18\xe7\x77\xea\x5f\x72\x7e\x10\xdf\xc7\x3f\x45\xe0\x2d\x98\x9d\x22\xf0\xbd\x76\x8a\xc0\x9b\xed\x14\x81\x9f\x22\xf0\x46\x3b\xc5\xbd\xcf\x20\xfd\x14\xf7\xfe\xcb\xc4\xbd\xff\x74\x3b\xf5\xda\x1c\x71\x8c\x47\xa3\x87\x27\xc5\xfe\x11\xfb\x4b\x90\xca\x7d\xf3\x66\x10\x01\x52\x39\x5c\xf4\xb8\x97\xd7\x39\x6b\x08\xb1\xe1\x29\xbd\x39\xa5\x37\x7f\xd5\xf4\xe6\x59\x55\x48\xe2\x3b\x28\x87\x5f\x94\x18\x88\x62\x0f\x7a\x2f\xac\x14\x65\x43\xa9\xb2\x9e\xd7\xad\x2e\xaa\x92\x66\xbe\x1c\x9b\x98\x61\x16\x8a\xe0\xd1\x32\x71\xa4\x61\x7d\x00\xca\xe5\x46\x31\x85\x59\xeb\xbb\x75\xbb\x6f\xef\xdf\x3a\xc8\x4b\x7e\x51\xdf\x25\xcb\x10\xef\x86\xfa\x67\xb1\x48\xdf\xc5\x85\x9f\x2f\x54\xc0\x6c\x81\xfa\x5a\x32\xe5\xa7\x99\x7e\xc1\x7f\xc7\x91\x35\x2d\xf2\x75\x38\x0b\x65\x5a\xbe\x7d\x2a\x0c\x5a\x2b\x87\xd5\x89\xda\x1d\xd2\xac\x7a\xe7\xd9\x1d\xf1\x89\x85\x64\xf2\xf6\x1a\x71\xbe\x3d\xb0\xe6\x6d\xfb\x71\xe9\x92\xab\xf7\x37\x98\x1e\xfb\x6e\xee\xd5\x01\x74\x42\xc1\xcf\xaa\xfc\xdd\x52\x74\x6b\x52\xf5\xf2\x9e\x2f\x6f\x3a\xf2\x27\x71\xbe\xec\x02\xbf\x95\x88\x46\x44\x20\x60\x90\xab\xa8\xb2\x80\xac\xb0\x4d\xb2\x7c\xa3\xc1\xa1\x5c\x6a\x47\x9f\x21\x1b\x08\x3d\x3b\xd7\x0d\x76\xac\x70\x13\xdf\x02\xf5\x7c\xe1\x2d\x6c\xce\xc4\xd8\xe3\x05\x56\xb0\xd0\xb7\x96\xb2\xdb\x36\xa7\x8f\x7e\x1b\x37\x72\x6d\x30\xfa\x15\x9b\x6b\xd5\x24\x79\x21\x2e\xac\x67\x3a\x49\xe3\x52\x16\x7d\x79\x18\xad\x3a\xcb\x6a\x2c\x56\xfb\x99\xf7\x03\x22\x78\x2f\x7f\xb7\x6a\x04\xef\xb5\xa3\x3f\xdf\x3e\x49\xeb\x0e\xb3\x83\xd6\xf2\x46\xa3\x7d\xaf\x1d\xf7\x3e\x9a\x39\x1e\xb5\xc1\xac\xf1\xdd\xc3\x4b\xb2\x6c\x3b\xd9\x96\xd7\xaa\xd9\xda\x09\xdc\x1e\xaa\x32\xe7\x5b\xc5\x62\x7e\xf5\x90\x72\xf1\xc0\x83\xea\x75\x3b\x1b\xc0\xb3\x25\x9c\x21\x28\xad\xc6\x5c\x8c\xf3\x70\xb0\x77\x1b\xb6\x3c\x6a\xf0\x3d\x5b\x69\x8e\x3a\xe7\xea\x53\x1d\x66\x79\x03\x0d\x8f\x82\x4f\xce\xfd\x1d\x5f\x29\x39\x13\x09\xa6\xa1\xc4\xa3\xaf\xef\x2b\x1c\x2e\x64\x57\xed\x2a\xdf\x72\x34\x0b\xa4\xb0\x3a\x39\x18\x57\x1f\xb4\x43\xbe\x3d\xcb\x9d\x77\xbd\xe4\x0d\x83\x0a\x72\x75\x9b\x9a\x71\xc5\xf6\x97\xb9\xeb\xfe\xe2\x3a\x2e\x59\xbe\x65\x7f\xd4\x8e\x5e\xbd\x4a\x7c\x9f\x45\xeb\xe5\xd8\xbe\x2f\xf2\x53\x7b\x7b\x9e\x8b\x82\x24\xff\xb7\xea\x65\xe6\xdf\xfd\x7b\xd5\x13\xb8\xe2\x32\xf7\x59\x97\xfc\xd7\x47\x84\x2d\x8e\x3a\x70\x82\xbb\x57\x67\x56\x28\xc0\x8c\x9d\x49\x07\x50\x2e\x14\xd4\xf4\x96\x23\x58\x2f\xb5\xf5\xa7\x87\xd5\x2e\xcb\xf9\x0a\x37\xe7\xa3\x86\x86\x74\x40\xa4\xce\xb7\xea\x7c\x14\xb6\x72\x76\x94\xb2\xf2\x53\xbc\x1d\x75\xce\xf7\xce\x27\x7b\x0e\xb6\x03\x76\x8f\xdb\x1d\x10\xb5\xb5\xdc\xec\x2a\xf1\xcc\x35\xe6\x07\x16\x79\xe6\xbe\xd5\xfb\xc0\xdb\xaf\x37\x5c\xd8\xb0\x8f\x4a\xc9\x1a\xa6\x7e\xf3\xf6\x6c\x6f\x09\x76\xbf\x9f\x10\x5b\xb7\x7b\xdd\xd6\xb5\xed\x89\x35\x3f\xf8\xdd\x31\x4f\x4d\x58\x04\x2e\x92\x99\x65\x7b\x05\x9c\xf7\x20\x0d\x7b\x67\xdf\x4f\x11\x78\xc0\x32\xbe\x40\x85\x46\x26\x71\xd6\xa5\xce\x52\xf4\xf5\x0f\xba\x66\x3a\xb2\x08\x6d\x1b\xc9\x5d\xe5\x61\xe1\xd8\xa2\xb5\xcd\x0a\x7f\x61\x8f\xef\x60\xa6\xd3\x3b\x5d\x26\xd5\x6a\x78\xd9\x39\xa7\x8f\x9c\xee\x79\xd5\x0a\x8e\xa6\xae\x4d\x95\x3a\x26\xbc\xf0\x62\x34\xf1\x6f\xd9\xdb\x4b\xb8\x55\x77\x46\xf3\x43\x95\x23\xff\x4d\x87\x11\x7c\x52\x2b\xa5\xd7\xaa\x2b\x51\xed\x41\xe7\x85\xa9\xdd\xce\xb7\x26\xfa\x32\xbc\xeb\x9d\xee\x51\x15\xaa\x63\x88\xaa\x9e\x76\xdc\xad\xe6\x9d\xa6\x16\x7c\xf9\x13\x18\x53\xa7\x9d\xc8\xf6\x29\x3e\x58\x2a\x5c\x79\x9f\xd6\x5f\x26\x3c\x76\xdc\x2d\x82\xee\xbf\xb5\xe0\x8d\x56\x55\x70\xa9\x9d\x71\xc3\x2c\x45\x35\x55\xb8\x3c\x8b\xd5\x76\xe3\x0c\xdb\xb3\x37\xae\xd0\x97\xa0\x21\x6f\xd1\xba\xd0\x5c\xc9\xef\x25\xa5\x3a\x32\x61\xdd\x83\x11\xca\x32\x26\x0f\x72\xa0\x2a\xbc\x15\xd6\x81\xe3\x22\xc0\xfe\x1c\x29\x50\xe2\x2a\x50\x98\xfa\x8a\x0e\x5a\x61\x58\xee\xee\x8d\x0f\x1d\xeb\x3e\x74\x85\x6f\x71\xe7\x31\x15\x0e\xc7\x34\xed\x8b\x4d\x8b\xb0\xee\x13\x7f\x81\xe1\x68\x52\xd7\xc2\x12\x77\x67\x9d\xa5\xb0\x5e\x0d\xe9\x1c\xad\x15\x8b\x61\xd8\x5e\xed\x96\x03\x09\x83\x63\xe5\x1d\x5f\xca\xda\x09\x99\x59\x5f\xfd\xa5\x7b\x55\x96\x58\x5b\xce\x17\x97\x13\x31\x28\x6c\xf7\x06\xea\xde\xd6\xb4\xef\x5e\x6d\xeb\x56\xec\xbe\xb0\xbc\x76\xaf\x81\xd1\x33\x0c\xf0\xfd\x8e\x9d\x0a\xc8\x8c\x58\xaa\xf5\x1c\x1e\x4c\x89\x23\xf8\x4e\x64\x16\x2b\x4b\xfc\xe7\xd5\x9f\xa9\xf0\x79\xe1\x94\x87\x0b\xca\x77\x2a\xed\x18\x6a\x1f\x77\xda\x9f\xee\xd9\xce\x24\xc6\x83\xdf\x53\x9c\xc4\x61\x5f\x6f\x14\xb7\x3b\x20\x6e\x93\xe4\xda\xf2\xe7\x72\x28\xe0\x5f\x6c\xef\xc6\x19\xda\xf8\x74\xeb\x20\xd1\xc6\xa0\x2d\x34\xef\x33\xfa\x53\x72\x1f\x35\x5d\xd8\x1a\x94\x51\xd8\xbb\x97\x36\x7e\xc3\x05\xb4\x82\xbc\x6c\xfd\xae\x0f\xb5\xd9\xc6\xd7\x52\xba\xbb\x0d\x5f\x95\xd9\x9f\xbe\x76\xa2\xf2\xff\xfe\xde\xc1\xb2\xb6\x33\x94\x56\x4e\xef\x5d\xf4\x44\x5f\x82\x33\xa1\xec\x8e\x75\xda\x90\x21\xa9\x5d\x29\x67\xd5\xb7\x79\x22\xd7\x83\x7e\xc0\x6f\xbf\x9f\x6d\x55\x45\x24\x09\x16\x0e\xd3\xda\x07\xc9\xfc\xd7\xce\xce\xfd\xe3\x08\xf1\x33\x66\xfc\xb3\xe6\x6d\xe1\xc7\x9f\xce\xfc\xc4\x98\x7e\x8e\xdf\x22\xa3\x8b\xff\x1b\x00\x00\xff\xff\x54\x9c\xe0\x5b\x8b\x6e\x00\x00")

func appK8sIo_applicationsYamlBytes() ([]byte, error) {
	return bindataRead(
		_appK8sIo_applicationsYaml,
		"app.k8s.io_applications.yaml",
	)
}

func appK8sIo_applicationsYaml() (*asset, error) {
	bytes, err := appK8sIo_applicationsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "app.k8s.io_applications.yaml", size: 28299, mode: os.FileMode(420), modTime: time.Unix(1573722179, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"app.k8s.io_applications.yaml": appK8sIo_applicationsYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"app.k8s.io_applications.yaml": &bintree{appK8sIo_applicationsYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
