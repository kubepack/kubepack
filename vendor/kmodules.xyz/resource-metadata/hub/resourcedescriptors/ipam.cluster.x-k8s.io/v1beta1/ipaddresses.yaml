apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: ipam.cluster.x-k8s.io
    k8s.io/kind: IPAddress
    k8s.io/resource: ipaddresses
    k8s.io/version: v1beta1
  name: ipam.cluster.x-k8s.io-v1beta1-ipaddresses
spec:
  resource:
    group: ipam.cluster.x-k8s.io
    kind: IPAddress
    name: ipaddresses
    scope: Namespaced
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: IPAddress is the Schema for the ipaddress API.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: IPAddressSpec is the desired state of an IPAddress.
          properties:
            address:
              description: Address is the IP address.
              type: string
            claimRef:
              description: ClaimRef is a reference to the claim this IPAddress was
                created for.
              properties:
                name:
                  default: ""
                  description: |-
                    Name of the referent.
                    This field is effectively required, but due to backwards compatibility is
                    allowed to be empty. Instances of this type with an empty value here are
                    almost certainly wrong.
                    TODO: Add other useful fields. apiVersion, kind, uid?
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            gateway:
              description: Gateway is the network gateway of the network the address
                is from.
              type: string
            poolRef:
              description: PoolRef is a reference to the pool that this IPAddress
                was created from.
              properties:
                apiGroup:
                  description: |-
                    APIGroup is the group for the resource being referenced.
                    If APIGroup is not specified, the specified Kind must be in the core API group.
                    For any other third-party types, APIGroup is required.
                  type: string
                kind:
                  description: Kind is the type of resource being referenced
                  type: string
                name:
                  description: Name is the name of resource being referenced
                  type: string
              required:
              - kind
              - name
              type: object
              x-kubernetes-map-type: atomic
            prefix:
              description: Prefix is the prefix of the address.
              type: integer
          required:
          - address
          - claimRef
          - poolRef
          - prefix
          type: object
      type: object
