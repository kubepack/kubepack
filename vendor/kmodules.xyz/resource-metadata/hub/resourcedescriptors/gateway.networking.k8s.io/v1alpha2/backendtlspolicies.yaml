apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: gateway.networking.k8s.io
    k8s.io/kind: BackendTLSPolicy
    k8s.io/resource: backendtlspolicies
    k8s.io/version: v1alpha2
  name: gateway.networking.k8s.io-v1alpha2-backendtlspolicies
spec:
  resource:
    group: gateway.networking.k8s.io
    kind: BackendTLSPolicy
    name: backendtlspolicies
    scope: Namespaced
    version: v1alpha2
  validation:
    openAPIV3Schema:
      description: BackendTLSPolicy provides a way to configure how a Gateway connects
        to a Backend via TLS.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: Spec defines the desired state of BackendTLSPolicy.
          properties:
            targetRef:
              description: "TargetRef identifies an API object to apply the policy
                to. Only Services have Extended support. Implementations MAY support
                additional objects, with Implementation Specific support. Note that
                this config applies to the entire referenced resource by default,
                but this default may change in the future to provide a more granular
                application of the policy. \n Support: Extended for Kubernetes Service
                \n Support: Implementation-specific for any other resource"
              properties:
                group:
                  description: Group is the group of the target resource.
                  maxLength: 253
                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                kind:
                  description: Kind is kind of the target resource.
                  maxLength: 63
                  minLength: 1
                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                  type: string
                name:
                  description: Name is the name of the target resource.
                  maxLength: 253
                  minLength: 1
                  type: string
                namespace:
                  description: Namespace is the namespace of the referent. When unspecified,
                    the local namespace is inferred. Even when policy targets a resource
                    in a different namespace, it MUST only apply to traffic originating
                    from the same namespace as the policy.
                  maxLength: 63
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                  type: string
                sectionName:
                  description: "SectionName is the name of a section within the target
                    resource. When unspecified, this targetRef targets the entire
                    resource. In the following resources, SectionName is interpreted
                    as the following: \n * Gateway: Listener Name * Service: Port
                    Name \n If a SectionName is specified, but does not exist on the
                    targeted object, the Policy must fail to attach, and the policy
                    implementation should record a `ResolvedRefs` or similar Condition
                    in the Policy's status."
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
              required:
              - group
              - kind
              - name
              type: object
            tls:
              description: TLS contains backend TLS policy configuration.
              properties:
                caCertRefs:
                  description: "CACertRefs contains one or more references to Kubernetes
                    objects that contain a PEM-encoded TLS CA certificate bundle,
                    which is used to validate a TLS handshake between the Gateway
                    and backend Pod. \n If CACertRefs is empty or unspecified, then
                    WellKnownCACerts must be specified. Only one of CACertRefs or
                    WellKnownCACerts may be specified, not both. If CACertRefs is
                    empty or unspecified, the configuration for WellKnownCACerts MUST
                    be honored instead. \n References to a resource in a different
                    namespace are invalid for the moment, although we will revisit
                    this in the future. \n A single CACertRef to a Kubernetes ConfigMap
                    kind has \"Core\" support. Implementations MAY choose to support
                    attaching multiple certificates to a backend, but this behavior
                    is implementation-specific. \n Support: Core - An optional single
                    reference to a Kubernetes ConfigMap, with the CA certificate in
                    a key named `ca.crt`. \n Support: Implementation-specific (More
                    than one reference, or other kinds of resources)."
                  items:
                    description: "LocalObjectReference identifies an API object within
                      the namespace of the referrer. The API object must be valid
                      in the cluster; the Group and Kind must be registered in the
                      cluster for this reference to be valid. \n References to objects
                      with invalid Group and Kind are not valid, and must be rejected
                      by the implementation, with appropriate Conditions set on the
                      containing object."
                    properties:
                      group:
                        description: Group is the group of the referent. For example,
                          "gateway.networking.k8s.io". When unspecified or empty string,
                          core API group is inferred.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: Kind is kind of the referent. For example "HTTPRoute"
                          or "Service".
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                  maxItems: 8
                  type: array
                hostname:
                  description: "Hostname is used for two purposes in the connection
                    between Gateways and backends: \n 1. Hostname MUST be used as
                    the SNI to connect to the backend (RFC 6066). 2. Hostname MUST
                    be used for authentication and MUST match the certificate served
                    by the matching backend. \n Support: Core"
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                wellKnownCACerts:
                  description: "WellKnownCACerts specifies whether system CA certificates
                    may be used in the TLS handshake between the gateway and backend
                    pod. \n If WellKnownCACerts is unspecified or empty (\"\"), then
                    CACertRefs must be specified with at least one entry for a valid
                    configuration. Only one of CACertRefs or WellKnownCACerts may
                    be specified, not both. \n Support: Core for \"System\""
                  enum:
                  - System
                  type: string
              required:
              - hostname
              type: object
              x-kubernetes-validations:
              - message: must not contain both CACertRefs and WellKnownCACerts
                rule: '!(has(self.caCertRefs) && size(self.caCertRefs) > 0 && has(self.wellKnownCACerts)
                  && self.wellKnownCACerts != "")'
              - message: must specify either CACertRefs or WellKnownCACerts
                rule: (has(self.caCertRefs) && size(self.caCertRefs) > 0 || has(self.wellKnownCACerts)
                  && self.wellKnownCACerts != "")
          required:
          - targetRef
          - tls
          type: object
      required:
      - spec
      type: object
