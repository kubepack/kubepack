apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: authentication.open-cluster-management.io
    k8s.io/kind: ManagedServiceAccount
    k8s.io/resource: managedserviceaccounts
    k8s.io/version: v1alpha1
  name: authentication.open-cluster-management.io-v1alpha1-managedserviceaccounts
spec:
  resource:
    group: authentication.open-cluster-management.io
    kind: ManagedServiceAccount
    name: managedserviceaccounts
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: ManagedServiceAccount is the Schema for the managedserviceaccounts
        API
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: ManagedServiceAccountSpec defines the desired state of ManagedServiceAccount
          properties:
            rotation:
              description: Rotation is the policy for rotation the credentials.
              properties:
                enabled:
                  default: true
                  description: |-
                    Enabled prescribes whether the ServiceAccount token will
                    be rotated from the upstream
                  type: boolean
                validity:
                  default: 8640h0m0s
                  description: Validity is the duration for which the signed ServiceAccount
                    token is valid.
                  type: string
              type: object
            ttlSecondsAfterCreation:
              description: |-
                ttlSecondsAfterCreation limits the lifetime of a ManagedServiceAccount.
                If the ttlSecondsAfterCreation field is set, the ManagedServiceAccount will be
                automatically deleted regardless of the ManagedServiceAccount's status.
                When the ManagedServiceAccount is deleted, its lifecycle guarantees
                (e.g. finalizers) will be honored. If this field is unset, the ManagedServiceAccount
                won't be automatically deleted. If this field is set to zero, the
                ManagedServiceAccount becomes eligible for deletion immediately after its creation.
                In order to use ttlSecondsAfterCreation, the EphemeralIdentity feature gate must be enabled.
              exclusiveMinimum: true
              format: int32
              minimum: 0
              type: integer
          required:
          - rotation
          type: object
      type: object
