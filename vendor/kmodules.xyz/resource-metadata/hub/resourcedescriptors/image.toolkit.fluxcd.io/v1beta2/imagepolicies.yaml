apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: image.toolkit.fluxcd.io
    k8s.io/kind: ImagePolicy
    k8s.io/resource: imagepolicies
    k8s.io/version: v1beta2
  name: image.toolkit.fluxcd.io-v1beta2-imagepolicies
spec:
  resource:
    group: image.toolkit.fluxcd.io
    kind: ImagePolicy
    name: imagepolicies
    scope: Namespaced
    version: v1beta2
  validation:
    openAPIV3Schema:
      description: ImagePolicy is the Schema for the imagepolicies API
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: |-
            ImagePolicySpec defines the parameters for calculating the
            ImagePolicy.
          properties:
            filterTags:
              description: |-
                FilterTags enables filtering for only a subset of tags based on a set of
                rules. If no rules are provided, all the tags from the repository will be
                ordered and compared.
              properties:
                extract:
                  description: |-
                    Extract allows a capture group to be extracted from the specified regular
                    expression pattern, useful before tag evaluation.
                  type: string
                pattern:
                  description: |-
                    Pattern specifies a regular expression pattern used to filter for image
                    tags.
                  type: string
              type: object
            imageRepositoryRef:
              description: |-
                ImageRepositoryRef points at the object specifying the image
                being scanned
              properties:
                name:
                  description: Name of the referent.
                  type: string
                namespace:
                  description: Namespace of the referent, when not specified it acts
                    as LocalObjectReference.
                  type: string
              required:
              - name
              type: object
            policy:
              description: |-
                Policy gives the particulars of the policy to be followed in
                selecting the most recent image
              properties:
                alphabetical:
                  description: Alphabetical set of rules to use for alphabetical ordering
                    of the tags.
                  properties:
                    order:
                      default: asc
                      description: |-
                        Order specifies the sorting order of the tags. Given the letters of the
                        alphabet as tags, ascending order would select Z, and descending order
                        would select A.
                      enum:
                      - asc
                      - desc
                      type: string
                  type: object
                numerical:
                  description: Numerical set of rules to use for numerical ordering
                    of the tags.
                  properties:
                    order:
                      default: asc
                      description: |-
                        Order specifies the sorting order of the tags. Given the integer values
                        from 0 to 9 as tags, ascending order would select 9, and descending order
                        would select 0.
                      enum:
                      - asc
                      - desc
                      type: string
                  type: object
                semver:
                  description: |-
                    SemVer gives a semantic version range to check against the tags
                    available.
                  properties:
                    range:
                      description: |-
                        Range gives a semver range for the image tag; the highest
                        version within the range that's a tag yields the latest image.
                      type: string
                  required:
                  - range
                  type: object
              type: object
          required:
          - imageRepositoryRef
          - policy
          type: object
      type: object
