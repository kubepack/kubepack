apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: infrastructure.cluster.x-k8s.io
    k8s.io/kind: AWSManagedMachinePool
    k8s.io/resource: awsmanagedmachinepools
    k8s.io/version: v1beta2
  name: infrastructure.cluster.x-k8s.io-v1beta2-awsmanagedmachinepools
spec:
  resource:
    group: infrastructure.cluster.x-k8s.io
    kind: AWSManagedMachinePool
    name: awsmanagedmachinepools
    scope: Namespaced
    version: v1beta2
  validation:
    openAPIV3Schema:
      description: AWSManagedMachinePool is the Schema for the awsmanagedmachinepools
        API.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: AWSManagedMachinePoolSpec defines the desired state of AWSManagedMachinePool.
          properties:
            additionalTags:
              additionalProperties:
                type: string
              description: |-
                AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the
                ones added by default.
              type: object
            amiType:
              default: AL2_x86_64
              description: AMIType defines the AMI type
              enum:
              - AL2_x86_64
              - AL2_x86_64_GPU
              - AL2_ARM_64
              - AL2023_x86_64_STANDARD
              - AL2023_ARM_64_STANDARD
              - CUSTOM
              type: string
            amiVersion:
              description: |-
                AMIVersion defines the desired AMI release version. If no version number
                is supplied then the latest version for the Kubernetes version
                will be used
              minLength: 2
              type: string
            availabilityZoneSubnetType:
              description: AvailabilityZoneSubnetType specifies which type of subnets
                to use when an availability zone is specified.
              enum:
              - public
              - private
              - all
              type: string
            availabilityZones:
              description: AvailabilityZones is an array of availability zones instances
                can run in
              items:
                type: string
              type: array
            awsLaunchTemplate:
              description: |-
                AWSLaunchTemplate specifies the launch template to use to create the managed node group.
                If AWSLaunchTemplate is specified, certain node group configuraions outside of launch template
                are prohibited (https://docs.aws.amazon.com/eks/latest/userguide/launch-templates.html).
              properties:
                additionalSecurityGroups:
                  description: |-
                    AdditionalSecurityGroups is an array of references to security groups that should be applied to the
                    instances. These security groups would be set in addition to any security groups defined
                    at the cluster level or in the actuator.
                  items:
                    description: |-
                      AWSResourceReference is a reference to a specific AWS resource by ID or filters.
                      Only one of ID or Filters may be specified. Specifying more than one will result in
                      a validation error.
                    properties:
                      filters:
                        description: |-
                          Filters is a set of key/value pairs used to identify a resource
                          They are applied according to the rules defined by the AWS API:
                          https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html
                        items:
                          description: Filter is a filter used to identify an AWS
                            resource.
                          properties:
                            name:
                              description: Name of the filter. Filter names are case-sensitive.
                              type: string
                            values:
                              description: Values includes one or more filter values.
                                Filter values are case-sensitive.
                              items:
                                type: string
                              type: array
                          required:
                          - name
                          - values
                          type: object
                        type: array
                      id:
                        description: ID of resource
                        type: string
                    type: object
                  type: array
                ami:
                  description: AMI is the reference to the AMI from which to create
                    the machine instance.
                  properties:
                    eksLookupType:
                      description: EKSOptimizedLookupType If specified, will look
                        up an EKS Optimized image in SSM Parameter store
                      enum:
                      - AmazonLinux
                      - AmazonLinuxGPU
                      type: string
                    id:
                      description: ID of resource
                      type: string
                  type: object
                iamInstanceProfile:
                  description: |-
                    The name or the Amazon Resource Name (ARN) of the instance profile associated
                    with the IAM role for the instance. The instance profile contains the IAM
                    role.
                  type: string
                imageLookupBaseOS:
                  description: |-
                    ImageLookupBaseOS is the name of the base operating system to use for
                    image lookup the AMI is not set.
                  type: string
                imageLookupFormat:
                  description: |-
                    ImageLookupFormat is the AMI naming format to look up the image for this
                    machine It will be ignored if an explicit AMI is set. Supports
                    substitutions for {{.BaseOS}} and {{.K8sVersion}} with the base OS and
                    kubernetes version, respectively. The BaseOS will be the value in
                    ImageLookupBaseOS or ubuntu (the default), and the kubernetes version as
                    defined by the packages produced by kubernetes/release without v as a
                    prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example, the default
                    image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-* will end up
                    searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-* for a
                    Machine that is targeting kubernetes v1.18.0 and the ubuntu base OS. See
                    also: https://golang.org/pkg/text/template/
                  type: string
                imageLookupOrg:
                  description: ImageLookupOrg is the AWS Organization ID to use for
                    image lookup if AMI is not set.
                  type: string
                instanceMetadataOptions:
                  description: InstanceMetadataOptions defines the behavior for applying
                    metadata to instances.
                  properties:
                    httpEndpoint:
                      default: enabled
                      description: |-
                        Enables or disables the HTTP metadata endpoint on your instances.


                        If you specify a value of disabled, you cannot access your instance metadata.


                        Default: enabled
                      enum:
                      - enabled
                      - disabled
                      type: string
                    httpPutResponseHopLimit:
                      default: 1
                      description: |-
                        The desired HTTP PUT response hop limit for instance metadata requests. The
                        larger the number, the further instance metadata requests can travel.


                        Default: 1
                      format: int64
                      maximum: 64
                      minimum: 1
                      type: integer
                    httpTokens:
                      default: optional
                      description: |-
                        The state of token usage for your instance metadata requests.


                        If the state is optional, you can choose to retrieve instance metadata with
                        or without a session token on your request. If you retrieve the IAM role
                        credentials without a token, the version 1.0 role credentials are returned.
                        If you retrieve the IAM role credentials using a valid session token, the
                        version 2.0 role credentials are returned.


                        If the state is required, you must send a session token with any instance
                        metadata retrieval requests. In this state, retrieving the IAM role credentials
                        always returns the version 2.0 credentials; the version 1.0 credentials are
                        not available.


                        Default: optional
                      enum:
                      - optional
                      - required
                      type: string
                    instanceMetadataTags:
                      default: disabled
                      description: |-
                        Set to enabled to allow access to instance tags from the instance metadata.
                        Set to disabled to turn off access to instance tags from the instance metadata.
                        For more information, see Work with instance tags using the instance metadata
                        (https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Tags.html#work-with-tags-in-IMDS).


                        Default: disabled
                      enum:
                      - enabled
                      - disabled
                      type: string
                  type: object
                instanceType:
                  description: 'InstanceType is the type of instance to create. Example:
                    m4.xlarge'
                  type: string
                name:
                  description: The name of the launch template.
                  type: string
                privateDnsName:
                  description: PrivateDNSName is the options for the instance hostname.
                  properties:
                    enableResourceNameDnsAAAARecord:
                      description: EnableResourceNameDNSAAAARecord indicates whether
                        to respond to DNS queries for instance hostnames with DNS
                        AAAA records.
                      type: boolean
                    enableResourceNameDnsARecord:
                      description: EnableResourceNameDNSARecord indicates whether
                        to respond to DNS queries for instance hostnames with DNS
                        A records.
                      type: boolean
                    hostnameType:
                      description: The type of hostname to assign to an instance.
                      enum:
                      - ip-name
                      - resource-name
                      type: string
                  type: object
                rootVolume:
                  description: RootVolume encapsulates the configuration options for
                    the root volume
                  properties:
                    deviceName:
                      description: Device name
                      type: string
                    encrypted:
                      description: Encrypted is whether the volume should be encrypted
                        or not.
                      type: boolean
                    encryptionKey:
                      description: |-
                        EncryptionKey is the KMS key to use to encrypt the volume. Can be either a KMS key ID or ARN.
                        If Encrypted is set and this is omitted, the default AWS key will be used.
                        The key must already exist and be accessible by the controller.
                      type: string
                    iops:
                      description: IOPS is the number of IOPS requested for the disk.
                        Not applicable to all types.
                      format: int64
                      type: integer
                    size:
                      description: |-
                        Size specifies size (in Gi) of the storage device.
                        Must be greater than the image snapshot size or 8 (whichever is greater).
                      format: int64
                      minimum: 8
                      type: integer
                    throughput:
                      description: Throughput to provision in MiB/s supported for
                        the volume type. Not applicable to all types.
                      format: int64
                      type: integer
                    type:
                      description: Type is the type of the volume (e.g. gp2, io1,
                        etc...).
                      type: string
                  required:
                  - size
                  type: object
                spotMarketOptions:
                  description: SpotMarketOptions are options for configuring AWSMachinePool
                    instances to be run using AWS Spot instances.
                  properties:
                    maxPrice:
                      description: MaxPrice defines the maximum price the user is
                        willing to pay for Spot VM instances
                      type: string
                  type: object
                sshKeyName:
                  description: |-
                    SSHKeyName is the name of the ssh key to attach to the instance. Valid values are empty string
                    (do not use SSH keys), a valid SSH key name, or omitted (use the default SSH key name)
                  type: string
                versionNumber:
                  description: |-
                    VersionNumber is the version of the launch template that is applied.
                    Typically a new version is created when at least one of the following happens:
                    1) A new launch template spec is applied.
                    2) One or more parameters in an existing template is changed.
                    3) A new AMI is discovered.
                  format: int64
                  type: integer
              type: object
            capacityType:
              default: onDemand
              description: CapacityType specifies the capacity type for the ASG behind
                this pool
              enum:
              - onDemand
              - spot
              type: string
            diskSize:
              description: DiskSize specifies the root disk size
              format: int32
              type: integer
            eksNodegroupName:
              description: |-
                EKSNodegroupName specifies the name of the nodegroup in AWS
                corresponding to this MachinePool. If you don't specify a name
                then a default name will be created based on the namespace and
                name of the managed machine pool.
              type: string
            instanceType:
              description: InstanceType specifies the AWS instance type
              type: string
            labels:
              additionalProperties:
                type: string
              description: Labels specifies labels for the Kubernetes node objects
              type: object
            providerIDList:
              description: |-
                ProviderIDList are the provider IDs of instances in the
                autoscaling group corresponding to the nodegroup represented by this
                machine pool
              items:
                type: string
              type: array
            remoteAccess:
              description: RemoteAccess specifies how machines can be accessed remotely
              properties:
                public:
                  description: Public specifies whether to open port 22 to the public
                    internet
                  type: boolean
                sourceSecurityGroups:
                  description: SourceSecurityGroups specifies which security groups
                    are allowed access
                  items:
                    type: string
                  type: array
                sshKeyName:
                  description: |-
                    SSHKeyName specifies which EC2 SSH key can be used to access machines.
                    If left empty, the key from the control plane is used.
                  type: string
              type: object
            roleAdditionalPolicies:
              description: |-
                RoleAdditionalPolicies allows you to attach additional polices to
                the node group role. You must enable the EKSAllowAddRoles
                feature flag to incorporate these into the created role.
              items:
                type: string
              type: array
            roleName:
              description: |-
                RoleName specifies the name of IAM role for the node group.
                If the role is pre-existing we will treat it as unmanaged
                and not delete it on deletion. If the EKSEnableIAM feature
                flag is true and no name is supplied then a role is created.
              type: string
            scaling:
              description: Scaling specifies scaling for the ASG behind this pool
              properties:
                maxSize:
                  format: int32
                  type: integer
                minSize:
                  format: int32
                  type: integer
              type: object
            subnetIDs:
              description: |-
                SubnetIDs specifies which subnets are used for the
                auto scaling group of this nodegroup
              items:
                type: string
              type: array
            taints:
              description: Taints specifies the taints to apply to the nodes of the
                machine pool
              items:
                description: Taint defines the specs for a Kubernetes taint.
                properties:
                  effect:
                    description: Effect specifies the effect for the taint
                    enum:
                    - no-schedule
                    - no-execute
                    - prefer-no-schedule
                    type: string
                  key:
                    description: Key is the key of the taint
                    type: string
                  value:
                    description: Value is the value of the taint
                    type: string
                required:
                - effect
                - key
                - value
                type: object
              type: array
            updateConfig:
              description: |-
                UpdateConfig holds the optional config to control the behaviour of the update
                to the nodegroup.
              properties:
                maxUnavailable:
                  description: |-
                    MaxUnavailable is the maximum number of nodes unavailable at once during a version update.
                    Nodes will be updated in parallel. The maximum number is 100.
                  maximum: 100
                  minimum: 1
                  type: integer
                maxUnavailablePercentage:
                  description: |-
                    MaxUnavailablePercentage is the maximum percentage of nodes unavailable during a version update. This
                    percentage of nodes will be updated in parallel, up to 100 nodes at once.
                  maximum: 100
                  minimum: 1
                  type: integer
              type: object
          type: object
      type: object
