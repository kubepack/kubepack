apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: infrastructure.cluster.x-k8s.io
    k8s.io/kind: AzureManagedMachinePool
    k8s.io/resource: azuremanagedmachinepools
    k8s.io/version: v1beta1
  name: infrastructure.cluster.x-k8s.io-v1beta1-azuremanagedmachinepools
spec:
  resource:
    group: infrastructure.cluster.x-k8s.io
    kind: AzureManagedMachinePool
    name: azuremanagedmachinepools
    scope: Namespaced
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: AzureManagedMachinePool is the Schema for the azuremanagedmachinepools
        API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: AzureManagedMachinePoolSpec defines the desired state of AzureManagedMachinePool.
          properties:
            additionalTags:
              additionalProperties:
                type: string
              description: AdditionalTags is an optional set of tags to add to Azure
                resources managed by the Azure provider, in addition to the ones added
                by default.
              type: object
            availabilityZones:
              description: AvailabilityZones - Availability zones for nodes. Must
                use VirtualMachineScaleSets AgentPoolType.
              items:
                type: string
              type: array
            enableNodePublicIP:
              description: EnableNodePublicIP controls whether or not nodes in the
                pool each have a public IP address.
              type: boolean
            enableUltraSSD:
              description: EnableUltraSSD enables the storage type UltraSSD_LRS for
                the agent pool.
              type: boolean
            kubeletConfig:
              description: KubeletConfig specifies the kubelet configurations for
                nodes.
              properties:
                allowedUnsafeSysctls:
                  description: AllowedUnsafeSysctls - Allowlist of unsafe sysctls
                    or unsafe sysctl patterns (ending in `*`).
                  items:
                    type: string
                  type: array
                containerLogMaxFiles:
                  description: ContainerLogMaxFiles - The maximum number of container
                    log files that can be present for a container. The number must
                    be â‰¥ 2.
                  format: int32
                  minimum: 2
                  type: integer
                containerLogMaxSizeMB:
                  description: ContainerLogMaxSizeMB - The maximum size (e.g. 10Mi)
                    of container log file before it is rotated.
                  format: int32
                  type: integer
                cpuCfsQuota:
                  description: CPUCfsQuota - Enable CPU CFS quota enforcement for
                    containers that specify CPU limits.
                  type: boolean
                cpuCfsQuotaPeriod:
                  description: CPUCfsQuotaPeriod - Sets CPU CFS quota period value.
                  type: string
                cpuManagerPolicy:
                  description: CPUManagerPolicy - CPU Manager policy to use.
                  enum:
                  - none
                  - static
                  type: string
                failSwapOn:
                  description: FailSwapOn - If set to true it will make the Kubelet
                    fail to start if swap is enabled on the node.
                  type: boolean
                imageGcHighThreshold:
                  description: ImageGcHighThreshold - The percent of disk usage after
                    which image garbage collection is always run.
                  format: int32
                  maximum: 100
                  minimum: 0
                  type: integer
                imageGcLowThreshold:
                  description: ImageGcLowThreshold - The percent of disk usage before
                    which image garbage collection is never run.
                  format: int32
                  maximum: 100
                  minimum: 0
                  type: integer
                podMaxPids:
                  description: PodMaxPids - The maximum number of processes per pod.
                  format: int32
                  minimum: -1
                  type: integer
                topologyManagerPolicy:
                  description: TopologyManagerPolicy - Topology Manager policy to
                    use.
                  enum:
                  - none
                  - best-effort
                  - restricted
                  - single-numa-node
                  type: string
              type: object
            kubeletDiskType:
              description: 'KubeletDiskType specifies the kubelet disk type. Default
                to OS. Possible values include: ''OS'', ''Temporary''. Requires kubeletDisk
                preview feature to be set.'
              enum:
              - OS
              - Temporary
              type: string
            linuxOSConfig:
              description: LinuxOSConfig specifies the custom Linux OS settings and
                configurations.
              properties:
                swapFileSizeMB:
                  description: 'SwapFileSizeMB specifies size in MB of a swap file
                    will be created on the agent nodes from this node pool. Max value
                    of SwapFileSizeMB should be the size of temporary disk(/dev/sdb).
                    Refer: https://learn.microsoft.com/en-us/azure/virtual-machines/managed-disks-overview#temporary-disk'
                  format: int32
                  minimum: 1
                  type: integer
                sysctls:
                  description: Sysctl specifies the settings for Linux agent nodes.
                  properties:
                    fsAioMaxNr:
                      description: FsAioMaxNr specifies the maximum number of system-wide
                        asynchronous io requests. Maps to fs.aio-max-nr.
                      format: int32
                      maximum: 6553500
                      minimum: 65536
                      type: integer
                    fsFileMax:
                      description: FsFileMax specifies the max number of file-handles
                        that the Linux kernel will allocate, by increasing increases
                        the maximum number of open files permitted. Maps to fs.file-max.
                      format: int32
                      maximum: 12000500
                      minimum: 8192
                      type: integer
                    fsInotifyMaxUserWatches:
                      description: FsInotifyMaxUserWatches specifies the number of
                        file watches allowed by the system. Each watch is roughly
                        90 bytes on a 32-bit kernel, and roughly 160 bytes on a 64-bit
                        kernel. Maps to fs.inotify.max_user_watches.
                      format: int32
                      maximum: 2097152
                      minimum: 781250
                      type: integer
                    fsNrOpen:
                      description: FsNrOpen specifies the maximum number of file-handles
                        a process can allocate. Maps to fs.nr_open.
                      format: int32
                      maximum: 20000500
                      minimum: 8192
                      type: integer
                    kernelThreadsMax:
                      description: KernelThreadsMax specifies the maximum number of
                        all threads that can be created. Maps to kernel.threads-max.
                      format: int32
                      maximum: 513785
                      minimum: 20
                      type: integer
                    netCoreNetdevMaxBacklog:
                      description: NetCoreNetdevMaxBacklog specifies maximum number
                        of packets, queued on the INPUT side, when the interface receives
                        packets faster than kernel can process them. Maps to net.core.netdev_max_backlog.
                      format: int32
                      maximum: 3240000
                      minimum: 1000
                      type: integer
                    netCoreOptmemMax:
                      description: NetCoreOptmemMax specifies the maximum ancillary
                        buffer size (option memory buffer) allowed per socket. Socket
                        option memory is used in a few cases to store extra structures
                        relating to usage of the socket. Maps to net.core.optmem_max.
                      format: int32
                      maximum: 4194304
                      minimum: 20480
                      type: integer
                    netCoreRmemDefault:
                      description: NetCoreRmemDefault specifies the default receive
                        socket buffer size in bytes. Maps to net.core.rmem_default.
                      format: int32
                      maximum: 134217728
                      minimum: 212992
                      type: integer
                    netCoreRmemMax:
                      description: NetCoreRmemMax specifies the maximum receive socket
                        buffer size in bytes. Maps to net.core.rmem_max.
                      format: int32
                      maximum: 134217728
                      minimum: 212992
                      type: integer
                    netCoreSomaxconn:
                      description: NetCoreSomaxconn specifies maximum number of connection
                        requests that can be queued for any given listening socket.
                        An upper limit for the value of the backlog parameter passed
                        to the listen(2)(https://man7.org/linux/man-pages/man2/listen.2.html)
                        function. If the backlog argument is greater than the somaxconn,
                        then it's silently truncated to this limit. Maps to net.core.somaxconn.
                      format: int32
                      maximum: 3240000
                      minimum: 4096
                      type: integer
                    netCoreWmemDefault:
                      description: NetCoreWmemDefault specifies the default send socket
                        buffer size in bytes. Maps to net.core.wmem_default.
                      format: int32
                      maximum: 134217728
                      minimum: 212992
                      type: integer
                    netCoreWmemMax:
                      description: NetCoreWmemMax specifies the maximum send socket
                        buffer size in bytes. Maps to net.core.wmem_max.
                      format: int32
                      maximum: 134217728
                      minimum: 212992
                      type: integer
                    netIpv4IPLocalPortRange:
                      description: NetIpv4IPLocalPortRange is used by TCP and UDP
                        traffic to choose the local port on the agent node. PortRange
                        should be specified in the format "first last". First, being
                        an integer, must be between [1024 - 60999]. Last, being an
                        integer, must be between [32768 - 65000]. Maps to net.ipv4.ip_local_port_range.
                      type: string
                    netIpv4NeighDefaultGcThresh1:
                      description: NetIpv4NeighDefaultGcThresh1 specifies the minimum
                        number of entries that may be in the ARP cache. Garbage collection
                        won't be triggered if the number of entries is below this
                        setting. Maps to net.ipv4.neigh.default.gc_thresh1.
                      format: int32
                      maximum: 80000
                      minimum: 128
                      type: integer
                    netIpv4NeighDefaultGcThresh2:
                      description: NetIpv4NeighDefaultGcThresh2 specifies soft maximum
                        number of entries that may be in the ARP cache. ARP garbage
                        collection will be triggered about 5 seconds after reaching
                        this soft maximum. Maps to net.ipv4.neigh.default.gc_thresh2.
                      format: int32
                      maximum: 90000
                      minimum: 512
                      type: integer
                    netIpv4NeighDefaultGcThresh3:
                      description: NetIpv4NeighDefaultGcThresh3 specified hard maximum
                        number of entries in the ARP cache. Maps to net.ipv4.neigh.default.gc_thresh3.
                      format: int32
                      maximum: 100000
                      minimum: 1024
                      type: integer
                    netIpv4TCPFinTimeout:
                      description: NetIpv4TCPFinTimeout specifies the length of time
                        an orphaned connection will remain in the FIN_WAIT_2 state
                        before it's aborted at the local end. Maps to net.ipv4.tcp_fin_timeout.
                      format: int32
                      maximum: 120
                      minimum: 5
                      type: integer
                    netIpv4TCPKeepaliveProbes:
                      description: NetIpv4TCPKeepaliveProbes specifies the number
                        of keepalive probes TCP sends out, until it decides the connection
                        is broken. Maps to net.ipv4.tcp_keepalive_probes.
                      format: int32
                      maximum: 15
                      minimum: 1
                      type: integer
                    netIpv4TCPKeepaliveTime:
                      description: NetIpv4TCPKeepaliveTime specifies the rate at which
                        TCP sends out a keepalive message when keepalive is enabled.
                        Maps to net.ipv4.tcp_keepalive_time.
                      format: int32
                      maximum: 432000
                      minimum: 30
                      type: integer
                    netIpv4TCPMaxSynBacklog:
                      description: NetIpv4TCPMaxSynBacklog specifies the maximum number
                        of queued connection requests that have still not received
                        an acknowledgment from the connecting client. If this number
                        is exceeded, the kernel will begin dropping requests. Maps
                        to net.ipv4.tcp_max_syn_backlog.
                      format: int32
                      maximum: 3240000
                      minimum: 128
                      type: integer
                    netIpv4TCPMaxTwBuckets:
                      description: NetIpv4TCPMaxTwBuckets specifies maximal number
                        of timewait sockets held by system simultaneously. If this
                        number is exceeded, time-wait socket is immediately destroyed
                        and warning is printed. Maps to net.ipv4.tcp_max_tw_buckets.
                      format: int32
                      maximum: 1440000
                      minimum: 8000
                      type: integer
                    netIpv4TCPTwReuse:
                      description: NetIpv4TCPTwReuse is used to allow to reuse TIME-WAIT
                        sockets for new connections when it's safe from protocol viewpoint.
                        Maps to net.ipv4.tcp_tw_reuse.
                      type: boolean
                    netIpv4TCPkeepaliveIntvl:
                      description: NetIpv4TCPkeepaliveIntvl specifies the frequency
                        of the probes sent out. Multiplied by tcpKeepaliveprobes,
                        it makes up the time to kill a connection that isn't responding,
                        after probes started. Maps to net.ipv4.tcp_keepalive_intvl.
                      format: int32
                      maximum: 75
                      minimum: 1
                      type: integer
                    netNetfilterNfConntrackBuckets:
                      description: NetNetfilterNfConntrackBuckets specifies the size
                        of hash table used by nf_conntrack module to record the established
                        connection record of the TCP protocol. Maps to net.netfilter.nf_conntrack_buckets.
                      format: int32
                      maximum: 147456
                      minimum: 65536
                      type: integer
                    netNetfilterNfConntrackMax:
                      description: NetNetfilterNfConntrackMax specifies the maximum
                        number of connections supported by the nf_conntrack module
                        or the size of connection tracking table. Maps to net.netfilter.nf_conntrack_max.
                      format: int32
                      maximum: 1048576
                      minimum: 131072
                      type: integer
                    vmMaxMapCount:
                      description: VMMaxMapCount specifies the maximum number of memory
                        map areas a process may have. Maps to vm.max_map_count.
                      format: int32
                      maximum: 262144
                      minimum: 65530
                      type: integer
                    vmSwappiness:
                      description: VMSwappiness specifies aggressiveness of the kernel
                        in swapping memory pages. Higher values will increase aggressiveness,
                        lower values decrease the amount of swap. Maps to vm.swappiness.
                      format: int32
                      maximum: 100
                      minimum: 0
                      type: integer
                    vmVfsCachePressure:
                      description: VMVfsCachePressure specifies the percentage value
                        that controls tendency of the kernel to reclaim the memory,
                        which is used for caching of directory and inode objects.
                        Maps to vm.vfs_cache_pressure.
                      format: int32
                      maximum: 500
                      minimum: 1
                      type: integer
                  type: object
                transparentHugePageDefrag:
                  description: TransparentHugePageDefrag specifies whether the kernel
                    should make aggressive use of memory compaction to make more hugepages
                    available. Refer to https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge
                    for more details.
                  enum:
                  - always
                  - defer
                  - defer+madvise
                  - madvise
                  - never
                  type: string
                transparentHugePageEnabled:
                  description: TransparentHugePageEnabled specifies various modes
                    of Transparent Hugepages. Refer to https://www.kernel.org/doc/html/latest/admin-guide/mm/transhuge.html#admin-guide-transhuge
                    for more details.
                  enum:
                  - always
                  - madvise
                  - never
                  type: string
              type: object
            maxPods:
              description: MaxPods specifies the kubelet --max-pods configuration
                for the node pool.
              format: int32
              type: integer
            mode:
              description: 'Mode - represents mode of an agent pool. Possible values
                include: System, User.'
              enum:
              - System
              - User
              type: string
            name:
              description: Name - name of the agent pool. If not specified, CAPZ uses
                the name of the CR as the agent pool name.
              type: string
            nodeLabels:
              additionalProperties:
                type: string
              description: Node labels - labels for all of the nodes present in node
                pool
              type: object
            nodePublicIPPrefixID:
              description: NodePublicIPPrefixID specifies the public IP prefix resource
                ID which VM nodes should use IPs from.
              type: string
            osDiskSizeGB:
              description: OSDiskSizeGB is the disk size for every machine in this
                agent pool. If you specify 0, it will apply the default osDisk size
                according to the vmSize specified.
              format: int32
              type: integer
            osDiskType:
              default: Managed
              description: OsDiskType specifies the OS disk type for each node in
                the pool. Allowed values are 'Ephemeral' and 'Managed'.
              enum:
              - Ephemeral
              - Managed
              type: string
            osType:
              description: 'OSType specifies the virtual machine operating system.
                Default to Linux. Possible values include: ''Linux'', ''Windows'''
              enum:
              - Linux
              - Windows
              type: string
            providerIDList:
              description: ProviderIDList is the unique identifier as specified by
                the cloud provider.
              items:
                type: string
              type: array
            scaleSetPriority:
              description: 'ScaleSetPriority specifies the ScaleSetPriority value.
                Default to Regular. Possible values include: ''Regular'', ''Spot'''
              enum:
              - Regular
              - Spot
              type: string
            scaling:
              description: Scaling specifies the autoscaling parameters for the node
                pool.
              properties:
                maxSize:
                  format: int32
                  type: integer
                minSize:
                  format: int32
                  type: integer
              type: object
            sku:
              description: SKU is the size of the VMs in the node pool.
              type: string
            subnetName:
              description: SubnetName specifies the Subnet where the MachinePool will
                be placed
              type: string
            taints:
              description: Taints specifies the taints for nodes present in this agent
                pool.
              items:
                description: Taint represents a Kubernetes taint.
                properties:
                  effect:
                    description: Effect specifies the effect for the taint
                    enum:
                    - NoSchedule
                    - NoExecute
                    - PreferNoSchedule
                    type: string
                  key:
                    description: Key is the key of the taint
                    type: string
                  value:
                    description: Value is the value of the taint
                    type: string
                required:
                - effect
                - key
                - value
                type: object
              type: array
          required:
          - mode
          - sku
          type: object
      type: object
