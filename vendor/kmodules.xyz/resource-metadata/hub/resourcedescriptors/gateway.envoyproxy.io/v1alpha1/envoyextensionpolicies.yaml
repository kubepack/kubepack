apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: gateway.envoyproxy.io
    k8s.io/kind: EnvoyExtensionPolicy
    k8s.io/resource: envoyextensionpolicies
    k8s.io/version: v1alpha1
  name: gateway.envoyproxy.io-v1alpha1-envoyextensionpolicies
spec:
  resource:
    group: gateway.envoyproxy.io
    kind: EnvoyExtensionPolicy
    name: envoyextensionpolicies
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: EnvoyExtensionPolicy allows the user to configure various envoy
        extensibility options for the Gateway.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: Spec defines the desired state of EnvoyExtensionPolicy.
          properties:
            extProc:
              description: |-
                ExtProc is an ordered list of external processing filters
                that should be added to the envoy filter chain
              items:
                description: ExtProc defines the configuration for External Processing
                  filter.
                properties:
                  backendRef:
                    description: |-
                      BackendRef references a Kubernetes object that represents the
                      backend server to which the authorization request will be sent.

                      Deprecated: Use BackendRefs instead.
                    properties:
                      group:
                        default: ""
                        description: |-
                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                          When unspecified or empty string, core API group is inferred.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        default: Service
                        description: |-
                          Kind is the Kubernetes resource kind of the referent. For example
                          "Service".

                          Defaults to "Service" when not specified.

                          ExternalName services can refer to CNAME DNS records that may live
                          outside of the cluster and as such are difficult to reason about in
                          terms of conformance. They also may not be safe to forward to (see
                          CVE-2021-25740 for more information). Implementations SHOULD NOT
                          support ExternalName Services.

                          Support: Core (Services with a type other than ExternalName)

                          Support: Implementation-specific (Services with type ExternalName)
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: |-
                          Namespace is the namespace of the backend. When unspecified, the local
                          namespace is inferred.

                          Note that when a namespace different than the local namespace is specified,
                          a ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.

                          Support: Core
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                      port:
                        description: |-
                          Port specifies the destination port number to use for this resource.
                          Port is required when the referent is a Kubernetes Service. In this
                          case, the port number is the service port number, not the target port.
                          For other resources, destination port might be derived from the referent
                          resource or this field.
                        format: int32
                        maximum: 65535
                        minimum: 1
                        type: integer
                    required:
                    - name
                    type: object
                    x-kubernetes-validations:
                    - message: Must have port for Service reference
                      rule: '(size(self.group) == 0 && self.kind == ''Service'') ?
                        has(self.port) : true'
                  backendRefs:
                    description: |-
                      BackendRefs references a Kubernetes object that represents the
                      backend server to which the authorization request will be sent.
                    items:
                      description: BackendRef defines how an ObjectReference that
                        is specific to BackendRef.
                      properties:
                        fallback:
                          description: |-
                            Fallback indicates whether the backend is designated as a fallback.
                            Multiple fallback backends can be configured.
                            It is highly recommended to configure active or passive health checks to ensure that failover can be detected
                            when the active backends become unhealthy and to automatically readjust once the primary backends are healthy again.
                            The overprovisioning factor is set to 1.4, meaning the fallback backends will only start receiving traffic when
                            the health of the active backends falls below 72%.
                          type: boolean
                        group:
                          default: ""
                          description: |-
                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                            When unspecified or empty string, core API group is inferred.
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Service
                          description: |-
                            Kind is the Kubernetes resource kind of the referent. For example
                            "Service".

                            Defaults to "Service" when not specified.

                            ExternalName services can refer to CNAME DNS records that may live
                            outside of the cluster and as such are difficult to reason about in
                            terms of conformance. They also may not be safe to forward to (see
                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                            support ExternalName Services.

                            Support: Core (Services with a type other than ExternalName)

                            Support: Implementation-specific (Services with type ExternalName)
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: Name is the name of the referent.
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the backend. When unspecified, the local
                            namespace is inferred.

                            Note that when a namespace different than the local namespace is specified,
                            a ReferenceGrant object is required in the referent namespace to allow that
                            namespace's owner to accept the reference. See the ReferenceGrant
                            documentation for details.

                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port specifies the destination port number to use for this resource.
                            Port is required when the referent is a Kubernetes Service. In this
                            case, the port number is the service port number, not the target port.
                            For other resources, destination port might be derived from the referent
                            resource or this field.
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                      required:
                      - name
                      type: object
                      x-kubernetes-validations:
                      - message: Must have port for Service reference
                        rule: '(size(self.group) == 0 && self.kind == ''Service'')
                          ? has(self.port) : true'
                    maxItems: 16
                    type: array
                  backendSettings:
                    description: |-
                      BackendSettings holds configuration for managing the connection
                      to the backend.
                    properties:
                      circuitBreaker:
                        description: |-
                          Circuit Breaker settings for the upstream connections and requests.
                          If not set, circuit breakers will be enabled with the default thresholds
                        properties:
                          maxConnections:
                            default: 1024
                            description: The maximum number of connections that Envoy
                              will establish to the referenced backend defined within
                              a xRoute rule.
                            format: int64
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          maxParallelRequests:
                            default: 1024
                            description: The maximum number of parallel requests that
                              Envoy will make to the referenced backend defined within
                              a xRoute rule.
                            format: int64
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          maxParallelRetries:
                            default: 1024
                            description: The maximum number of parallel retries that
                              Envoy will make to the referenced backend defined within
                              a xRoute rule.
                            format: int64
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          maxPendingRequests:
                            default: 1024
                            description: The maximum number of pending requests that
                              Envoy will queue to the referenced backend defined within
                              a xRoute rule.
                            format: int64
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                          maxRequestsPerConnection:
                            description: |-
                              The maximum number of requests that Envoy will make over a single connection to the referenced backend defined within a xRoute rule.
                              Default: unlimited.
                            format: int64
                            maximum: 4294967295
                            minimum: 0
                            type: integer
                        type: object
                      connection:
                        description: Connection includes backend connection settings.
                        properties:
                          bufferLimit:
                            allOf:
                            - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              BufferLimit Soft limit on size of the cluster’s connections read and write buffers.
                              BufferLimit applies to connection streaming (maybe non-streaming) channel between processes, it's in user space.
                              If unspecified, an implementation defined default is applied (32768 bytes).
                              For example, 20Mi, 1Gi, 256Ki etc.
                              Note: that when the suffix is not provided, the value is interpreted as bytes.
                            x-kubernetes-int-or-string: true
                          socketBufferLimit:
                            allOf:
                            - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              SocketBufferLimit provides configuration for the maximum buffer size in bytes for each socket
                              to backend.
                              SocketBufferLimit applies to socket streaming channel between TCP/IP stacks, it's in kernel space.
                              For example, 20Mi, 1Gi, 256Ki etc.
                              Note that when the suffix is not provided, the value is interpreted as bytes.
                            x-kubernetes-int-or-string: true
                        type: object
                      dns:
                        description: DNS includes dns resolution settings.
                        properties:
                          dnsRefreshRate:
                            description: |-
                              DNSRefreshRate specifies the rate at which DNS records should be refreshed.
                              Defaults to 30 seconds.
                            type: string
                          respectDnsTtl:
                            description: |-
                              RespectDNSTTL indicates whether the DNS Time-To-Live (TTL) should be respected.
                              If the value is set to true, the DNS refresh rate will be set to the resource record’s TTL.
                              Defaults to true.
                            type: boolean
                        type: object
                      healthCheck:
                        description: HealthCheck allows gateway to perform active
                          health checking on backends.
                        properties:
                          active:
                            description: Active health check configuration
                            properties:
                              grpc:
                                description: |-
                                  GRPC defines the configuration of the GRPC health checker.
                                  It's optional, and can only be used if the specified type is GRPC.
                                properties:
                                  service:
                                    description: |-
                                      Service to send in the health check request.
                                      If this is not specified, then the health check request applies to the entire
                                      server and not to a specific service.
                                    type: string
                                type: object
                              healthyThreshold:
                                default: 1
                                description: HealthyThreshold defines the number of
                                  healthy health checks required before a backend
                                  host is marked healthy.
                                format: int32
                                minimum: 1
                                type: integer
                              http:
                                description: |-
                                  HTTP defines the configuration of http health checker.
                                  It's required while the health checker type is HTTP.
                                properties:
                                  expectedResponse:
                                    description: ExpectedResponse defines a list of
                                      HTTP expected responses to match.
                                    properties:
                                      binary:
                                        description: Binary payload base64 encoded.
                                        format: byte
                                        type: string
                                      text:
                                        description: Text payload in plain text.
                                        type: string
                                      type:
                                        allOf:
                                        - enum:
                                          - Text
                                          - Binary
                                        - enum:
                                          - Text
                                          - Binary
                                        description: Type defines the type of the
                                          payload.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: If payload type is Text, text field
                                        needs to be set.
                                      rule: 'self.type == ''Text'' ? has(self.text)
                                        : !has(self.text)'
                                    - message: If payload type is Binary, binary field
                                        needs to be set.
                                      rule: 'self.type == ''Binary'' ? has(self.binary)
                                        : !has(self.binary)'
                                  expectedStatuses:
                                    description: |-
                                      ExpectedStatuses defines a list of HTTP response statuses considered healthy.
                                      Defaults to 200 only
                                    items:
                                      description: HTTPStatus defines the http status
                                        code.
                                      exclusiveMaximum: true
                                      maximum: 600
                                      minimum: 100
                                      type: integer
                                    type: array
                                  method:
                                    description: |-
                                      Method defines the HTTP method used for health checking.
                                      Defaults to GET
                                    type: string
                                  path:
                                    description: Path defines the HTTP path that will
                                      be requested during health checking.
                                    maxLength: 1024
                                    minLength: 1
                                    type: string
                                required:
                                - path
                                type: object
                              interval:
                                default: 3s
                                description: Interval defines the time between active
                                  health checks.
                                format: duration
                                type: string
                              tcp:
                                description: |-
                                  TCP defines the configuration of tcp health checker.
                                  It's required while the health checker type is TCP.
                                properties:
                                  receive:
                                    description: Receive defines the expected response
                                      payload.
                                    properties:
                                      binary:
                                        description: Binary payload base64 encoded.
                                        format: byte
                                        type: string
                                      text:
                                        description: Text payload in plain text.
                                        type: string
                                      type:
                                        allOf:
                                        - enum:
                                          - Text
                                          - Binary
                                        - enum:
                                          - Text
                                          - Binary
                                        description: Type defines the type of the
                                          payload.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: If payload type is Text, text field
                                        needs to be set.
                                      rule: 'self.type == ''Text'' ? has(self.text)
                                        : !has(self.text)'
                                    - message: If payload type is Binary, binary field
                                        needs to be set.
                                      rule: 'self.type == ''Binary'' ? has(self.binary)
                                        : !has(self.binary)'
                                  send:
                                    description: Send defines the request payload.
                                    properties:
                                      binary:
                                        description: Binary payload base64 encoded.
                                        format: byte
                                        type: string
                                      text:
                                        description: Text payload in plain text.
                                        type: string
                                      type:
                                        allOf:
                                        - enum:
                                          - Text
                                          - Binary
                                        - enum:
                                          - Text
                                          - Binary
                                        description: Type defines the type of the
                                          payload.
                                        type: string
                                    required:
                                    - type
                                    type: object
                                    x-kubernetes-validations:
                                    - message: If payload type is Text, text field
                                        needs to be set.
                                      rule: 'self.type == ''Text'' ? has(self.text)
                                        : !has(self.text)'
                                    - message: If payload type is Binary, binary field
                                        needs to be set.
                                      rule: 'self.type == ''Binary'' ? has(self.binary)
                                        : !has(self.binary)'
                                type: object
                              timeout:
                                default: 1s
                                description: Timeout defines the time to wait for
                                  a health check response.
                                format: duration
                                type: string
                              type:
                                allOf:
                                - enum:
                                  - HTTP
                                  - TCP
                                  - GRPC
                                - enum:
                                  - HTTP
                                  - TCP
                                  - GRPC
                                description: Type defines the type of health checker.
                                type: string
                              unhealthyThreshold:
                                default: 3
                                description: UnhealthyThreshold defines the number
                                  of unhealthy health checks required before a backend
                                  host is marked unhealthy.
                                format: int32
                                minimum: 1
                                type: integer
                            required:
                            - type
                            type: object
                            x-kubernetes-validations:
                            - message: If Health Checker type is HTTP, http field
                                needs to be set.
                              rule: 'self.type == ''HTTP'' ? has(self.http) : !has(self.http)'
                            - message: If Health Checker type is TCP, tcp field needs
                                to be set.
                              rule: 'self.type == ''TCP'' ? has(self.tcp) : !has(self.tcp)'
                            - message: The grpc field can only be set if the Health
                                Checker type is GRPC.
                              rule: 'has(self.grpc) ? self.type == ''GRPC'' : true'
                          passive:
                            description: Passive passive check configuration
                            properties:
                              baseEjectionTime:
                                default: 30s
                                description: BaseEjectionTime defines the base duration
                                  for which a host will be ejected on consecutive
                                  failures.
                                format: duration
                                type: string
                              consecutive5XxErrors:
                                default: 5
                                description: Consecutive5xxErrors sets the number
                                  of consecutive 5xx errors triggering ejection.
                                format: int32
                                type: integer
                              consecutiveGatewayErrors:
                                default: 0
                                description: ConsecutiveGatewayErrors sets the number
                                  of consecutive gateway errors triggering ejection.
                                format: int32
                                type: integer
                              consecutiveLocalOriginFailures:
                                default: 5
                                description: |-
                                  ConsecutiveLocalOriginFailures sets the number of consecutive local origin failures triggering ejection.
                                  Parameter takes effect only when split_external_local_origin_errors is set to true.
                                format: int32
                                type: integer
                              interval:
                                default: 3s
                                description: Interval defines the time between passive
                                  health checks.
                                format: duration
                                type: string
                              maxEjectionPercent:
                                default: 10
                                description: MaxEjectionPercent sets the maximum percentage
                                  of hosts in a cluster that can be ejected.
                                format: int32
                                type: integer
                              splitExternalLocalOriginErrors:
                                default: false
                                description: SplitExternalLocalOriginErrors enables
                                  splitting of errors between external and local origin.
                                type: boolean
                            type: object
                        type: object
                      http2:
                        description: HTTP2 provides HTTP/2 configuration for backend
                          connections.
                        properties:
                          initialConnectionWindowSize:
                            allOf:
                            - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              InitialConnectionWindowSize sets the initial window size for HTTP/2 connections.
                              If not set, the default value is 1 MiB.
                            x-kubernetes-int-or-string: true
                          initialStreamWindowSize:
                            allOf:
                            - pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            - pattern: ^[1-9]+[0-9]*([EPTGMK]i|[EPTGMk])?$
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              InitialStreamWindowSize sets the initial window size for HTTP/2 streams.
                              If not set, the default value is 64 KiB(64*1024).
                            x-kubernetes-int-or-string: true
                          maxConcurrentStreams:
                            description: |-
                              MaxConcurrentStreams sets the maximum number of concurrent streams allowed per connection.
                              If not set, the default value is 100.
                            format: int32
                            maximum: 2147483647
                            minimum: 1
                            type: integer
                          onInvalidMessage:
                            description: |-
                              OnInvalidMessage determines if Envoy will terminate the connection or just the offending stream in the event of HTTP messaging error
                              It's recommended for L2 Envoy deployments to set this value to TerminateStream.
                              https://www.envoyproxy.io/docs/envoy/latest/configuration/best_practices/level_two
                              Default: TerminateConnection
                            type: string
                        type: object
                      loadBalancer:
                        description: |-
                          LoadBalancer policy to apply when routing traffic from the gateway to
                          the backend endpoints. Defaults to `LeastRequest`.
                        properties:
                          consistentHash:
                            description: |-
                              ConsistentHash defines the configuration when the load balancer type is
                              set to ConsistentHash
                            properties:
                              cookie:
                                description: Cookie configures the cookie hash policy
                                  when the consistent hash type is set to Cookie.
                                properties:
                                  attributes:
                                    additionalProperties:
                                      type: string
                                    description: Additional Attributes to set for
                                      the generated cookie.
                                    type: object
                                  name:
                                    description: |-
                                      Name of the cookie to hash.
                                      If this cookie does not exist in the request, Envoy will generate a cookie and set
                                      the TTL on the response back to the client based on Layer 4
                                      attributes of the backend endpoint, to ensure that these future requests
                                      go to the same backend endpoint. Make sure to set the TTL field for this case.
                                    type: string
                                  ttl:
                                    description: |-
                                      TTL of the generated cookie if the cookie is not present. This value sets the
                                      Max-Age attribute value.
                                    type: string
                                required:
                                - name
                                type: object
                              header:
                                description: Header configures the header hash policy
                                  when the consistent hash type is set to Header.
                                properties:
                                  name:
                                    description: Name of the header to hash.
                                    type: string
                                required:
                                - name
                                type: object
                              tableSize:
                                default: 65537
                                description: The table size for consistent hashing,
                                  must be prime number limited to 5000011.
                                format: int64
                                maximum: 5000011
                                minimum: 2
                                type: integer
                              type:
                                description: |-
                                  ConsistentHashType defines the type of input to hash on. Valid Type values are
                                  "SourceIP",
                                  "Header",
                                  "Cookie".
                                enum:
                                - SourceIP
                                - Header
                                - Cookie
                                type: string
                            required:
                            - type
                            type: object
                            x-kubernetes-validations:
                            - message: If consistent hash type is header, the header
                                field must be set.
                              rule: 'self.type == ''Header'' ? has(self.header) :
                                !has(self.header)'
                            - message: If consistent hash type is cookie, the cookie
                                field must be set.
                              rule: 'self.type == ''Cookie'' ? has(self.cookie) :
                                !has(self.cookie)'
                          slowStart:
                            description: |-
                              SlowStart defines the configuration related to the slow start load balancer policy.
                              If set, during slow start window, traffic sent to the newly added hosts will gradually increase.
                              Currently this is only supported for RoundRobin and LeastRequest load balancers
                            properties:
                              window:
                                description: |-
                                  Window defines the duration of the warm up period for newly added host.
                                  During slow start window, traffic sent to the newly added hosts will gradually increase.
                                  Currently only supports linear growth of traffic. For additional details,
                                  see https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto#config-cluster-v3-cluster-slowstartconfig
                                type: string
                            required:
                            - window
                            type: object
                          type:
                            description: |-
                              Type decides the type of Load Balancer policy.
                              Valid LoadBalancerType values are
                              "ConsistentHash",
                              "LeastRequest",
                              "Random",
                              "RoundRobin".
                            enum:
                            - ConsistentHash
                            - LeastRequest
                            - Random
                            - RoundRobin
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: If LoadBalancer type is consistentHash, consistentHash
                            field needs to be set.
                          rule: 'self.type == ''ConsistentHash'' ? has(self.consistentHash)
                            : !has(self.consistentHash)'
                        - message: Currently SlowStart is only supported for RoundRobin
                            and LeastRequest load balancers.
                          rule: 'self.type in [''Random'', ''ConsistentHash''] ? !has(self.slowStart)
                            : true '
                      proxyProtocol:
                        description: ProxyProtocol enables the Proxy Protocol when
                          communicating with the backend.
                        properties:
                          version:
                            description: |-
                              Version of ProxyProtol
                              Valid ProxyProtocolVersion values are
                              "V1"
                              "V2"
                            enum:
                            - V1
                            - V2
                            type: string
                        required:
                        - version
                        type: object
                      retry:
                        description: |-
                          Retry provides more advanced usage, allowing users to customize the number of retries, retry fallback strategy, and retry triggering conditions.
                          If not set, retry will be disabled.
                        properties:
                          numRetries:
                            default: 2
                            description: NumRetries is the number of retries to be
                              attempted. Defaults to 2.
                            format: int32
                            minimum: 0
                            type: integer
                          perRetry:
                            description: PerRetry is the retry policy to be applied
                              per retry attempt.
                            properties:
                              backOff:
                                description: |-
                                  Backoff is the backoff policy to be applied per retry attempt. gateway uses a fully jittered exponential
                                  back-off algorithm for retries. For additional details,
                                  see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#config-http-filters-router-x-envoy-max-retries
                                properties:
                                  baseInterval:
                                    description: BaseInterval is the base interval
                                      between retries.
                                    format: duration
                                    type: string
                                  maxInterval:
                                    description: |-
                                      MaxInterval is the maximum interval between retries. This parameter is optional, but must be greater than or equal to the base_interval if set.
                                      The default is 10 times the base_interval
                                    format: duration
                                    type: string
                                type: object
                              timeout:
                                description: Timeout is the timeout per retry attempt.
                                format: duration
                                type: string
                            type: object
                          retryOn:
                            description: |-
                              RetryOn specifies the retry trigger condition.

                              If not specified, the default is to retry on connect-failure,refused-stream,unavailable,cancelled,retriable-status-codes(503).
                            properties:
                              httpStatusCodes:
                                description: |-
                                  HttpStatusCodes specifies the http status codes to be retried.
                                  The retriable-status-codes trigger must also be configured for these status codes to trigger a retry.
                                items:
                                  description: HTTPStatus defines the http status
                                    code.
                                  exclusiveMaximum: true
                                  maximum: 600
                                  minimum: 100
                                  type: integer
                                type: array
                              triggers:
                                description: Triggers specifies the retry trigger
                                  condition(Http/Grpc).
                                items:
                                  description: TriggerEnum specifies the conditions
                                    that trigger retries.
                                  enum:
                                  - 5xx
                                  - gateway-error
                                  - reset
                                  - connect-failure
                                  - retriable-4xx
                                  - refused-stream
                                  - retriable-status-codes
                                  - cancelled
                                  - deadline-exceeded
                                  - internal
                                  - resource-exhausted
                                  - unavailable
                                  type: string
                                type: array
                            type: object
                        type: object
                      tcpKeepalive:
                        description: |-
                          TcpKeepalive settings associated with the upstream client connection.
                          Disabled by default.
                        properties:
                          idleTime:
                            description: |-
                              The duration a connection needs to be idle before keep-alive
                              probes start being sent.
                              The duration format is
                              Defaults to `7200s`.
                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                            type: string
                          interval:
                            description: |-
                              The duration between keep-alive probes.
                              Defaults to `75s`.
                            pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                            type: string
                          probes:
                            description: |-
                              The total number of unacknowledged probes to send before deciding
                              the connection is dead.
                              Defaults to 9.
                            format: int32
                            type: integer
                        type: object
                      timeout:
                        description: Timeout settings for the backend connections.
                        properties:
                          http:
                            description: Timeout settings for HTTP.
                            properties:
                              connectionIdleTimeout:
                                description: |-
                                  The idle timeout for an HTTP connection. Idle time is defined as a period in which there are no active requests in the connection.
                                  Default: 1 hour.
                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                type: string
                              maxConnectionDuration:
                                description: |-
                                  The maximum duration of an HTTP connection.
                                  Default: unlimited.
                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                type: string
                              requestTimeout:
                                description: RequestTimeout is the time until which
                                  entire response is received from the upstream.
                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                type: string
                            type: object
                          tcp:
                            description: Timeout settings for TCP.
                            properties:
                              connectTimeout:
                                description: |-
                                  The timeout for network connection establishment, including TCP and TLS handshakes.
                                  Default: 10 seconds.
                                pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                                type: string
                            type: object
                        type: object
                    type: object
                  failOpen:
                    description: |-
                      FailOpen defines if requests or responses that cannot be processed due to connectivity to the
                      external processor are terminated or passed-through.
                      Default: false
                    type: boolean
                  messageTimeout:
                    description: |-
                      MessageTimeout is the timeout for a response to be returned from the external processor
                      Default: 200ms
                    pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                    type: string
                  metadata:
                    description: |-
                      Metadata defines options related to the sending and receiving of dynamic metadata.
                      These options define which metadata namespaces would be sent to the processor and which dynamic metadata
                      namespaces the processor would be permitted to emit metadata to.
                      Users can specify custom namespaces or well-known envoy metadata namespace (such as envoy.filters.http.ext_authz)
                      documented here: https://www.envoyproxy.io/docs/envoy/latest/configuration/advanced/well_known_dynamic_metadata#well-known-dynamic-metadata
                      Default: no metadata context is sent or received from the external processor
                    properties:
                      accessibleNamespaces:
                        description: AccessibleNamespaces are metadata namespaces
                          that are sent to the external processor as context
                        items:
                          type: string
                        type: array
                      writableNamespaces:
                        description: WritableNamespaces are metadata namespaces that
                          the external processor can write to
                        items:
                          type: string
                        maxItems: 8
                        type: array
                        x-kubernetes-validations:
                        - message: writableNamespaces cannot contain well-known Envoy
                            HTTP filter namespaces
                          rule: self.all(f, !f.startsWith('envoy.filters.http'))
                    type: object
                  processingMode:
                    description: |-
                      ProcessingMode defines how request and response body is processed
                      Default: header and body are not sent to the external processor
                    properties:
                      allowModeOverride:
                        description: |-
                          AllowModeOverride allows the external processor to override the processing mode set via the
                          `mode_override` field in the gRPC response message. This defaults to false.
                        type: boolean
                      request:
                        description: |-
                          Defines processing mode for requests. If present, request headers are sent. Request body is processed according
                          to the specified mode.
                        properties:
                          attributes:
                            description: |-
                              Defines which attributes are sent to the external processor. Envoy Gateway currently
                              supports only the following attribute prefixes: connection, source, destination,
                              request, response, upstream and xds.route.
                              https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes
                            items:
                              pattern: ^(connection\.|source\.|destination\.|request\.|response\.|upstream\.|xds\.route_)[a-z_1-9]*$
                              type: string
                            type: array
                          body:
                            description: Defines body processing mode
                            enum:
                            - Streamed
                            - Buffered
                            - BufferedPartial
                            type: string
                        type: object
                      response:
                        description: |-
                          Defines processing mode for responses. If present, response headers are sent. Response body is processed according
                          to the specified mode.
                        properties:
                          attributes:
                            description: |-
                              Defines which attributes are sent to the external processor. Envoy Gateway currently
                              supports only the following attribute prefixes: connection, source, destination,
                              request, response, upstream and xds.route.
                              https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/advanced/attributes
                            items:
                              pattern: ^(connection\.|source\.|destination\.|request\.|response\.|upstream\.|xds\.route_)[a-z_1-9]*$
                              type: string
                            type: array
                          body:
                            description: Defines body processing mode
                            enum:
                            - Streamed
                            - Buffered
                            - BufferedPartial
                            type: string
                        type: object
                    type: object
                type: object
                x-kubernetes-validations:
                - message: BackendRefs must be used, backendRef is not supported.
                  rule: '!has(self.backendRef)'
                - message: BackendRefs only supports Service and Backend kind.
                  rule: 'has(self.backendRefs) ? self.backendRefs.all(f, f.kind ==
                    ''Service'' || f.kind == ''Backend'') : true'
                - message: BackendRefs only supports Core and gateway.envoyproxy.io
                    group.
                  rule: 'has(self.backendRefs) ? (self.backendRefs.all(f, f.group
                    == "" || f.group == ''gateway.envoyproxy.io'')) : true'
              maxItems: 16
              type: array
            lua:
              description: |-
                Lua is an ordered list of Lua filters
                that should be added to the envoy filter chain
              items:
                description: |-
                  Lua defines a Lua extension
                  Only one of Inline or ValueRef must be set
                properties:
                  inline:
                    description: Inline contains the source code as an inline string.
                    type: string
                  type:
                    default: Inline
                    description: |-
                      Type is the type of method to use to read the Lua value.
                      Valid values are Inline and ValueRef, default is Inline.
                    enum:
                    - Inline
                    - ValueRef
                    type: string
                  valueRef:
                    description: |-
                      ValueRef has the source code specified as a local object reference.
                      Only a reference to ConfigMap is supported.
                      The value of key `lua` in the ConfigMap will be used.
                      If the key is not found, the first value in the ConfigMap will be used.
                    properties:
                      group:
                        description: |-
                          Group is the group of the referent. For example, "gateway.networking.k8s.io".
                          When unspecified or empty string, core API group is inferred.
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: Kind is kind of the referent. For example "HTTPRoute"
                          or "Service".
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                    - group
                    - kind
                    - name
                    type: object
                    x-kubernetes-validations:
                    - message: Only a reference to an object of kind ConfigMap belonging
                        to default core API group is supported.
                      rule: self.kind == 'ConfigMap' && (!has(self.group) || self.group
                        == '')
                required:
                - type
                type: object
                x-kubernetes-validations:
                - message: Exactly one of inline or valueRef must be set with correct
                    type.
                  rule: (self.type == 'Inline' && has(self.inline) && !has(self.valueRef))
                    || (self.type == 'ValueRef' && !has(self.inline) && has(self.valueRef))
              maxItems: 16
              type: array
            targetRef:
              description: |-
                TargetRef is the name of the resource this policy is being attached to.
                This policy and the TargetRef MUST be in the same namespace for this
                Policy to have effect

                Deprecated: use targetRefs/targetSelectors instead
              properties:
                group:
                  description: Group is the group of the target resource.
                  maxLength: 253
                  pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                kind:
                  description: Kind is kind of the target resource.
                  maxLength: 63
                  minLength: 1
                  pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                  type: string
                name:
                  description: Name is the name of the target resource.
                  maxLength: 253
                  minLength: 1
                  type: string
                sectionName:
                  description: |-
                    SectionName is the name of a section within the target resource. When
                    unspecified, this targetRef targets the entire resource. In the following
                    resources, SectionName is interpreted as the following:

                    * Gateway: Listener name
                    * HTTPRoute: HTTPRouteRule name
                    * Service: Port name

                    If a SectionName is specified, but does not exist on the targeted object,
                    the Policy must fail to attach, and the policy implementation should record
                    a `ResolvedRefs` or similar Condition in the Policy's status.
                  maxLength: 253
                  minLength: 1
                  pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
              required:
              - group
              - kind
              - name
              type: object
            targetRefs:
              description: |-
                TargetRefs are the names of the Gateway resources this policy
                is being attached to.
              items:
                description: |-
                  LocalPolicyTargetReferenceWithSectionName identifies an API object to apply a
                  direct policy to. This should be used as part of Policy resources that can
                  target single resources. For more information on how this policy attachment
                  mode works, and a sample Policy resource, refer to the policy attachment
                  documentation for Gateway API.

                  Note: This should only be used for direct policy attachment when references
                  to SectionName are actually needed. In all other cases,
                  LocalPolicyTargetReference should be used.
                properties:
                  group:
                    description: Group is the group of the target resource.
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is kind of the target resource.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: Name is the name of the target resource.
                    maxLength: 253
                    minLength: 1
                    type: string
                  sectionName:
                    description: |-
                      SectionName is the name of a section within the target resource. When
                      unspecified, this targetRef targets the entire resource. In the following
                      resources, SectionName is interpreted as the following:

                      * Gateway: Listener name
                      * HTTPRoute: HTTPRouteRule name
                      * Service: Port name

                      If a SectionName is specified, but does not exist on the targeted object,
                      the Policy must fail to attach, and the policy implementation should record
                      a `ResolvedRefs` or similar Condition in the Policy's status.
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - group
                - kind
                - name
                type: object
              type: array
            targetSelectors:
              description: TargetSelectors allow targeting resources for this policy
                based on labels
              items:
                properties:
                  group:
                    default: gateway.networking.k8s.io
                    description: Group is the group that this selector targets. Defaults
                      to gateway.networking.k8s.io
                    maxLength: 253
                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: Kind is the resource kind that this selector targets.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: MatchLabels are the set of label selectors for identifying
                      the targeted resource
                    type: object
                required:
                - kind
                - matchLabels
                type: object
                x-kubernetes-validations:
                - message: group must be gateway.networking.k8s.io
                  rule: 'has(self.group) ? self.group == ''gateway.networking.k8s.io''
                    : true '
              type: array
            wasm:
              description: |-
                Wasm is a list of Wasm extensions to be loaded by the Gateway.
                Order matters, as the extensions will be loaded in the order they are
                defined in this list.
              items:
                description: |-
                  Wasm defines a Wasm extension.

                  Note: at the moment, Envoy Gateway does not support configuring Wasm runtime.
                  v8 is used as the VM runtime for the Wasm extensions.
                properties:
                  code:
                    description: Code is the Wasm code for the extension.
                    properties:
                      http:
                        description: |-
                          HTTP is the HTTP URL containing the Wasm code.

                          Note that the HTTP server must be accessible from the Envoy proxy.
                        properties:
                          sha256:
                            description: |-
                              SHA256 checksum that will be used to verify the Wasm code.

                              If not specified, Envoy Gateway will not verify the downloaded Wasm code.
                              kubebuilder:validation:Pattern=`^[a-f0-9]{64}$`
                            type: string
                          url:
                            description: URL is the URL containing the Wasm code.
                            pattern: ^((https?:)(\/\/\/?)([\w]*(?::[\w]*)?@)?([\d\w\.-]+)(?::(\d+))?)?([\/\\\w\.()-]*)?(?:([?][^#]*)?(#.*)?)*
                            type: string
                        required:
                        - url
                        type: object
                      image:
                        description: |-
                          Image is the OCI image containing the Wasm code.

                          Note that the image must be accessible from the Envoy Gateway.
                        properties:
                          pullSecretRef:
                            description: |-
                              PullSecretRef is a reference to the secret containing the credentials to pull the image.
                              Only support Kubernetes Secret resource from the same namespace.
                            properties:
                              group:
                                default: ""
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                default: Secret
                                description: Kind is kind of the referent. For example
                                  "Secret".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                              namespace:
                                description: |-
                                  Namespace is the namespace of the referenced object. When unspecified, the local
                                  namespace is inferred.

                                  Note that when a namespace different than the local namespace is specified,
                                  a ReferenceGrant object is required in the referent namespace to allow that
                                  namespace's owner to accept the reference. See the ReferenceGrant
                                  documentation for details.

                                  Support: Core
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                type: string
                            required:
                            - name
                            type: object
                            x-kubernetes-validations:
                            - message: only support Secret kind.
                              rule: self.kind == 'Secret'
                          sha256:
                            description: |-
                              SHA256 checksum that will be used to verify the OCI image.

                              It must match the digest of the OCI image.

                              If not specified, Envoy Gateway will not verify the downloaded OCI image.
                              kubebuilder:validation:Pattern=`^[a-f0-9]{64}$`
                            type: string
                          url:
                            description: |-
                              URL is the URL of the OCI image.
                              URL can be in the format of `registry/image:tag` or `registry/image@sha256:digest`.
                            type: string
                        required:
                        - url
                        type: object
                      pullPolicy:
                        description: |-
                          PullPolicy is the policy to use when pulling the Wasm module by either the HTTP or Image source.
                          This field is only applicable when the SHA256 field is not set.

                          If not specified, the default policy is IfNotPresent except for OCI images whose tag is latest.

                          Note: EG does not update the Wasm module every time an Envoy proxy requests
                          the Wasm module even if the pull policy is set to Always.
                          It only updates the Wasm module when the EnvoyExtension resource version changes.
                        enum:
                        - IfNotPresent
                        - Always
                        type: string
                      type:
                        allOf:
                        - enum:
                          - HTTP
                          - Image
                        - enum:
                          - HTTP
                          - Image
                          - ConfigMap
                        description: |-
                          Type is the type of the source of the Wasm code.
                          Valid WasmCodeSourceType values are "HTTP" or "Image".
                        type: string
                    required:
                    - type
                    type: object
                    x-kubernetes-validations:
                    - message: If type is HTTP, http field needs to be set.
                      rule: 'self.type == ''HTTP'' ? has(self.http) : !has(self.http)'
                    - message: If type is Image, image field needs to be set.
                      rule: 'self.type == ''Image'' ? has(self.image) : !has(self.image)'
                  config:
                    description: |-
                      Config is the configuration for the Wasm extension.
                      This configuration will be passed as a JSON string to the Wasm extension.
                    x-kubernetes-preserve-unknown-fields: true
                  env:
                    description: Env configures the environment for the Wasm extension
                    properties:
                      hostKeys:
                        description: |-
                          HostKeys is a list of keys for environment variables from the host envoy process
                          that should be passed into the Wasm VM. This is useful for passing secrets to to Wasm extensions.
                        items:
                          type: string
                        type: array
                    type: object
                  failOpen:
                    default: false
                    description: |-
                      FailOpen is a switch used to control the behavior when a fatal error occurs
                      during the initialization or the execution of the Wasm extension.
                      If FailOpen is set to true, the system bypasses the Wasm extension and
                      allows the traffic to pass through. Otherwise, if it is set to false or
                      not set (defaulting to false), the system blocks the traffic and returns
                      an HTTP 5xx error.
                    type: boolean
                  name:
                    description: |-
                      Name is a unique name for this Wasm extension. It is used to identify the
                      Wasm extension if multiple extensions are handled by the same vm_id and root_id.
                      It's also used for logging/debugging.
                      If not specified, EG will generate a unique name for the Wasm extension.
                    type: string
                  rootID:
                    description: |-
                      RootID is a unique ID for a set of extensions in a VM which will share a
                      RootContext and Contexts if applicable (e.g., an Wasm HttpFilter and an Wasm AccessLog).
                      If left blank, all extensions with a blank root_id with the same vm_id will share Context(s).

                      Note: RootID must match the root_id parameter used to register the Context in the Wasm code.
                    type: string
                required:
                - code
                type: object
              maxItems: 16
              type: array
          type: object
          x-kubernetes-validations:
          - message: either targetRef or targetRefs must be used
            rule: '(has(self.targetRef) && !has(self.targetRefs)) || (!has(self.targetRef)
              && has(self.targetRefs)) || (has(self.targetSelectors) && self.targetSelectors.size()
              > 0) '
          - message: this policy can only have a targetRef.group of gateway.networking.k8s.io
            rule: 'has(self.targetRef) ? self.targetRef.group == ''gateway.networking.k8s.io''
              : true'
          - message: this policy can only have a targetRef.kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute
            rule: 'has(self.targetRef) ? self.targetRef.kind in [''Gateway'', ''HTTPRoute'',
              ''GRPCRoute'', ''UDPRoute'', ''TCPRoute'', ''TLSRoute''] : true'
          - message: this policy does not yet support the sectionName field
            rule: 'has(self.targetRef) ? !has(self.targetRef.sectionName) : true'
          - message: this policy can only have a targetRefs[*].group of gateway.networking.k8s.io
            rule: 'has(self.targetRefs) ? self.targetRefs.all(ref, ref.group == ''gateway.networking.k8s.io'')
              : true '
          - message: this policy can only have a targetRefs[*].kind of Gateway/HTTPRoute/GRPCRoute/TCPRoute/UDPRoute/TLSRoute
            rule: 'has(self.targetRefs) ? self.targetRefs.all(ref, ref.kind in [''Gateway'',
              ''HTTPRoute'', ''GRPCRoute'', ''UDPRoute'', ''TCPRoute'', ''TLSRoute''])
              : true '
          - message: this policy does not yet support the sectionName field
            rule: 'has(self.targetRefs) ? self.targetRefs.all(ref, !has(ref.sectionName))
              : true'
      required:
      - spec
      type: object
