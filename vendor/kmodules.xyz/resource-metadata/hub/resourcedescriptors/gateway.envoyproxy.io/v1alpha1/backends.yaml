apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: gateway.envoyproxy.io
    k8s.io/kind: Backend
    k8s.io/resource: backends
    k8s.io/version: v1alpha1
  name: gateway.envoyproxy.io-v1alpha1-backends
spec:
  resource:
    group: gateway.envoyproxy.io
    kind: Backend
    name: backends
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: |-
        Backend allows the user to configure the endpoints of a backend and
        the behavior of the connection from Envoy Proxy to the backend.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: Spec defines the desired state of Backend.
          properties:
            appProtocols:
              description: AppProtocols defines the application protocols to be supported
                when connecting to the backend.
              items:
                description: AppProtocolType defines various backend applications
                  protocols supported by Envoy Gateway
                enum:
                - gateway.envoyproxy.io/h2c
                - gateway.envoyproxy.io/ws
                - gateway.envoyproxy.io/wss
                type: string
              type: array
            endpoints:
              description: Endpoints defines the endpoints to be used when connecting
                to the backend.
              items:
                description: |-
                  BackendEndpoint describes a backend endpoint, which can be either a fully-qualified domain name, IP address or unix domain socket
                  corresponding to Envoy's Address: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/address.proto#config-core-v3-address
                properties:
                  fqdn:
                    description: FQDN defines a FQDN endpoint
                    properties:
                      hostname:
                        description: Hostname defines the FQDN hostname of the backend
                          endpoint.
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9]))*$
                        type: string
                      port:
                        description: Port defines the port of the backend endpoint.
                        format: int32
                        maximum: 65535
                        minimum: 0
                        type: integer
                    required:
                    - hostname
                    - port
                    type: object
                  ip:
                    description: IP defines an IP endpoint. Currently, only IPv4 Addresses
                      are supported.
                    properties:
                      address:
                        description: Address defines the IP address of the backend
                          endpoint.
                        maxLength: 15
                        minLength: 7
                        pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
                        type: string
                      port:
                        description: Port defines the port of the backend endpoint.
                        format: int32
                        maximum: 65535
                        minimum: 0
                        type: integer
                    required:
                    - address
                    - port
                    type: object
                  unix:
                    description: Unix defines the unix domain socket endpoint
                    properties:
                      path:
                        description: Path defines the unix domain socket path of the
                          backend endpoint.
                        type: string
                    required:
                    - path
                    type: object
                type: object
                x-kubernetes-validations:
                - message: one of fqdn, ip or unix must be specified
                  rule: (has(self.fqdn) || has(self.ip) || has(self.unix))
                - message: only one of fqdn, ip or unix can be specified
                  rule: ((has(self.fqdn) && !(has(self.ip) || has(self.unix))) ||
                    (has(self.ip) && !(has(self.fqdn) || has(self.unix))) || (has(self.unix)
                    && !(has(self.ip) || has(self.fqdn))))
              maxItems: 4
              minItems: 1
              type: array
              x-kubernetes-validations:
              - message: fqdn addresses cannot be mixed with other address types
                rule: self.all(f, has(f.fqdn)) || !self.exists(f, has(f.fqdn))
          type: object
      required:
      - spec
      type: object
