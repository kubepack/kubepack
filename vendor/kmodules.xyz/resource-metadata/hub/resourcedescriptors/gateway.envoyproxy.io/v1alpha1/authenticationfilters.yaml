apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: gateway.envoyproxy.io
    k8s.io/kind: AuthenticationFilter
    k8s.io/resource: authenticationfilters
    k8s.io/version: v1alpha1
  name: gateway.envoyproxy.io-v1alpha1-authenticationfilters
spec:
  resource:
    group: gateway.envoyproxy.io
    kind: AuthenticationFilter
    name: authenticationfilters
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: Spec defines the desired state of the AuthenticationFilter
            type.
          properties:
            jwtProviders:
              description: JWT defines the JSON Web Token (JWT) authentication provider
                type. When multiple jwtProviders are specified, the JWT is considered
                valid if any of the providers successfully validate the JWT. For additional
                details, see https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/jwt_authn_filter.html.
              items:
                description: 'JwtAuthenticationFilterProvider defines the JSON Web
                  Token (JWT) authentication provider type and how JWTs should be
                  verified:'
                properties:
                  audiences:
                    description: Audiences is a list of JWT audiences allowed access.
                      For additional details, see https://tools.ietf.org/html/rfc7519#section-4.1.3.
                      If not provided, JWT audiences are not checked.
                    items:
                      type: string
                    maxItems: 8
                    type: array
                  issuer:
                    description: Issuer is the principal that issued the JWT and takes
                      the form of a URL or email address. For additional details,
                      see https://tools.ietf.org/html/rfc7519#section-4.1.1 for URL
                      format and https://rfc-editor.org/rfc/rfc5322.html for email
                      format. If not provided, the JWT issuer is not checked.
                    maxLength: 253
                    type: string
                  name:
                    description: Name defines a unique name for the JWT provider.
                      A name can have a variety of forms, including RFC1123 subdomains,
                      RFC 1123 labels, or RFC 1035 labels.
                    maxLength: 253
                    minLength: 1
                    type: string
                  remoteJWKS:
                    description: RemoteJWKS defines how to fetch and cache JSON Web
                      Key Sets (JWKS) from a remote HTTP/HTTPS endpoint.
                    properties:
                      uri:
                        description: URI is the HTTPS URI to fetch the JWKS. Envoy's
                          system trust bundle is used to validate the server certificate.
                        maxLength: 253
                        minLength: 1
                        type: string
                    required:
                    - uri
                    type: object
                required:
                - name
                - remoteJWKS
                type: object
              maxItems: 4
              type: array
            type:
              description: Type defines the type of authentication provider to use.
                Supported provider types are "JWT".
              enum:
              - JWT
              type: string
          required:
          - type
          type: object
      required:
      - spec
      type: object
