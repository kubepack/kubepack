apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: kube-bind.appscode.com
    k8s.io/kind: APIServiceExport
    k8s.io/resource: apiserviceexports
    k8s.io/version: v1alpha1
  name: kube-bind.appscode.com-v1alpha1-apiserviceexports
spec:
  resource:
    group: kube-bind.appscode.com
    kind: APIServiceExport
    name: apiserviceexports
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: 'APIServiceExport specifies the resource to be exported. It is
        mostly a CRD: - the spec is a CRD spec, but without webhooks - the status
        reflects that on the consumer cluster'
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: spec specifies the resource.
          properties:
            clusterScopedIsolation:
              description: ClusterScopedIsolation specifies how cluster scoped service
                objects are isolated between multiple consumers on the provider side.
                It can be "Prefixed", "Namespaced", or "None".
              enum:
              - Prefixed
              - Namespaced
              - None
              type: string
            group:
              description: "group is the API group of the defined custom resource.
                Empty string means the core API group. \tThe resources are served
                under `/apis/<group>/...` or `/api` for the core group."
              type: string
            informerScope:
              description: "informerScope is the scope of the APIServiceExport. It
                can be either Cluster or Namespace. \n Cluster:    The konnector has
                permission to watch all namespaces at once and cluster-scoped resources.
                This is more efficient than watching each namespace individually.
                Namespaced: The konnector has permission to watch only single namespaces.
                This is more resource intensive. And it means cluster-scoped resources
                cannot be exported."
              enum:
              - Cluster
              - Namespaced
              type: string
              x-kubernetes-validations:
              - message: informerScope is immutable
                rule: self == oldSelf
            names:
              description: names specify the resource and kind names for the custom
                resource.
              properties:
                categories:
                  description: categories is a list of grouped resources this custom
                    resource belongs to (e.g. 'all'). This is published in API discovery
                    documents, and used by clients to support invocations like `kubectl
                    get all`.
                  items:
                    type: string
                  type: array
                kind:
                  description: kind is the serialized kind of the resource. It is
                    normally CamelCase and singular. Custom resource instances will
                    use this value as the `kind` attribute in API calls.
                  type: string
                listKind:
                  description: listKind is the serialized kind of the list for this
                    resource. Defaults to "`kind`List".
                  type: string
                plural:
                  description: plural is the plural name of the resource to serve.
                    The custom resources are served under `/apis/<group>/<version>/.../<plural>`.
                    Must match the name of the CustomResourceDefinition (in the form
                    `<names.plural>.<group>`). Must be all lowercase.
                  type: string
                shortNames:
                  description: shortNames are short names for the resource, exposed
                    in API discovery documents, and used by clients to support invocations
                    like `kubectl get <shortname>`. It must be all lowercase.
                  items:
                    type: string
                  type: array
                singular:
                  description: singular is the singular name of the resource. It must
                    be all lowercase. Defaults to lowercased `kind`.
                  type: string
              required:
              - kind
              - plural
              type: object
            scope:
              description: scope indicates whether the defined custom resource is
                cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`.
              enum:
              - Cluster
              - Namespaced
              type: string
            versions:
              description: "versions is the API version of the defined custom resource.
                \n Note: the OpenAPI v3 schemas must be equal for all versions until
                CEL version migration is supported."
              items:
                description: APIServiceExportVersion describes one API version of
                  a resource.
                properties:
                  additionalPrinterColumns:
                    description: additionalPrinterColumns specifies additional columns
                      returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables
                      for details. If no columns are specified, a single column displaying
                      the age of the custom resource is used.
                    items:
                      description: CustomResourceColumnDefinition specifies a column
                        for server side printing.
                      properties:
                        description:
                          description: description is a human readable description
                            of this column.
                          type: string
                        format:
                          description: format is an optional OpenAPI type definition
                            for this column. The 'name' format is applied to the primary
                            identifier column to assist in clients identifying column
                            is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                            for details.
                          type: string
                        jsonPath:
                          description: jsonPath is a simple JSON path (i.e. with array
                            notation) which is evaluated against each custom resource
                            to produce the value for this column.
                          type: string
                        name:
                          description: name is a human readable name for the column.
                          type: string
                        priority:
                          description: priority is an integer defining the relative
                            importance of this column compared to others. Lower numbers
                            are considered higher priority. Columns that may be omitted
                            in limited space scenarios should be given a priority
                            greater than 0.
                          format: int32
                          type: integer
                        type:
                          description: type is an OpenAPI type definition for this
                            column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types
                            for details.
                          type: string
                      required:
                      - jsonPath
                      - name
                      - type
                      type: object
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  deprecated:
                    description: deprecated indicates this version of the custom resource
                      API is deprecated. When set to true, API requests to this version
                      receive a warning header in the server response. Defaults to
                      false.
                    type: boolean
                  deprecationWarning:
                    description: deprecationWarning overrides the default warning
                      returned to API clients. May only be set when `deprecated` is
                      true. The default warning indicates this version is deprecated
                      and recommends use of the newest served version of equal or
                      greater stability, if one exists.
                    type: string
                  name:
                    description: name is the version name, e.g. “v1”, “v2beta1”, etc.
                      The custom resources are served under this version at `/apis/<group>/<version>/...`
                      if `served` is true.
                    minLength: 1
                    pattern: ^v[1-9][0-9]*([a-z]+[1-9][0-9]*)?$
                    type: string
                  schema:
                    description: schema describes the structural schema used for validation,
                      pruning, and defaulting of this version of the custom resource.
                    properties:
                      openAPIV3Schema:
                        description: openAPIV3Schema is the OpenAPI v3 schema to use
                          for validation and pruning.
                        type: object
                        x-kubernetes-map-type: atomic
                        x-kubernetes-preserve-unknown-fields: true
                    required:
                    - openAPIV3Schema
                    type: object
                  served:
                    default: true
                    description: served is a flag enabling/disabling this version
                      from being served via REST APIs
                    type: boolean
                  storage:
                    description: storage indicates this version should be used when
                      persisting custom resources to storage. There must be exactly
                      one version with storage=true.
                    type: boolean
                  subresources:
                    description: subresources specify what subresources this version
                      of the defined custom resource have.
                    properties:
                      scale:
                        description: scale indicates the custom resource should serve
                          a `/scale` subresource that returns an `autoscaling/v1`
                          Scale object.
                        properties:
                          labelSelectorPath:
                            description: 'labelSelectorPath defines the JSON path
                              inside of a custom resource that corresponds to Scale
                              `status.selector`. Only JSON paths without the array
                              notation are allowed. Must be a JSON Path under `.status`
                              or `.spec`. Must be set to work with HorizontalPodAutoscaler.
                              The field pointed by this JSON path must be a string
                              field (not a complex selector struct) which contains
                              a serialized label selector in string form. More info:
                              https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource
                              If there is no value under the given path in the custom
                              resource, the `status.selector` value in the `/scale`
                              subresource will default to the empty string.'
                            type: string
                          specReplicasPath:
                            description: specReplicasPath defines the JSON path inside
                              of a custom resource that corresponds to Scale `spec.replicas`.
                              Only JSON paths without the array notation are allowed.
                              Must be a JSON Path under `.spec`. If there is no value
                              under the given path in the custom resource, the `/scale`
                              subresource will return an error on GET.
                            type: string
                          statusReplicasPath:
                            description: statusReplicasPath defines the JSON path
                              inside of a custom resource that corresponds to Scale
                              `status.replicas`. Only JSON paths without the array
                              notation are allowed. Must be a JSON Path under `.status`.
                              If there is no value under the given path in the custom
                              resource, the `status.replicas` value in the `/scale`
                              subresource will default to 0.
                            type: string
                        required:
                        - specReplicasPath
                        - statusReplicasPath
                        type: object
                      status:
                        description: 'status indicates the custom resource should
                          serve a `/status` subresource. When enabled: 1. requests
                          to the custom resource primary endpoint ignore changes to
                          the `status` stanza of the object. 2. requests to the custom
                          resource `/status` subresource ignore changes to anything
                          other than the `status` stanza of the object.'
                        type: object
                    type: object
                required:
                - name
                - schema
                - served
                - storage
                type: object
              minItems: 1
              type: array
              x-kubernetes-list-map-keys:
              - name
              x-kubernetes-list-type: map
          required:
          - informerScope
          type: object
          x-kubernetes-validations:
          - message: informerScope must be Cluster for cluster-scoped resources
            rule: self.scope == "Namespaced" || self.informerScope == "Cluster"
          - message: clusterScopedIsolation must be defined for cluster-scoped resources
            rule: self.scope == "Namespaced" || has(self.clusterScopedIsolation)
          - message: clusterScopedIsolation is not relevant for namespaced resources
            rule: self.scope == "Cluster" || !has(self.clusterScopedIsolation)
      required:
      - spec
      type: object
      x-kubernetes-validations:
      - message: informerScope is immutable
        rule: self.metadata.name == self.spec.names.plural+"."+self.spec.group
