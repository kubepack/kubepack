apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: operator.open-cluster-management.io
    k8s.io/kind: ClusterManager
    k8s.io/resource: clustermanagers
    k8s.io/version: v1
  name: operator.open-cluster-management.io-v1-clustermanagers
spec:
  resource:
    group: operator.open-cluster-management.io
    kind: ClusterManager
    name: clustermanagers
    scope: Cluster
    version: v1
  validation:
    openAPIV3Schema:
      description: ClusterManager configures the controllers on the hub that govern
        registration and work distribution for attached Klusterlets. In Default mode,
        ClusterManager will only be deployed in open-cluster-management-hub namespace.
        In Hosted mode, ClusterManager will be deployed in the namespace with the
        same name as cluster manager.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          default:
            deployOption:
              mode: Default
          description: Spec represents a desired deployment configuration of controllers
            that govern registration and work distribution for attached Klusterlets.
          properties:
            addOnManagerConfiguration:
              description: AddOnManagerConfiguration contains the configuration of
                addon manager
              properties:
                featureGates:
                  description: 'FeatureGates represents the list of feature gates
                    for addon manager If it is set empty, default feature gates will
                    be used. If it is set, featuregate/Foo is an example of one item
                    in FeatureGates: 1. If featuregate/Foo does not exist, registration-operator
                    will discard it 2. If featuregate/Foo exists and is false by default.
                    It is now possible to set featuregate/Foo=[false|true] 3. If featuregate/Foo
                    exists and is true by default. If a cluster-admin upgrading from
                    1 to 2 wants to continue having featuregate/Foo=false, he can
                    set featuregate/Foo=false before upgrading. Let''s say the cluster-admin
                    wants featuregate/Foo=false.'
                  items:
                    properties:
                      feature:
                        description: Feature is the key of feature gate. e.g. featuregate/Foo.
                        type: string
                      mode:
                        default: Disable
                        description: Mode is either Enable, Disable, "" where "" is
                          Disable by default. In Enable mode, a valid feature gate
                          `featuregate/Foo` will be set to "--featuregate/Foo=true".
                          In Disable mode, a valid feature gate `featuregate/Foo`
                          will be set to "--featuregate/Foo=false".
                        enum:
                        - Enable
                        - Disable
                        type: string
                    required:
                    - feature
                    type: object
                  type: array
              type: object
            addOnManagerImagePullSpec:
              default: quay.io/open-cluster-management/addon-manager
              description: AddOnManagerImagePullSpec represents the desired image
                configuration of addon manager controller/webhook installed on hub.
              type: string
            deployOption:
              default:
                mode: Default
              description: DeployOption contains the options of deploying a cluster-manager
                Default mode is used if DeployOption is not set.
              properties:
                hosted:
                  description: Hosted includes configurations we need for clustermanager
                    in the Hosted mode.
                  properties:
                    registrationWebhookConfiguration:
                      description: RegistrationWebhookConfiguration represents the
                        customized webhook-server configuration of registration.
                      properties:
                        address:
                          description: Address represents the address of a webhook-server.
                            It could be in IP format or fqdn format. The Address must
                            be reachable by apiserver of the hub cluster.
                          pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                          type: string
                        port:
                          default: 443
                          description: Port represents the port of a webhook-server.
                            The default value of Port is 443.
                          format: int32
                          maximum: 65535
                          type: integer
                      required:
                      - address
                      type: object
                    workWebhookConfiguration:
                      description: WorkWebhookConfiguration represents the customized
                        webhook-server configuration of work.
                      properties:
                        address:
                          description: Address represents the address of a webhook-server.
                            It could be in IP format or fqdn format. The Address must
                            be reachable by apiserver of the hub cluster.
                          pattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\-]*[A-Za-z0-9])$
                          type: string
                        port:
                          default: 443
                          description: Port represents the port of a webhook-server.
                            The default value of Port is 443.
                          format: int32
                          maximum: 65535
                          type: integer
                      required:
                      - address
                      type: object
                  type: object
                mode:
                  default: Default
                  description: 'Mode can be Default or Hosted. In Default mode, the
                    Hub is installed as a whole and all parts of Hub are deployed
                    in the same cluster. In Hosted mode, only crd and configurations
                    are installed on one cluster(defined as hub-cluster). Controllers
                    run in another cluster (defined as management-cluster) and connect
                    to the hub with the kubeconfig in secret of "external-hub-kubeconfig"(a
                    kubeconfig of hub-cluster with cluster-admin permission). Note:
                    Do not modify the Mode field once it''s applied.'
                  enum:
                  - Default
                  - Hosted
                  type: string
              required:
              - mode
              type: object
            nodePlacement:
              description: NodePlacement enables explicit control over the scheduling
                of the deployed pods.
              properties:
                nodeSelector:
                  additionalProperties:
                    type: string
                  description: NodeSelector defines which Nodes the Pods are scheduled
                    on. The default is an empty list.
                  type: object
                tolerations:
                  description: Tolerations are attached by pods to tolerate any taint
                    that matches the triple <key,value,effect> using the matching
                    operator <operator>. The default is an empty list.
                  items:
                    description: The pod this Toleration is attached to tolerates
                      any taint that matches the triple <key,value,effect> using the
                      matching operator <operator>.
                    properties:
                      effect:
                        description: Effect indicates the taint effect to match. Empty
                          means match all taint effects. When specified, allowed values
                          are NoSchedule, PreferNoSchedule and NoExecute.
                        type: string
                      key:
                        description: Key is the taint key that the toleration applies
                          to. Empty means match all taint keys. If the key is empty,
                          operator must be Exists; this combination means to match
                          all values and all keys.
                        type: string
                      operator:
                        description: Operator represents a key's relationship to the
                          value. Valid operators are Exists and Equal. Defaults to
                          Equal. Exists is equivalent to wildcard for value, so that
                          a pod can tolerate all taints of a particular category.
                        type: string
                      tolerationSeconds:
                        description: TolerationSeconds represents the period of time
                          the toleration (which must be of effect NoExecute, otherwise
                          this field is ignored) tolerates the taint. By default,
                          it is not set, which means tolerate the taint forever (do
                          not evict). Zero and negative values will be treated as
                          0 (evict immediately) by the system.
                        format: int64
                        type: integer
                      value:
                        description: Value is the taint value the toleration matches
                          to. If the operator is Exists, the value should be empty,
                          otherwise just a regular string.
                        type: string
                    type: object
                  type: array
              type: object
            placementImagePullSpec:
              default: quay.io/open-cluster-management/placement
              description: PlacementImagePullSpec represents the desired image configuration
                of placement controller/webhook installed on hub.
              type: string
            registrationConfiguration:
              description: RegistrationConfiguration contains the configuration of
                registration
              properties:
                autoApproveUsers:
                  description: AutoApproveUser represents a list of users that can
                    auto approve CSR and accept client. If the credential of the bootstrap-hub-kubeconfig
                    matches to the users, the cluster created by the bootstrap-hub-kubeconfig
                    will be auto-registered into the hub cluster. This takes effect
                    only when ManagedClusterAutoApproval feature gate is enabled.
                  items:
                    type: string
                  type: array
                featureGates:
                  description: 'FeatureGates represents the list of feature gates
                    for registration If it is set empty, default feature gates will
                    be used. If it is set, featuregate/Foo is an example of one item
                    in FeatureGates: 1. If featuregate/Foo does not exist, registration-operator
                    will discard it 2. If featuregate/Foo exists and is false by default.
                    It is now possible to set featuregate/Foo=[false|true] 3. If featuregate/Foo
                    exists and is true by default. If a cluster-admin upgrading from
                    1 to 2 wants to continue having featuregate/Foo=false, he can
                    set featuregate/Foo=false before upgrading. Let''s say the cluster-admin
                    wants featuregate/Foo=false.'
                  items:
                    properties:
                      feature:
                        description: Feature is the key of feature gate. e.g. featuregate/Foo.
                        type: string
                      mode:
                        default: Disable
                        description: Mode is either Enable, Disable, "" where "" is
                          Disable by default. In Enable mode, a valid feature gate
                          `featuregate/Foo` will be set to "--featuregate/Foo=true".
                          In Disable mode, a valid feature gate `featuregate/Foo`
                          will be set to "--featuregate/Foo=false".
                        enum:
                        - Enable
                        - Disable
                        type: string
                    required:
                    - feature
                    type: object
                  type: array
              type: object
            registrationImagePullSpec:
              default: quay.io/open-cluster-management/registration
              description: RegistrationImagePullSpec represents the desired image
                of registration controller/webhook installed on hub.
              type: string
            workConfiguration:
              description: WorkConfiguration contains the configuration of work
              properties:
                featureGates:
                  description: 'FeatureGates represents the list of feature gates
                    for work If it is set empty, default feature gates will be used.
                    If it is set, featuregate/Foo is an example of one item in FeatureGates:
                    1. If featuregate/Foo does not exist, registration-operator will
                    discard it 2. If featuregate/Foo exists and is false by default.
                    It is now possible to set featuregate/Foo=[false|true] 3. If featuregate/Foo
                    exists and is true by default. If a cluster-admin upgrading from
                    1 to 2 wants to continue having featuregate/Foo=false, he can
                    set featuregate/Foo=false before upgrading. Let''s say the cluster-admin
                    wants featuregate/Foo=false.'
                  items:
                    properties:
                      feature:
                        description: Feature is the key of feature gate. e.g. featuregate/Foo.
                        type: string
                      mode:
                        default: Disable
                        description: Mode is either Enable, Disable, "" where "" is
                          Disable by default. In Enable mode, a valid feature gate
                          `featuregate/Foo` will be set to "--featuregate/Foo=true".
                          In Disable mode, a valid feature gate `featuregate/Foo`
                          will be set to "--featuregate/Foo=false".
                        enum:
                        - Enable
                        - Disable
                        type: string
                    required:
                    - feature
                    type: object
                  type: array
              type: object
            workImagePullSpec:
              default: quay.io/open-cluster-management/work
              description: WorkImagePullSpec represents the desired image configuration
                of work controller/webhook installed on hub.
              type: string
          type: object
      type: object
