apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: catalog.kubevault.com
    k8s.io/kind: VaultServerVersion
    k8s.io/resource: vaultserverversions
    k8s.io/version: v1alpha1
  name: catalog.kubevault.com-v1alpha1-vaultserverversions
spec:
  resource:
    group: catalog.kubevault.com
    kind: VaultServerVersion
    name: vaultserverversions
    scope: Cluster
    version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: VaultServerVersionSpec is the spec for postgres version
          properties:
            deprecated:
              description: Deprecated versions usable but regarded as obsolete and
                best avoided, typically due to having been superseded.
              type: boolean
            exporter:
              description: Exporter Image
              properties:
                image:
                  description: Image is the Docker image name
                  type: string
                imagePullPolicy:
                  description: ImagePullPolicy one of Always, Never, IfNotPresent.
                    It defaults to Always if :latest is used, or IfNotPresent otherwise.
                  type: string
              required:
              - image
              type: object
            stash:
              description: Stash defines backup and restore task definitions.
              properties:
                addon:
                  description: StashTaskSpec is the spec for app
                  properties:
                    backupTask:
                      description: Backup task definition
                      properties:
                        name:
                          type: string
                        params:
                          description: Params specifies a list of parameter to pass
                            to the Task. Stash will use this parameters to resolve
                            the task.
                          items:
                            description: Param declares a value to use for the Param
                              called Name.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                    restoreTask:
                      description: Restore task definition
                      properties:
                        name:
                          type: string
                        params:
                          description: Params specifies a list of parameter to pass
                            to the Task. Stash will use this parameters to resolve
                            the task.
                          items:
                            description: Param declares a value to use for the Param
                              called Name.
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                            - name
                            - value
                            type: object
                          type: array
                      required:
                      - name
                      type: object
                  required:
                  - backupTask
                  - restoreTask
                  type: object
              type: object
            unsealer:
              description: Unsealer Image
              properties:
                image:
                  description: Image is the Docker image name
                  type: string
                imagePullPolicy:
                  description: ImagePullPolicy one of Always, Never, IfNotPresent.
                    It defaults to Always if :latest is used, or IfNotPresent otherwise.
                  type: string
              required:
              - image
              type: object
            vault:
              description: Vault Image
              properties:
                image:
                  description: Image is the Docker image name
                  type: string
                imagePullPolicy:
                  description: ImagePullPolicy one of Always, Never, IfNotPresent.
                    It defaults to Always if :latest is used, or IfNotPresent otherwise.
                  type: string
              required:
              - image
              type: object
            version:
              description: Version
              type: string
          required:
          - unsealer
          - vault
          - version
          type: object
      type: object
