apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: apps.k8s.appscode.com
    k8s.io/kind: PlacementPolicy
    k8s.io/resource: placementpolicies
    k8s.io/version: v1
  name: apps.k8s.appscode.com-v1-placementpolicies
spec:
  resource:
    group: apps.k8s.appscode.com
    kind: PlacementPolicy
    name: placementpolicies
    scope: Cluster
    version: v1
  validation:
    openAPIV3Schema:
      description: "PlacementPolicy represents a set of pods with consistent identities.
        Identities are defined as: - Network: A single stable DNS and hostname. -
        Storage: As many VolumeClaims as requested. \n The PlacementPolicy guarantees
        that a given network identity will always map to the same storage identity."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: Spec defines the desired identities of pods in this set.
          properties:
            affinity:
              description: If specified, the pod's scheduling constraints
              properties:
                nodeAffinity:
                  description: Describes node affinity scheduling rules for the pod.
                  items:
                    properties:
                      domains:
                        items:
                          properties:
                            replicas:
                              type: string
                            values:
                              items:
                                type: string
                              type: array
                          required:
                          - replicas
                          - values
                          type: object
                        type: array
                      topologyKey:
                        type: string
                      weight:
                        default: 50
                        description: Weight associated with matching the corresponding
                          nodeSelectorTerm, in the range 1-100.
                        format: int32
                        type: integer
                      whenUnsatisfiable:
                        default: DoNotSchedule
                        type: string
                    required:
                    - domains
                    - topologyKey
                    - weight
                    - whenUnsatisfiable
                    type: object
                  type: array
              type: object
            nodeSpreadConstraint:
              properties:
                maxSkew:
                  default: 1
                  format: int32
                  type: integer
                whenUnsatisfiable:
                  default: DoNotSchedule
                  type: string
              required:
              - maxSkew
              - whenUnsatisfiable
              type: object
            zoneSpreadConstraint:
              properties:
                maxSkew:
                  default: 1
                  format: int32
                  type: integer
                whenUnsatisfiable:
                  default: DoNotSchedule
                  type: string
              required:
              - maxSkew
              - whenUnsatisfiable
              type: object
          type: object
      type: object
