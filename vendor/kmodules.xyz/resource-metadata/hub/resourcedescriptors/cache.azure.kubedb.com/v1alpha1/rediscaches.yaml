apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: cache.azure.kubedb.com
    k8s.io/kind: RedisCache
    k8s.io/resource: rediscaches
    k8s.io/version: v1alpha1
  name: cache.azure.kubedb.com-v1alpha1-rediscaches
spec:
  resource:
    group: cache.azure.kubedb.com
    kind: RedisCache
    name: rediscaches
    scope: Cluster
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: RedisCache is the Schema for the RedisCaches API. Manages a Redis
        Cache
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: RedisCacheSpec defines the desired state of RedisCache
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying
                external when this managed resource is deleted - either "Delete" or
                "Orphan" the external resource. This field is planned to be deprecated
                in favor of the ManagementPolicies field in a future release. Currently,
                both could be set independently and non-default values would be honored
                if the feature flag is enabled. See the design doc for more information:
                https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                capacity:
                  description: The size of the Redis cache to deploy. Valid values
                    for a SKU family of C (Basic/Standard) are 0, 1, 2, 3, 4, 5, 6,
                    and for P (Premium) family are 1, 2, 3, 4, 5.
                  type: number
                enableNonSslPort:
                  description: Enable the non-SSL port (6379) - disabled by default.
                  type: boolean
                family:
                  description: The SKU family/pricing group to use. Valid values are
                    C (for Basic/Standard SKU family) and P (for Premium)
                  type: string
                identity:
                  description: An identity block as defined below.
                  items:
                    properties:
                      identityIds:
                        description: A list of User Assigned Managed Identity IDs
                          to be assigned to this Redis Cluster.
                        items:
                          type: string
                        type: array
                      type:
                        description: Specifies the type of Managed Service Identity
                          that should be configured on this Redis Cluster. Possible
                          values are SystemAssigned, UserAssigned, SystemAssigned,
                          UserAssigned (to enable both).
                        type: string
                    type: object
                  type: array
                location:
                  description: The location of the resource group. Changing this forces
                    a new resource to be created.
                  type: string
                minimumTlsVersion:
                  description: The minimum TLS version. Possible values are 1.0, 1.1
                    and 1.2. Defaults to 1.0.
                  type: string
                patchSchedule:
                  description: A list of patch_schedule blocks as defined below.
                  items:
                    properties:
                      dayOfWeek:
                        description: the Weekday name - possible values include Monday,
                          Tuesday, Wednesday etc.
                        type: string
                      maintenanceWindow:
                        description: The ISO 8601 timespan which specifies the amount
                          of time the Redis Cache can be updated. Defaults to PT5H.
                        type: string
                      startHourUtc:
                        description: the Start Hour for maintenance in UTC - possible
                          values range from 0 - 23.
                        type: number
                    type: object
                  type: array
                privateStaticIpAddress:
                  description: The Static IP Address to assign to the Redis Cache
                    when hosted inside the Virtual Network. This argument implies
                    the use of subnet_id. Changing this forces a new resource to be
                    created.
                  type: string
                publicNetworkAccessEnabled:
                  description: Whether or not public network access is allowed for
                    this Redis Cache. true means this resource could be accessed by
                    both public and private endpoint. false means only private endpoint
                    access is allowed. Defaults to true.
                  type: boolean
                redisConfiguration:
                  description: A redis_configuration as defined below - with some
                    limitations by SKU - defaults/details are shown below.
                  items:
                    properties:
                      aofBackupEnabled:
                        description: Enable or disable AOF persistence for this Redis
                          Cache. Defaults to false.
                        type: boolean
                      aofStorageConnectionString0SecretRef:
                        description: First Storage Account connection string for AOF
                          persistence.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      aofStorageConnectionString1SecretRef:
                        description: Second Storage Account connection string for
                          AOF persistence.
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                      enableAuthentication:
                        description: If set to false, the Redis instance will be accessible
                          without authentication. Defaults to true.
                        type: boolean
                      maxfragmentationmemoryReserved:
                        description: Value in megabytes reserved to accommodate for
                          memory fragmentation. Defaults are shown below.
                        type: number
                      maxmemoryDelta:
                        description: The max-memory delta for this Redis instance.
                          Defaults are shown below.
                        type: number
                      maxmemoryPolicy:
                        description: How Redis will select what to remove when maxmemory
                          is reached. Defaults are shown below. Defaults to volatile-lru.
                        type: string
                      maxmemoryReserved:
                        description: Value in megabytes reserved for non-cache usage
                          e.g. failover. Defaults are shown below.
                        type: number
                      notifyKeyspaceEvents:
                        description: Keyspace notifications allows clients to subscribe
                          to Pub/Sub channels in order to receive events affecting
                          the Redis data set in some way. Reference
                        type: string
                      rdbBackupEnabled:
                        description: Is Backup Enabled? Only supported on Premium
                          SKUs. Defaults to false.
                        type: boolean
                      rdbBackupFrequency:
                        description: 'The Backup Frequency in Minutes. Only supported
                          on Premium SKUs. Possible values are: 15, 30, 60, 360, 720
                          and 1440.'
                        type: number
                      rdbBackupMaxSnapshotCount:
                        description: The maximum number of snapshots to create as
                          a backup. Only supported for Premium SKUs.
                        type: number
                      rdbStorageConnectionStringSecretRef:
                        description: 'The Connection String to the Storage Account.
                          Only supported for Premium SKUs. In the format: DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}.'
                        properties:
                          key:
                            description: The key to select.
                            type: string
                          name:
                            description: Name of the secret.
                            type: string
                          namespace:
                            description: Namespace of the secret.
                            type: string
                        required:
                        - key
                        - name
                        - namespace
                        type: object
                    type: object
                  type: array
                redisVersion:
                  description: 'Redis version. Only major version needed. Valid values:
                    4, 6.'
                  type: string
                replicasPerMaster:
                  description: Amount of replicas to create per master for this Redis
                    Cache.
                  type: number
                replicasPerPrimary:
                  description: Amount of replicas to create per primary for this Redis
                    Cache. If both replicas_per_primary and replicas_per_master are
                    set, they need to be equal.
                  type: number
                resourceGroupName:
                  description: The name of the resource group in which to create the
                    Redis instance. Changing this forces a new resource to be created.
                  type: string
                resourceGroupNameRef:
                  description: Reference to a ResourceGroup in azure to populate resourceGroupName.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of
                            this reference is required. The default is 'Required',
                            which means the reconcile will fail if the reference cannot
                            be resolved. 'Optional' means this reference will be a
                            no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should
                            be resolved. The default is 'IfNotPresent', which will
                            attempt to resolve the reference only when the corresponding
                            field is not present. Use 'Always' to resolve the reference
                            on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                resourceGroupNameSelector:
                  description: Selector for a ResourceGroup in azure to populate resourceGroupName.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                    policy:
                      description: Policies for selection.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of
                            this reference is required. The default is 'Required',
                            which means the reconcile will fail if the reference cannot
                            be resolved. 'Optional' means this reference will be a
                            no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should
                            be resolved. The default is 'IfNotPresent', which will
                            attempt to resolve the reference only when the corresponding
                            field is not present. Use 'Always' to resolve the reference
                            on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  type: object
                shardCount:
                  description: Only available when using the Premium SKU The number
                    of Shards to create on the Redis Cluster.
                  type: number
                skuName:
                  description: The SKU of Redis to use. Possible values are Basic,
                    Standard and Premium.
                  type: string
                subnetId:
                  description: Only available when using the Premium SKU The ID of
                    the Subnet within which the Redis Cache should be deployed. This
                    Subnet must only contain Azure Cache for Redis instances without
                    any other type of resources. Changing this forces a new resource
                    to be created.
                  type: string
                subnetIdRef:
                  description: Reference to a Subnet in network to populate subnetId.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of
                            this reference is required. The default is 'Required',
                            which means the reconcile will fail if the reference cannot
                            be resolved. 'Optional' means this reference will be a
                            no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should
                            be resolved. The default is 'IfNotPresent', which will
                            attempt to resolve the reference only when the corresponding
                            field is not present. Use 'Always' to resolve the reference
                            on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                subnetIdSelector:
                  description: Selector for a Subnet in network to populate subnetId.
                  properties:
                    matchControllerRef:
                      description: MatchControllerRef ensures an object with the same
                        controller reference as the selecting object is selected.
                      type: boolean
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: MatchLabels ensures an object with matching labels
                        is selected.
                      type: object
                    policy:
                      description: Policies for selection.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of
                            this reference is required. The default is 'Required',
                            which means the reconcile will fail if the reference cannot
                            be resolved. 'Optional' means this reference will be a
                            no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should
                            be resolved. The default is 'IfNotPresent', which will
                            attempt to resolve the reference only when the corresponding
                            field is not present. Use 'Always' to resolve the reference
                            on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  type: object
                tags:
                  additionalProperties:
                    type: string
                  description: A mapping of tags to assign to the resource.
                  type: object
                tenantSettings:
                  additionalProperties:
                    type: string
                  description: A mapping of tenant settings to assign to the resource.
                  type: object
                zones:
                  description: Specifies a list of Availability Zones in which this
                    Redis Cache should be located. Changing this forces a new Redis
                    Cache to be created.
                  items:
                    type: string
                  type: array
              type: object
            initProvider:
              description: THIS IS A BETA FIELD. It will be honored unless the Management
                Policies feature flag is disabled. InitProvider holds the same fields
                as ForProvider, with the exception of Identifier and other resource
                reference fields. The fields that are in InitProvider are merged into
                ForProvider when the resource is created. The same fields are also
                added to the terraform ignore_changes hook, to avoid updating them
                after creation. This is useful for fields that are required on creation,
                but we do not desire to update them after creation, for example because
                of an external controller is managing them, like an autoscaler.
              properties:
                capacity:
                  description: The size of the Redis cache to deploy. Valid values
                    for a SKU family of C (Basic/Standard) are 0, 1, 2, 3, 4, 5, 6,
                    and for P (Premium) family are 1, 2, 3, 4, 5.
                  type: number
                enableNonSslPort:
                  description: Enable the non-SSL port (6379) - disabled by default.
                  type: boolean
                family:
                  description: The SKU family/pricing group to use. Valid values are
                    C (for Basic/Standard SKU family) and P (for Premium)
                  type: string
                identity:
                  description: An identity block as defined below.
                  items:
                    properties:
                      identityIds:
                        description: A list of User Assigned Managed Identity IDs
                          to be assigned to this Redis Cluster.
                        items:
                          type: string
                        type: array
                      type:
                        description: Specifies the type of Managed Service Identity
                          that should be configured on this Redis Cluster. Possible
                          values are SystemAssigned, UserAssigned, SystemAssigned,
                          UserAssigned (to enable both).
                        type: string
                    type: object
                  type: array
                location:
                  description: The location of the resource group. Changing this forces
                    a new resource to be created.
                  type: string
                minimumTlsVersion:
                  description: The minimum TLS version. Possible values are 1.0, 1.1
                    and 1.2. Defaults to 1.0.
                  type: string
                patchSchedule:
                  description: A list of patch_schedule blocks as defined below.
                  items:
                    properties:
                      dayOfWeek:
                        description: the Weekday name - possible values include Monday,
                          Tuesday, Wednesday etc.
                        type: string
                      maintenanceWindow:
                        description: The ISO 8601 timespan which specifies the amount
                          of time the Redis Cache can be updated. Defaults to PT5H.
                        type: string
                      startHourUtc:
                        description: the Start Hour for maintenance in UTC - possible
                          values range from 0 - 23.
                        type: number
                    type: object
                  type: array
                privateStaticIpAddress:
                  description: The Static IP Address to assign to the Redis Cache
                    when hosted inside the Virtual Network. This argument implies
                    the use of subnet_id. Changing this forces a new resource to be
                    created.
                  type: string
                publicNetworkAccessEnabled:
                  description: Whether or not public network access is allowed for
                    this Redis Cache. true means this resource could be accessed by
                    both public and private endpoint. false means only private endpoint
                    access is allowed. Defaults to true.
                  type: boolean
                redisConfiguration:
                  description: A redis_configuration as defined below - with some
                    limitations by SKU - defaults/details are shown below.
                  items:
                    properties:
                      aofBackupEnabled:
                        description: Enable or disable AOF persistence for this Redis
                          Cache. Defaults to false.
                        type: boolean
                      enableAuthentication:
                        description: If set to false, the Redis instance will be accessible
                          without authentication. Defaults to true.
                        type: boolean
                      maxfragmentationmemoryReserved:
                        description: Value in megabytes reserved to accommodate for
                          memory fragmentation. Defaults are shown below.
                        type: number
                      maxmemoryDelta:
                        description: The max-memory delta for this Redis instance.
                          Defaults are shown below.
                        type: number
                      maxmemoryPolicy:
                        description: How Redis will select what to remove when maxmemory
                          is reached. Defaults are shown below. Defaults to volatile-lru.
                        type: string
                      maxmemoryReserved:
                        description: Value in megabytes reserved for non-cache usage
                          e.g. failover. Defaults are shown below.
                        type: number
                      notifyKeyspaceEvents:
                        description: Keyspace notifications allows clients to subscribe
                          to Pub/Sub channels in order to receive events affecting
                          the Redis data set in some way. Reference
                        type: string
                      rdbBackupEnabled:
                        description: Is Backup Enabled? Only supported on Premium
                          SKUs. Defaults to false.
                        type: boolean
                      rdbBackupFrequency:
                        description: 'The Backup Frequency in Minutes. Only supported
                          on Premium SKUs. Possible values are: 15, 30, 60, 360, 720
                          and 1440.'
                        type: number
                      rdbBackupMaxSnapshotCount:
                        description: The maximum number of snapshots to create as
                          a backup. Only supported for Premium SKUs.
                        type: number
                    type: object
                  type: array
                redisVersion:
                  description: 'Redis version. Only major version needed. Valid values:
                    4, 6.'
                  type: string
                replicasPerMaster:
                  description: Amount of replicas to create per master for this Redis
                    Cache.
                  type: number
                replicasPerPrimary:
                  description: Amount of replicas to create per primary for this Redis
                    Cache. If both replicas_per_primary and replicas_per_master are
                    set, they need to be equal.
                  type: number
                shardCount:
                  description: Only available when using the Premium SKU The number
                    of Shards to create on the Redis Cluster.
                  type: number
                skuName:
                  description: The SKU of Redis to use. Possible values are Basic,
                    Standard and Premium.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: A mapping of tags to assign to the resource.
                  type: object
                tenantSettings:
                  additionalProperties:
                    type: string
                  description: A mapping of tenant settings to assign to the resource.
                  type: object
                zones:
                  description: Specifies a list of Availability Zones in which this
                    Redis Cache should be located. Changing this forces a new Redis
                    Cache to be created.
                  items:
                    type: string
                  type: array
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS A BETA FIELD. It is on by default but can be opted
                out through a Crossplane feature flag. ManagementPolicies specify
                the array of actions Crossplane is allowed to take on the managed
                and external resources. This field is planned to replace the DeletionPolicy
                field in a future release. Currently, both could be set independently
                and non-default values would be honored if the feature flag is enabled.
                If both are custom, the DeletionPolicy field will be ignored. See
                the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane
                  controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that
                will be used to create, observe, update, and delete this managed resource
                should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this
                        reference is required. The default is 'Required', which means
                        the reconcile will fail if the reference cannot be resolved.
                        'Optional' means this reference will be a no-op if it cannot
                        be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be
                        resolved. The default is 'IfNotPresent', which will attempt
                        to resolve the reference only when the corresponding field
                        is not present. Use 'Always' to resolve the reference on every
                        reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret
                config which contains a name, metadata and a reference to secret store
                config to which any connection details for this managed resource should
                be written. Connection details frequently include the endpoint, username,
                and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config
                    should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of
                            this reference is required. The default is 'Required',
                            which means the reconcile will fail if the reference cannot
                            be resolved. 'Optional' means this reference will be a
                            no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should
                            be resolved. The default is 'IfNotPresent', which will
                            attempt to resolve the reference only when the corresponding
                            field is not present. Use 'Always' to resolve the reference
                            on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to
                        connection secret. - For Kubernetes secrets, this will be
                        used as "metadata.annotations". - It is up to Secret Store
                        implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection
                        secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                        - It is up to Secret Store implementation for others store
                        types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret.
                        - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource. This field is planned to be replaced in a future release
                in favor of PublishConnectionDetailsTo. Currently, both could be set
                independently and connection details would be published to both without
                affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
          x-kubernetes-validations:
          - message: spec.forProvider.capacity is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
              || ''Update'' in self.managementPolicies) || has(self.forProvider.capacity)
              || (has(self.initProvider) && has(self.initProvider.capacity))'
          - message: spec.forProvider.family is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
              || ''Update'' in self.managementPolicies) || has(self.forProvider.family)
              || (has(self.initProvider) && has(self.initProvider.family))'
          - message: spec.forProvider.location is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
              || ''Update'' in self.managementPolicies) || has(self.forProvider.location)
              || (has(self.initProvider) && has(self.initProvider.location))'
          - message: spec.forProvider.redisVersion is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
              || ''Update'' in self.managementPolicies) || has(self.forProvider.redisVersion)
              || (has(self.initProvider) && has(self.initProvider.redisVersion))'
          - message: spec.forProvider.skuName is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
              || ''Update'' in self.managementPolicies) || has(self.forProvider.skuName)
              || (has(self.initProvider) && has(self.initProvider.skuName))'
      required:
      - spec
      type: object
