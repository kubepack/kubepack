apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: meta.k8s.appscode.com
    k8s.io/kind: ResourceDashboard
    k8s.io/resource: resourcedashboards
    k8s.io/version: v1alpha1
  name: meta.k8s.appscode.com-v1alpha1-resourcedashboards
spec:
  resource:
    group: meta.k8s.appscode.com
    kind: ResourceDashboard
    name: resourcedashboards
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          properties:
            dashboards:
              items:
                properties:
                  if:
                    properties:
                      condition:
                        type: string
                      connected:
                        properties:
                          query:
                            properties:
                              byLabel:
                                enum:
                                - auth_via
                                - backup_via
                                - catalog
                                - connect_via
                                - exposed_by
                                - monitored_by
                                - offshoot
                                - restore_into
                                - scaled_by
                                - view
                                - cert_issuer
                                - policy
                                type: string
                              raw:
                                type: string
                              type:
                                enum:
                                - REST
                                - GraphQL
                                type: string
                            required:
                            - type
                            type: object
                          ref:
                            description: GroupKind specifies a Group and a Kind, but does not force a version.  This is useful for identifying concepts during lookup stages without having partially valid types
                            properties:
                              group:
                                type: string
                              kind:
                                type: string
                            required:
                            - group
                            - kind
                            type: object
                        required:
                        - query
                        - ref
                        type: object
                    type: object
                  panels:
                    items:
                      type: string
                    type: array
                  title:
                    type: string
                  vars:
                    items:
                      properties:
                        name:
                          type: string
                        type:
                          default: Source
                          enum:
                          - Source
                          - Target
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              type: array
            provider:
              enum:
              - Grafana
              type: string
            resource:
              description: ResourceID identifies a resource
              properties:
                group:
                  type: string
                kind:
                  description: Kind is the serialized kind of the resource.  It is normally CamelCase and singular.
                  type: string
                name:
                  description: 'Name is the plural name of the resource to serve.  It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.'
                  type: string
                scope:
                  description: ResourceScope is an enum defining the different scopes available to a custom resource
                  type: string
                version:
                  type: string
              required:
              - group
              - kind
              - name
              - scope
              - version
              type: object
          required:
          - dashboards
          - resource
          type: object
      type: object
