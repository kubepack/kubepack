apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: ui.kubedb.com
    k8s.io/kind: DatabaseConnection
    k8s.io/resource: databaseconnections
    k8s.io/version: v1alpha1
  name: ui.kubedb.com-v1alpha1-databaseconnections
spec:
  resource:
    group: ui.kubedb.com
    kind: DatabaseConnection
    name: databaseconnections
    scope: Namespaced
    version: v1alpha1
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          type: string
        kind:
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          properties:
            databases:
              items:
                type: string
              type: array
            inCluster:
              properties:
                caCert:
                  format: byte
                  type: string
                connectOptions:
                  additionalProperties:
                    type: string
                  type: object
                exec:
                  type: string
                host:
                  type: string
                port:
                  format: int32
                  type: integer
                secretRef:
                  properties:
                    name:
                      type: string
                    namespace:
                      type: string
                  required:
                  - name
                  type: object
              type: object
            public:
              items:
                properties:
                  connectOptions:
                    additionalProperties:
                      type: string
                    type: object
                  gateway:
                    items:
                      properties:
                        caCert:
                          format: byte
                          type: string
                        hostname:
                          type: string
                        ip:
                          type: string
                        name:
                          type: string
                        namespace:
                          type: string
                        secretRef:
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - name
                          type: object
                        services:
                          items:
                            properties:
                              alias:
                                type: string
                              ports:
                                items:
                                  properties:
                                    backendServicePort:
                                      format: int32
                                      type: integer
                                    name:
                                      type: string
                                    nodePort:
                                      format: int32
                                      type: integer
                                    port:
                                      format: int32
                                      type: integer
                                  required:
                                  - port
                                  type: object
                                type: array
                            required:
                            - alias
                            - ports
                            type: object
                          type: array
                        ui:
                          items:
                            properties:
                              alias:
                                type: string
                              helmRelease:
                                properties:
                                  name:
                                    default: ""
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              port:
                                properties:
                                  backendServicePort:
                                    format: int32
                                    type: integer
                                  name:
                                    type: string
                                  nodePort:
                                    format: int32
                                    type: integer
                                  port:
                                    format: int32
                                    type: integer
                                required:
                                - port
                                type: object
                              url:
                                type: string
                            required:
                            - alias
                            - port
                            - url
                            type: object
                          type: array
                      required:
                      - name
                      - namespace
                      type: object
                    type: array
                type: object
              type: array
          type: object
      type: object
