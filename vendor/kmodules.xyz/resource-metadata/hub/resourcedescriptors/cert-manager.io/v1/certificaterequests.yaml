apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: cert-manager.io
    k8s.io/kind: CertificateRequest
    k8s.io/resource: certificaterequests
    k8s.io/version: v1
  name: cert-manager.io-v1-certificaterequests
spec:
  connections:
  - labels:
    - offshoot
    level: Controller
    target:
      apiVersion: cert-manager.io/v1
      kind: Certificate
    type: OwnedBy
  resource:
    group: cert-manager.io
    kind: CertificateRequest
    name: certificaterequests
    scope: Namespaced
    version: v1
  validation:
    openAPIV3Schema:
      description: |-
        A CertificateRequest is used to request a signed certificate from one of the
        configured issuers.


        All fields within the CertificateRequest's `spec` are immutable after creation.
        A CertificateRequest will either succeed or fail, as denoted by its `Ready` status
        condition and its `status.failureTime` field.


        A CertificateRequest is a one-shot resource, meaning it represents a single
        point in time request for a certificate and cannot be re-used.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: |-
            Specification of the desired state of the CertificateRequest resource.
            https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
          properties:
            duration:
              description: |-
                Requested 'duration' (i.e. lifetime) of the Certificate. Note that the
                issuer may choose to ignore the requested duration, just like any other
                requested attribute.
              type: string
            extra:
              additionalProperties:
                items:
                  type: string
                type: array
              description: |-
                Extra contains extra attributes of the user that created the CertificateRequest.
                Populated by the cert-manager webhook on creation and immutable.
              type: object
            groups:
              description: |-
                Groups contains group membership of the user that created the CertificateRequest.
                Populated by the cert-manager webhook on creation and immutable.
              items:
                type: string
              type: array
              x-kubernetes-list-type: atomic
            isCA:
              description: |-
                Requested basic constraints isCA value. Note that the issuer may choose
                to ignore the requested isCA value, just like any other requested attribute.


                NOTE: If the CSR in the `Request` field has a BasicConstraints extension,
                it must have the same isCA value as specified here.


                If true, this will automatically add the `cert sign` usage to the list
                of requested `usages`.
              type: boolean
            issuerRef:
              description: |-
                Reference to the issuer responsible for issuing the certificate.
                If the issuer is namespace-scoped, it must be in the same namespace
                as the Certificate. If the issuer is cluster-scoped, it can be used
                from any namespace.


                The `name` field of the reference must always be specified.
              properties:
                group:
                  description: Group of the resource being referred to.
                  type: string
                kind:
                  description: Kind of the resource being referred to.
                  type: string
                name:
                  description: Name of the resource being referred to.
                  type: string
              required:
              - name
              type: object
            request:
              description: |-
                The PEM-encoded X.509 certificate signing request to be submitted to the
                issuer for signing.


                If the CSR has a BasicConstraints extension, its isCA attribute must
                match the `isCA` value of this CertificateRequest.
                If the CSR has a KeyUsage extension, its key usages must match the
                key usages in the `usages` field of this CertificateRequest.
                If the CSR has a ExtKeyUsage extension, its extended key usages
                must match the extended key usages in the `usages` field of this
                CertificateRequest.
              format: byte
              type: string
            uid:
              description: |-
                UID contains the uid of the user that created the CertificateRequest.
                Populated by the cert-manager webhook on creation and immutable.
              type: string
            usages:
              description: |-
                Requested key usages and extended key usages.


                NOTE: If the CSR in the `Request` field has uses the KeyUsage or
                ExtKeyUsage extension, these extensions must have the same values
                as specified here without any additional values.


                If unset, defaults to `digital signature` and `key encipherment`.
              items:
                description: |-
                  KeyUsage specifies valid usage contexts for keys.
                  See:
                  https://tools.ietf.org/html/rfc5280#section-4.2.1.3
                  https://tools.ietf.org/html/rfc5280#section-4.2.1.12


                  Valid KeyUsage values are as follows:
                  "signing",
                  "digital signature",
                  "content commitment",
                  "key encipherment",
                  "key agreement",
                  "data encipherment",
                  "cert sign",
                  "crl sign",
                  "encipher only",
                  "decipher only",
                  "any",
                  "server auth",
                  "client auth",
                  "code signing",
                  "email protection",
                  "s/mime",
                  "ipsec end system",
                  "ipsec tunnel",
                  "ipsec user",
                  "timestamping",
                  "ocsp signing",
                  "microsoft sgc",
                  "netscape sgc"
                enum:
                - signing
                - digital signature
                - content commitment
                - key encipherment
                - key agreement
                - data encipherment
                - cert sign
                - crl sign
                - encipher only
                - decipher only
                - any
                - server auth
                - client auth
                - code signing
                - email protection
                - s/mime
                - ipsec end system
                - ipsec tunnel
                - ipsec user
                - timestamping
                - ocsp signing
                - microsoft sgc
                - netscape sgc
                type: string
              type: array
            username:
              description: |-
                Username contains the name of the user that created the CertificateRequest.
                Populated by the cert-manager webhook on creation and immutable.
              type: string
          required:
          - issuerRef
          - request
          type: object
      type: object
