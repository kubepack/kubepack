apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: cluster.x-k8s.io
    k8s.io/kind: Cluster
    k8s.io/resource: clusters
    k8s.io/version: v1alpha4
  name: cluster.x-k8s.io-v1alpha4-clusters
spec:
  resource:
    group: cluster.x-k8s.io
    kind: Cluster
    name: clusters
    scope: Namespaced
    version: v1alpha4
  validation:
    openAPIV3Schema:
      description: "Cluster is the Schema for the clusters API. \n Deprecated: This
        type will be removed in one of the next releases."
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: ClusterSpec defines the desired state of Cluster.
          properties:
            clusterNetwork:
              description: Cluster network configuration.
              properties:
                apiServerPort:
                  description: APIServerPort specifies the port the API Server should
                    bind to. Defaults to 6443.
                  format: int32
                  type: integer
                pods:
                  description: The network ranges from which Pod networks are allocated.
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
                serviceDomain:
                  description: Domain name for services.
                  type: string
                services:
                  description: The network ranges from which service VIPs are allocated.
                  properties:
                    cidrBlocks:
                      items:
                        type: string
                      type: array
                  required:
                  - cidrBlocks
                  type: object
              type: object
            controlPlaneEndpoint:
              description: ControlPlaneEndpoint represents the endpoint used to communicate
                with the control plane.
              properties:
                host:
                  description: The hostname on which the API server is serving.
                  type: string
                port:
                  description: The port on which the API server is serving.
                  format: int32
                  type: integer
              required:
              - host
              - port
              type: object
            controlPlaneRef:
              description: ControlPlaneRef is an optional reference to a provider-specific
                resource that holds the details for provisioning the Control Plane
                for a Cluster.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            infrastructureRef:
              description: InfrastructureRef is a reference to a provider-specific
                resource that holds the details for provisioning infrastructure for
                a cluster in said provider.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            paused:
              description: Paused can be used to prevent controllers from processing
                the Cluster and all its associated objects.
              type: boolean
            topology:
              description: 'This encapsulates the topology for the cluster. NOTE:
                It is required to enable the ClusterTopology feature gate flag to
                activate managed topologies support; this feature is highly experimental,
                and parts of it might still be not implemented.'
              properties:
                class:
                  description: The name of the ClusterClass object to create the topology.
                  type: string
                controlPlane:
                  description: ControlPlane describes the cluster control plane.
                  properties:
                    metadata:
                      description: "Metadata is the metadata applied to the machines
                        of the ControlPlane. At runtime this metadata is merged with
                        the corresponding metadata from the ClusterClass. \n This
                        field is supported if and only if the control plane provider
                        template referenced in the ClusterClass is Machine based."
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: 'Annotations is an unstructured key value map
                            stored with a resource that may be set by external tools
                            to store and retrieve arbitrary metadata. They are not
                            queryable and should be preserved when modifying objects.
                            More info: http://kubernetes.io/docs/user-guide/annotations'
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: 'Map of string keys and values that can be
                            used to organize and categorize (scope and select) objects.
                            May match selectors of replication controllers and services.
                            More info: http://kubernetes.io/docs/user-guide/labels'
                          type: object
                      type: object
                    replicas:
                      description: Replicas is the number of control plane nodes.
                        If the value is nil, the ControlPlane object is created without
                        the number of Replicas and it's assumed that the control plane
                        controller does not implement support for this field. When
                        specified against a control plane provider that lacks support
                        for this field, this value will be ignored.
                      format: int32
                      type: integer
                  type: object
                rolloutAfter:
                  description: RolloutAfter performs a rollout of the entire cluster
                    one component at a time, control plane first and then machine
                    deployments.
                  format: date-time
                  type: string
                version:
                  description: The Kubernetes version of the cluster.
                  type: string
                workers:
                  description: Workers encapsulates the different constructs that
                    form the worker nodes for the cluster.
                  properties:
                    machineDeployments:
                      description: MachineDeployments is a list of machine deployments
                        in the cluster.
                      items:
                        description: MachineDeploymentTopology specifies the different
                          parameters for a set of worker nodes in the topology. This
                          set of nodes is managed by a MachineDeployment object whose
                          lifecycle is managed by the Cluster controller.
                        properties:
                          class:
                            description: Class is the name of the MachineDeploymentClass
                              used to create the set of worker nodes. This should
                              match one of the deployment classes defined in the ClusterClass
                              object mentioned in the `Cluster.Spec.Class` field.
                            type: string
                          metadata:
                            description: Metadata is the metadata applied to the machines
                              of the MachineDeployment. At runtime this metadata is
                              merged with the corresponding metadata from the ClusterClass.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: 'Annotations is an unstructured key value
                                  map stored with a resource that may be set by external
                                  tools to store and retrieve arbitrary metadata.
                                  They are not queryable and should be preserved when
                                  modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: 'Map of string keys and values that can
                                  be used to organize and categorize (scope and select)
                                  objects. May match selectors of replication controllers
                                  and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                            type: object
                          name:
                            description: Name is the unique identifier for this MachineDeploymentTopology.
                              The value is used with other unique identifiers to create
                              a MachineDeployment's Name (e.g. cluster's name, etc).
                              In case the name is greater than the allowed maximum
                              length, the values are hashed together.
                            type: string
                          replicas:
                            description: Replicas is the number of worker nodes belonging
                              to this set. If the value is nil, the MachineDeployment
                              is created without the number of Replicas (defaulting
                              to zero) and it's assumed that an external entity (like
                              cluster autoscaler) is responsible for the management
                              of this value.
                            format: int32
                            type: integer
                        required:
                        - class
                        - name
                        type: object
                      type: array
                  type: object
              required:
              - class
              - version
              type: object
          type: object
      type: object
