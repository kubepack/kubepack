apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: cluster.x-k8s.io
    k8s.io/kind: Machine
    k8s.io/resource: machines
    k8s.io/version: v1beta1
  name: cluster.x-k8s.io-v1beta1-machines
spec:
  resource:
    group: cluster.x-k8s.io
    kind: Machine
    name: machines
    scope: Namespaced
    version: v1beta1
  validation:
    openAPIV3Schema:
      description: Machine is the Schema for the machines API.
      properties:
        apiVersion:
          description: |-
            APIVersion defines the versioned schema of this representation of an object.
            Servers should convert recognized schemas to the latest internal value, and
            may reject unrecognized values.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
          type: string
        kind:
          description: |-
            Kind is a string value representing the REST resource this object represents.
            Servers may infer this from the endpoint the client submits requests to.
            Cannot be updated.
            In CamelCase.
            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            namespace:
              description: "Namespace defines the space within which each name must
                be unique. An empty namespace is equivalent to the \"default\" namespace,
                but \"default\" is the canonical representation. Not all objects are
                required to be scoped to a namespace - the value of this field for
                those objects will be empty. \n Must be a DNS_LABEL. Cannot be updated.
                More info: http://kubernetes.io/docs/user-guide/namespaces"
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: MachineSpec defines the desired state of Machine.
          properties:
            bootstrap:
              description: |-
                Bootstrap is a reference to a local struct which encapsulates
                fields to configure the Machineâ€™s bootstrapping mechanism.
              properties:
                configRef:
                  description: |-
                    ConfigRef is a reference to a bootstrap provider-specific resource
                    that holds configuration details. The reference is optional to
                    allow users/operators to specify Bootstrap.DataSecretName without
                    the need of a controller.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                        TODO: this design is not final and this field is subject to change in the future.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                dataSecretName:
                  description: |-
                    DataSecretName is the name of the secret that stores the bootstrap data script.
                    If nil, the Machine should remain in the Pending state.
                  type: string
              type: object
            clusterName:
              description: ClusterName is the name of the Cluster this object belongs
                to.
              minLength: 1
              type: string
            failureDomain:
              description: |-
                FailureDomain is the failure domain the machine will be created in.
                Must match a key in the FailureDomains map stored on the cluster object.
              type: string
            infrastructureRef:
              description: |-
                InfrastructureRef is a required reference to a custom resource
                offered by an infrastructure provider.
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: |-
                    If referring to a piece of an object instead of an entire object, this string
                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within a pod, this would take on a value like:
                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]" (container with
                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                    referencing a part of an object.
                    TODO: this design is not final and this field is subject to change in the future.
                  type: string
                kind:
                  description: |-
                    Kind of the referent.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                  type: string
                name:
                  description: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                  type: string
                namespace:
                  description: |-
                    Namespace of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                  type: string
                resourceVersion:
                  description: |-
                    Specific resourceVersion to which this reference is made, if any.
                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                  type: string
                uid:
                  description: |-
                    UID of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            nodeDeletionTimeout:
              description: |-
                NodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                Defaults to 10 seconds.
              type: string
            nodeDrainTimeout:
              description: |-
                NodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                The default value is 0, meaning that the node can be drained without any time limitations.
                NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
              type: string
            nodeVolumeDetachTimeout:
              description: |-
                NodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
              type: string
            providerID:
              description: |-
                ProviderID is the identification ID of the machine provided by the provider.
                This field must match the provider ID as seen on the node object corresponding to this machine.
                This field is required by higher level consumers of cluster-api. Example use case is cluster autoscaler
                with cluster-api as provider. Clean-up logic in the autoscaler compares machines to nodes to find out
                machines at provider which could not get registered as Kubernetes nodes. With cluster-api as a
                generic out-of-tree provider for autoscaler, this field is required by autoscaler to be
                able to have a provider view of the list of machines. Another list of nodes is queried from the k8s apiserver
                and then a comparison is done to find out unregistered machines and are marked for delete.
                This field will be set by the actuators and consumed by higher level entities like autoscaler that will
                be interfacing with cluster-api as generic provider.
              type: string
            version:
              description: |-
                Version defines the desired Kubernetes version.
                This field is meant to be optionally used by bootstrap providers.
              type: string
          required:
          - bootstrap
          - clusterName
          - infrastructureRef
          type: object
      type: object
