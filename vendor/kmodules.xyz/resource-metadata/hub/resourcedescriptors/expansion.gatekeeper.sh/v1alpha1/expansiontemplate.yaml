apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: expansion.gatekeeper.sh
    k8s.io/kind: ExpansionTemplate
    k8s.io/resource: expansiontemplate
    k8s.io/version: v1alpha1
  name: expansion.gatekeeper.sh-v1alpha1-expansiontemplate
spec:
  resource:
    group: expansion.gatekeeper.sh
    kind: ExpansionTemplate
    name: expansiontemplate
    scope: Cluster
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: ExpansionTemplate is the Schema for the ExpansionTemplate API.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: ExpansionTemplateSpec defines the desired state of ExpansionTemplate.
          properties:
            applyTo:
              description: ApplyTo lists the specific groups, versions and kinds of
                generator resources which will be expanded.
              items:
                description: ApplyTo determines what GVKs items the mutation should
                  apply to. Globs are not allowed.
                properties:
                  groups:
                    items:
                      type: string
                    type: array
                  kinds:
                    items:
                      type: string
                    type: array
                  versions:
                    items:
                      type: string
                    type: array
                type: object
              type: array
            enforcementAction:
              description: EnforcementAction specifies the enforcement action to be
                used for resources matching the ExpansionTemplate. Specifying an empty
                value will use the enforcement action specified by the Constraint
                in violation.
              type: string
            generatedGVK:
              description: GeneratedGVK specifies the GVK of the resources which the
                generator resource creates.
              properties:
                group:
                  type: string
                kind:
                  type: string
                version:
                  type: string
              type: object
            templateSource:
              description: TemplateSource specifies the source field on the generator
                resource to use as the base for expanded resource. For Pod-creating
                generators, this is usually spec.template
              type: string
          type: object
      type: object
