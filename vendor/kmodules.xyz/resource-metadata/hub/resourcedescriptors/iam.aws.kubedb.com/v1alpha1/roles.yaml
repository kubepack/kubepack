apiVersion: meta.k8s.appscode.com/v1alpha1
kind: ResourceDescriptor
metadata:
  creationTimestamp: null
  labels:
    k8s.io/group: iam.aws.kubedb.com
    k8s.io/kind: Role
    k8s.io/resource: roles
    k8s.io/version: v1alpha1
  name: iam.aws.kubedb.com-v1alpha1-roles
spec:
  resource:
    group: iam.aws.kubedb.com
    kind: Role
    name: roles
    scope: Cluster
    version: v1alpha1
  validation:
    openAPIV3Schema:
      description: Role is the Schema for the Roles API. Provides an IAM role.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              description: 'Name must be unique within a namespace. Is required when
                creating resources, although some resources may allow a client to
                request the generation of an appropriate name automatically. Name
                is primarily intended for creation idempotence and configuration definition.
                Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Map of string keys and values that can be used to organize
                and categorize (scope and select) objects. May match selectors of
                replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
              type: object
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key value map stored with
                a resource that may be set by external tools to store and retrieve
                arbitrary metadata. They are not queryable and should be preserved
                when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
              type: object
          type: object
        spec:
          description: RoleSpec defines the desired state of Role
          properties:
            deletionPolicy:
              default: Delete
              description: 'DeletionPolicy specifies what will happen to the underlying
                external when this managed resource is deleted - either "Delete" or
                "Orphan" the external resource. This field is planned to be deprecated
                in favor of the ManagementPolicies field in a future release. Currently,
                both could be set independently and non-default values would be honored
                if the feature flag is enabled. See the design doc for more information:
                https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
              enum:
              - Orphan
              - Delete
              type: string
            forProvider:
              properties:
                assumeRolePolicy:
                  description: Policy that grants an entity permission to assume the
                    role.
                  type: string
                description:
                  description: Description of the role.
                  type: string
                forceDetachPolicies:
                  description: Whether to force detaching any policies the role has
                    before destroying it. Defaults to false.
                  type: boolean
                inlinePolicy:
                  description: Configuration block defining an exclusive set of IAM
                    inline policies associated with the IAM role. See below. If no
                    blocks are configured, Crossplane will not manage any inline policies
                    in this resource. Configuring one empty block (i.e., inline_policy
                    {}) will cause Crossplane to remove all inline policies added
                    out of band on apply.
                  items:
                    properties:
                      name:
                        description: Friendly name of the role. See IAM Identifiers
                          for more information.
                        type: string
                      policy:
                        description: Policy document as a JSON formatted string.
                        type: string
                    type: object
                  type: array
                managedPolicyArns:
                  description: Set of exclusive IAM managed policy ARNs to attach
                    to the IAM role. If this attribute is not configured, Crossplane
                    will ignore policy attachments to this resource. When configured,
                    Crossplane will align the role's managed policy attachments with
                    this set by attaching or detaching managed policies. Configuring
                    an empty set (i.e., managed_policy_arns = []) will cause Crossplane
                    to remove all managed policy attachments.
                  items:
                    type: string
                  type: array
                maxSessionDuration:
                  description: Maximum session duration (in seconds) that you want
                    to set for the specified role. If you do not specify a value for
                    this setting, the default maximum of one hour is applied. This
                    setting can have a value from 1 hour to 12 hours.
                  type: number
                path:
                  description: Path to the role. See IAM Identifiers for more information.
                  type: string
                permissionsBoundary:
                  description: ARN of the policy that is used to set the permissions
                    boundary for the role.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: Key-value mapping of tags for the IAM role. If configured
                    with a provider default_tags configuration block present, tags
                    with matching keys will overwrite those defined at the provider-level.
                  type: object
                tagsAll:
                  additionalProperties:
                    type: string
                  description: A map of tags assigned to the resource, including those
                    inherited from the provider default_tags configuration block.
                  type: object
              type: object
            initProvider:
              description: THIS IS A BETA FIELD. It will be honored unless the Management
                Policies feature flag is disabled. InitProvider holds the same fields
                as ForProvider, with the exception of Identifier and other resource
                reference fields. The fields that are in InitProvider are merged into
                ForProvider when the resource is created. The same fields are also
                added to the terraform ignore_changes hook, to avoid updating them
                after creation. This is useful for fields that are required on creation,
                but we do not desire to update them after creation, for example because
                of an external controller is managing them, like an autoscaler.
              properties:
                assumeRolePolicy:
                  description: Policy that grants an entity permission to assume the
                    role.
                  type: string
                description:
                  description: Description of the role.
                  type: string
                forceDetachPolicies:
                  description: Whether to force detaching any policies the role has
                    before destroying it. Defaults to false.
                  type: boolean
                inlinePolicy:
                  description: Configuration block defining an exclusive set of IAM
                    inline policies associated with the IAM role. See below. If no
                    blocks are configured, Crossplane will not manage any inline policies
                    in this resource. Configuring one empty block (i.e., inline_policy
                    {}) will cause Crossplane to remove all inline policies added
                    out of band on apply.
                  items:
                    properties:
                      name:
                        description: Friendly name of the role. See IAM Identifiers
                          for more information.
                        type: string
                      policy:
                        description: Policy document as a JSON formatted string.
                        type: string
                    type: object
                  type: array
                managedPolicyArns:
                  description: Set of exclusive IAM managed policy ARNs to attach
                    to the IAM role. If this attribute is not configured, Crossplane
                    will ignore policy attachments to this resource. When configured,
                    Crossplane will align the role's managed policy attachments with
                    this set by attaching or detaching managed policies. Configuring
                    an empty set (i.e., managed_policy_arns = []) will cause Crossplane
                    to remove all managed policy attachments.
                  items:
                    type: string
                  type: array
                maxSessionDuration:
                  description: Maximum session duration (in seconds) that you want
                    to set for the specified role. If you do not specify a value for
                    this setting, the default maximum of one hour is applied. This
                    setting can have a value from 1 hour to 12 hours.
                  type: number
                path:
                  description: Path to the role. See IAM Identifiers for more information.
                  type: string
                permissionsBoundary:
                  description: ARN of the policy that is used to set the permissions
                    boundary for the role.
                  type: string
                tags:
                  additionalProperties:
                    type: string
                  description: Key-value mapping of tags for the IAM role. If configured
                    with a provider default_tags configuration block present, tags
                    with matching keys will overwrite those defined at the provider-level.
                  type: object
                tagsAll:
                  additionalProperties:
                    type: string
                  description: A map of tags assigned to the resource, including those
                    inherited from the provider default_tags configuration block.
                  type: object
              type: object
            managementPolicies:
              default:
              - '*'
              description: 'THIS IS A BETA FIELD. It is on by default but can be opted
                out through a Crossplane feature flag. ManagementPolicies specify
                the array of actions Crossplane is allowed to take on the managed
                and external resources. This field is planned to replace the DeletionPolicy
                field in a future release. Currently, both could be set independently
                and non-default values would be honored if the feature flag is enabled.
                If both are custom, the DeletionPolicy field will be ignored. See
                the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
              items:
                description: A ManagementAction represents an action that the Crossplane
                  controllers can take on an external resource.
                enum:
                - Observe
                - Create
                - Update
                - Delete
                - LateInitialize
                - '*'
                type: string
              type: array
            providerConfigRef:
              default:
                name: default
              description: ProviderConfigReference specifies how the provider that
                will be used to create, observe, update, and delete this managed resource
                should be configured.
              properties:
                name:
                  description: Name of the referenced object.
                  type: string
                policy:
                  description: Policies for referencing.
                  properties:
                    resolution:
                      default: Required
                      description: Resolution specifies whether resolution of this
                        reference is required. The default is 'Required', which means
                        the reconcile will fail if the reference cannot be resolved.
                        'Optional' means this reference will be a no-op if it cannot
                        be resolved.
                      enum:
                      - Required
                      - Optional
                      type: string
                    resolve:
                      description: Resolve specifies when this reference should be
                        resolved. The default is 'IfNotPresent', which will attempt
                        to resolve the reference only when the corresponding field
                        is not present. Use 'Always' to resolve the reference on every
                        reconcile.
                      enum:
                      - Always
                      - IfNotPresent
                      type: string
                  type: object
              required:
              - name
              type: object
            publishConnectionDetailsTo:
              description: PublishConnectionDetailsTo specifies the connection secret
                config which contains a name, metadata and a reference to secret store
                config to which any connection details for this managed resource should
                be written. Connection details frequently include the endpoint, username,
                and password required to connect to the managed resource.
              properties:
                configRef:
                  default:
                    name: default
                  description: SecretStoreConfigRef specifies which secret store config
                    should be used for this ConnectionSecret.
                  properties:
                    name:
                      description: Name of the referenced object.
                      type: string
                    policy:
                      description: Policies for referencing.
                      properties:
                        resolution:
                          default: Required
                          description: Resolution specifies whether resolution of
                            this reference is required. The default is 'Required',
                            which means the reconcile will fail if the reference cannot
                            be resolved. 'Optional' means this reference will be a
                            no-op if it cannot be resolved.
                          enum:
                          - Required
                          - Optional
                          type: string
                        resolve:
                          description: Resolve specifies when this reference should
                            be resolved. The default is 'IfNotPresent', which will
                            attempt to resolve the reference only when the corresponding
                            field is not present. Use 'Always' to resolve the reference
                            on every reconcile.
                          enum:
                          - Always
                          - IfNotPresent
                          type: string
                      type: object
                  required:
                  - name
                  type: object
                metadata:
                  description: Metadata is the metadata for connection secret.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: Annotations are the annotations to be added to
                        connection secret. - For Kubernetes secrets, this will be
                        used as "metadata.annotations". - It is up to Secret Store
                        implementation for others store types.
                      type: object
                    labels:
                      additionalProperties:
                        type: string
                      description: Labels are the labels/tags to be added to connection
                        secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                        - It is up to Secret Store implementation for others store
                        types.
                      type: object
                    type:
                      description: Type is the SecretType for the connection secret.
                        - Only valid for Kubernetes Secret Stores.
                      type: string
                  type: object
                name:
                  description: Name is the name of the connection secret.
                  type: string
              required:
              - name
              type: object
            writeConnectionSecretToRef:
              description: WriteConnectionSecretToReference specifies the namespace
                and name of a Secret to which any connection details for this managed
                resource should be written. Connection details frequently include
                the endpoint, username, and password required to connect to the managed
                resource. This field is planned to be replaced in a future release
                in favor of PublishConnectionDetailsTo. Currently, both could be set
                independently and connection details would be published to both without
                affecting each other.
              properties:
                name:
                  description: Name of the secret.
                  type: string
                namespace:
                  description: Namespace of the secret.
                  type: string
              required:
              - name
              - namespace
              type: object
          required:
          - forProvider
          type: object
          x-kubernetes-validations:
          - message: spec.forProvider.assumeRolePolicy is a required parameter
            rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
              || ''Update'' in self.managementPolicies) || has(self.forProvider.assumeRolePolicy)
              || (has(self.initProvider) && has(self.initProvider.assumeRolePolicy))'
      required:
      - spec
      type: object
